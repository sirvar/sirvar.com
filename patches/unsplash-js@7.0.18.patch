diff --git a/CHANGELOG.md b/CHANGELOG.md
deleted file mode 100644
index a183ba085a6a8b8561e8d84479e570086911411c..0000000000000000000000000000000000000000
diff --git a/dist/helpers/errors.d.ts b/dist/helpers/errors.d.ts
index 2f67dc6483f482816dee94ae6fe4b92b60a6f8f8..5b5aca5976644520bd8dbfdd0b08d7a51a2349ba 100644
--- a/dist/helpers/errors.d.ts
+++ b/dist/helpers/errors.d.ts
@@ -1,6 +1,6 @@
 import { AnyJson, NonEmptyArray } from './typescript';
-export declare type Errors = NonEmptyArray<string>;
-export declare type ErrorSource = 'api' | 'decoding';
+export type Errors = NonEmptyArray<string>;
+export type ErrorSource = 'api' | 'decoding';
 export declare const getErrorForBadStatusCode: (jsonResponse: AnyJson) => {
     errors: Errors;
     source: ErrorSource;
diff --git a/dist/helpers/feed.d.ts b/dist/helpers/feed.d.ts
index 7750df3e47dd7c680d254a60cc36f728dbe1c420..b4829949fa0d36e375b3c9adbdc86a99ca131432 100644
--- a/dist/helpers/feed.d.ts
+++ b/dist/helpers/feed.d.ts
@@ -1,5 +1,5 @@
 import { HandleResponse } from './response';
-declare type FeedResponse<T> = {
+type FeedResponse<T> = {
     results: T[];
     total: number;
 };
diff --git a/dist/helpers/fp.d.ts b/dist/helpers/fp.d.ts
index 294b51e334d001ee436144c04176168752634e08..a22a3486714115082bdaaf98a08cedd978673016 100644
--- a/dist/helpers/fp.d.ts
+++ b/dist/helpers/fp.d.ts
@@ -1,7 +1,7 @@
 /** Takes a dictionary containing nullish values and returns a dictionary of all the defined
  * (non-nullish) values.
  */
-export declare const compactDefined: <A>(obj: Record<string, A | null | undefined>) => Record<string, A>;
+export declare const compactDefined: <A>(obj: Record<string, A>) => Record<string, A>;
 /**
  * copied from `fp-ts`
  * https://github.com/gcanti/fp-ts/blob/70190b5a03ddc2d31b4708c75c6dfad81d0bfa21/perf/function/flow.tÂ¡s
diff --git a/dist/helpers/query.d.ts b/dist/helpers/query.d.ts
index ccc421dfc805463955e20e74735d59d9f5a32cd6..0b91d00f049baca4e2655fd344dc9f40eb4eab0e 100644
--- a/dist/helpers/query.d.ts
+++ b/dist/helpers/query.d.ts
@@ -1,10 +1,10 @@
 import { PaginationParams } from '../types/request';
-export declare const getCollections: (collectionIds?: string[] | undefined) => {
+export declare const getCollections: (collectionIds?: string[]) => {
     collections: string;
 } | {
     collections?: undefined;
 };
-export declare const getTopics: (topicIds?: string[] | undefined) => {
+export declare const getTopics: (topicIds?: string[]) => {
     topics: string;
 } | {
     topics?: undefined;
diff --git a/dist/helpers/request.d.ts b/dist/helpers/request.d.ts
index f5607513e6f2480f4e1a8f6a20976bf84d0ea42f..f365ea0ba8ea339e3923d54e7d4a123073026be2 100644
--- a/dist/helpers/request.d.ts
+++ b/dist/helpers/request.d.ts
@@ -1,18 +1,18 @@
 import { ApiResponse, HandleResponse } from './response';
 import { OmitStrict } from './typescript';
 import { BuildUrlParams } from './url';
-declare type FetchParams = Pick<RequestInit, 'method'>;
+type FetchParams = Pick<RequestInit, 'method'>;
 /**
  * The params generated by the library
  */
-declare type BaseRequestParams = BuildUrlParams & FetchParams & Pick<RequestInit, 'headers'>;
+type BaseRequestParams = BuildUrlParams & FetchParams & Pick<RequestInit, 'headers'>;
 /**
  * Additional fetch options provided by the user on a per-call basis
  */
 export interface AdditionalFetchOptions extends OmitStrict<RequestInit, keyof FetchParams> {
 }
-export declare type CompleteRequestParams = BaseRequestParams & AdditionalFetchOptions;
-declare type HandleRequest<Args> = (a: Args, additionalFetchOptions?: AdditionalFetchOptions) => CompleteRequestParams;
+export type CompleteRequestParams = BaseRequestParams & AdditionalFetchOptions;
+type HandleRequest<Args> = (a: Args, additionalFetchOptions?: AdditionalFetchOptions) => CompleteRequestParams;
 /**
  * helper used to type-check the arguments, and add default params for all requests
  */
@@ -20,7 +20,7 @@ export declare const createRequestHandler: <Args>(fn: (a: Args) => BaseRequestPa
 /**
  * Initial parameters that apply to all calls
  */
-export declare type InitParams = {
+export type InitParams = {
     apiVersion?: string;
     fetch?: typeof fetch;
 } & OmitStrict<RequestInit, 'method' | 'body'> & ({
@@ -30,15 +30,15 @@ export declare type InitParams = {
     apiUrl: string;
     accessKey?: never;
 });
-declare type RequestGenerator<Args, ResponseType> = {
+type RequestGenerator<Args, ResponseType> = {
     handleRequest: HandleRequest<Args>;
     handleResponse: HandleResponse<ResponseType>;
 };
-declare type Endpoint<PathnameParams, RequestArgs, ResponseType> = {
+type Endpoint<PathnameParams, RequestArgs, ResponseType> = {
     getPathname: (params: PathnameParams) => string;
 } & RequestGenerator<RequestArgs, ResponseType>;
 export declare const makeEndpoint: <PathnameParams, RequestArgs, ResponseType_1>(endpoint: Endpoint<PathnameParams, RequestArgs, ResponseType_1>) => Endpoint<PathnameParams, RequestArgs, ResponseType_1>;
-declare type GeneratedRequestFunction<Args, ResponseType> = (...a: Parameters<HandleRequest<Args>>) => Promise<ApiResponse<ResponseType>>;
-declare type InitMakeRequest = (args: InitParams) => <Args, ResponseType>(handlers: RequestGenerator<Args, ResponseType>) => GeneratedRequestFunction<Args, ResponseType>;
+type GeneratedRequestFunction<Args, ResponseType> = (...a: Parameters<HandleRequest<Args>>) => Promise<ApiResponse<ResponseType>>;
+type InitMakeRequest = (args: InitParams) => <Args, ResponseType>(handlers: RequestGenerator<Args, ResponseType>) => GeneratedRequestFunction<Args, ResponseType>;
 export declare const initMakeRequest: InitMakeRequest;
 export {};
diff --git a/dist/helpers/response.d.ts b/dist/helpers/response.d.ts
index b028ad303c3a234cf9e174e2c43cd677689cb645..88683ad69ed4214829918e14f0803a2d3dc8070a 100644
--- a/dist/helpers/response.d.ts
+++ b/dist/helpers/response.d.ts
@@ -1,5 +1,5 @@
 import { Errors, ErrorSource } from './errors';
-export declare type ApiResponse<T> = {
+export type ApiResponse<T> = {
     type: 'success';
     response: T;
     originalResponse: Response;
@@ -13,7 +13,7 @@ export declare type ApiResponse<T> = {
     errors: Errors;
     status: number;
 };
-export declare type HandleResponse<T> = (args: {
+export type HandleResponse<T> = (args: {
     response: Response;
 }) => Promise<T>;
 export declare const handleFetchResponse: <ResponseType_1>(handleResponse: HandleResponse<ResponseType_1>) => (response: Response) => Promise<ApiResponse<ResponseType_1>>;
diff --git a/dist/helpers/typescript.d.ts b/dist/helpers/typescript.d.ts
index c5db09b9326680cd5e40b1fc70950d3805a939a7..9c99484089386925a9981d216bd5b0ec5f0268b3 100644
--- a/dist/helpers/typescript.d.ts
+++ b/dist/helpers/typescript.d.ts
@@ -1,20 +1,20 @@
-export declare type AnyJson = boolean | number | string | null | JsonArray | JsonMap;
-export declare type JsonMap = {
+export type AnyJson = boolean | number | string | null | JsonArray | JsonMap;
+export type JsonMap = {
     [key: string]: AnyJson;
 };
-export declare type JsonArray = Array<AnyJson>;
+export type JsonArray = Array<AnyJson>;
 export declare const checkIsString: Refinement<unknown, string>;
 /**
  * https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-377567046
  */
-export declare type OmitStrict<T, K extends keyof T> = Omit<T, K>;
+export type OmitStrict<T, K extends keyof T> = Omit<T, K>;
 /**
  * Unlike TypeScript's `NonNullable`, this does _not_ include `undefined`
  */
-export declare type Nullable<T> = T | null;
-export declare const isDefined: <T>(x: T | null | undefined) => x is T;
-export declare type NonEmptyArray<T> = [T, ...T[]];
-declare type Refinement<A, B extends A> = (a: A) => a is B;
+export type Nullable<T> = T | null;
+export declare const isDefined: <T>(x: T) => x is T;
+export type NonEmptyArray<T> = [T, ...T[]];
+type Refinement<A, B extends A> = (a: A) => a is B;
 export declare function getRefinement<A, B extends A>(getB: (a: A) => Nullable<B>): Refinement<A, B>;
 export declare const checkIsNonEmptyArray: <T>(a: T[]) => a is NonEmptyArray<T>;
 export {};
diff --git a/dist/helpers/url.d.ts b/dist/helpers/url.d.ts
index 975185452a6dd212a729082c860b9bc89afceb28..ff00288ff2aa84d1bca009d1d5f6cf7fefbafdfd 100644
--- a/dist/helpers/url.d.ts
+++ b/dist/helpers/url.d.ts
@@ -1,13 +1,13 @@
-declare type Query = {
+type Query = {
     [index: string]: string | number | boolean;
 };
-export declare type BuildUrlParams = {
+export type BuildUrlParams = {
     pathname: string;
     query: Query;
 };
 export declare const buildUrl: ({ pathname, query }: BuildUrlParams) => (apiUrl: string) => string;
 export declare const parseQueryAndPathname: (url: string) => {
     query: Query;
-    pathname: string | undefined;
+    pathname: string;
 };
 export {};
diff --git a/dist/index.d.ts b/dist/index.d.ts
index b54739d6a6f426fdde94ac542a78eb9f355e4405..489e2025dfd992f31c55e8f616cb477ba2357022 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -6,88 +6,94 @@ export declare const createApi: (args: import("./helpers/request").InitParams) =
     photos: {
         get: (a: {
             photoId: string;
-        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<import("./methods/photos/types").Full>>;
-        list: (a: import("./types/request").PaginationParams | undefined, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<{
+        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<import("./methods/photos/types").Full>>;
+        list: (a: import("./types/request").PaginationParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<{
             results: import("./methods/photos/types").Basic[];
             total: number;
         }>>;
         getStats: (a: {
             photoId: string;
-        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<import("./methods/photos/types").Stats>>;
-        getRandom: (a: photos.RandomParams | undefined, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<import("./methods/photos/types").Random | import("./methods/photos/types").Random[]>>;
+        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<import("./methods/photos/types").Stats>>;
+        getRandom: (a: photos.RandomParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<import("./methods/photos/types").Random | import("./methods/photos/types").Random[]>>;
         trackDownload: (a: {
             downloadLocation: string;
-        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<{
+        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<{
             url: string;
         }>>;
     };
     users: {
         getPhotos: (a: {
-            stats?: boolean | undefined;
+            stats?: boolean;
         } & import("./types/request").OrientationParam & {
             username: string;
-        } & import("./types/request").PaginationParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<{
+        } & import("./types/request").PaginationParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<{
             results: import("./methods/photos/types").Basic[];
             total: number;
         }>>;
         getCollections: (a: {
             username: string;
-        } & import("./types/request").PaginationParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<{
+        } & import("./types/request").PaginationParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<{
             results: import("./methods/collections/types").Basic[];
             total: number;
         }>>;
         getLikes: (a: import("./types/request").OrientationParam & {
             username: string;
-        } & import("./types/request").PaginationParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<{
+        } & import("./types/request").PaginationParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<{
             results: import("./methods/photos/types").Basic[];
             total: number;
         }>>;
+        getStatistics: (a: {
+            username: string;
+        } & {
+            quantity?: number;
+            resolution?: string;
+        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<import("./methods/users/types").Statistics>>;
         get: (a: {
             username: string;
-        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<import("./methods/users/types").Full>>;
+        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<import("./methods/users/types").Full>>;
     };
     search: {
-        getCollections: (a: search.SearchParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<import("./methods/search/types/response").Collections>>;
+        getCollections: (a: search.SearchParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<import("./methods/search/types/response").Collections>>;
         getPhotos: (a: {
             query: string;
         } & Pick<import("./types/request").PaginationParams, "page" | "perPage"> & import("./types/request").OrientationParam & {
-            orderBy?: import("./methods/search/types/request").SearchOrderBy | undefined;
-            color?: import("./methods/search/types/request").ColorId | undefined;
-            plus?: import("./types/request").Plus | undefined;
-            lang?: import("./methods/search/types/request").Language | undefined;
-            contentFilter?: import("./methods/search/types/request").ContentFilter | undefined;
-            collectionIds?: string[] | undefined;
-        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<import("./methods/search/types/response").Photos>>;
-        getUsers: (a: search.SearchParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<import("./methods/search/types/response").Users>>;
+            orderBy?: import("./methods/search/types/request").SearchOrderBy;
+            color?: import("./methods/search/types/request").ColorId;
+            plus?: import("./types/request").Plus;
+            lang?: import("./methods/search/types/request").Language;
+            contentFilter?: import("./methods/search/types/request").ContentFilter;
+            collectionIds?: string[];
+        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<import("./methods/search/types/response").Photos>>;
+        getUsers: (a: search.SearchParams, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<import("./methods/search/types/response").Users>>;
     };
     collections: {
         getPhotos: (a: {
             collectionId: string;
-        } & import("./types/request").PaginationParams & import("./types/request").OrientationParam, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<{
+        } & import("./types/request").PaginationParams & import("./types/request").OrientationParam, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<{
             results: any[];
             total: number;
         }>>;
         get: (a: {
             collectionId: string;
-        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<any>>;
-        list: (a: Pick<import("./types/request").PaginationParams, "page" | "perPage"> | undefined, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<{
+        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<any>>;
+        list: (a: Pick<import("./types/request").PaginationParams, "page" | "perPage">, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<{
             results: any[];
             total: number;
         }>>;
         getRelated: (a: {
             collectionId: string;
-        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<any>>;
+        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<any>>;
     };
     topics: {
         list: (a: import("./helpers/typescript").OmitStrict<import("./types/request").PaginationParams, "orderBy"> & {
-            orderBy?: topics.TopicOrderBy | undefined;
-            topicIdsOrSlugs?: string[] | undefined;
-        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<{
+            orderBy?: topics.TopicOrderBy;
+            topicIdsOrSlugs?: string[];
+        }, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<{
             results: import("./methods/topics/types").Basic[];
             total: number;
         }>>;
-        get: (a: topics.TopicIdOrSlug, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<import("./methods/topics/types").Full>>;
-        getPhotos: (a: topics.TopicIdOrSlug & import("./types/request").PaginationParams & import("./types/request").OrientationParam, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions | undefined) => Promise<import("./helpers/response").ApiResponse<{
+        get: (a: topics.TopicIdOrSlug, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<import("./methods/topics/types").Full>>;
+        getPhotos: (a: topics.TopicIdOrSlug & import("./types/request").PaginationParams & import("./types/request").OrientationParam, additionalFetchOptions?: import("./helpers/request").AdditionalFetchOptions) => Promise<import("./helpers/response").ApiResponse<{
             results: import("./methods/photos/types").Basic[];
             total: number;
         }>>;
diff --git a/dist/methods/collections/index.d.ts b/dist/methods/collections/index.d.ts
index 212c3f8d83586b3cec0fde2ce87b64e7c7dd2447..03b40a9bf43ce605db81aedef11ac7ebc28af8c6 100644
--- a/dist/methods/collections/index.d.ts
+++ b/dist/methods/collections/index.d.ts
@@ -1,11 +1,11 @@
 import { OrientationParam, PaginationParams } from '../../types/request';
-declare type CollectionId = {
+type CollectionId = {
     collectionId: string;
 };
 export declare const getPhotos: {
     getPathname: (params: CollectionId) => string;
 } & {
-    handleRequest: (a: CollectionId & PaginationParams & OrientationParam, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: CollectionId & PaginationParams & OrientationParam, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<{
         results: any[];
         total: number;
@@ -14,13 +14,13 @@ export declare const getPhotos: {
 export declare const get: {
     getPathname: (params: CollectionId) => string;
 } & {
-    handleRequest: (a: CollectionId, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: CollectionId, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<any>;
 };
 export declare const list: {
     getPathname: (params: unknown) => string;
 } & {
-    handleRequest: (a: Pick<PaginationParams, "page" | "perPage"> | undefined, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: Pick<PaginationParams, "page" | "perPage">, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<{
         results: any[];
         total: number;
@@ -29,7 +29,7 @@ export declare const list: {
 export declare const getRelated: {
     getPathname: (params: CollectionId) => string;
 } & {
-    handleRequest: (a: CollectionId, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: CollectionId, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<any>;
 };
 export {};
diff --git a/dist/methods/photos/index.d.ts b/dist/methods/photos/index.d.ts
index dac5c1d1b405c233a1ca8211026079bedfcf40b7..090d182a9a68908240bee985a9b577eee117bc32 100644
--- a/dist/methods/photos/index.d.ts
+++ b/dist/methods/photos/index.d.ts
@@ -1,12 +1,12 @@
 import { OrientationParam, PaginationParams } from '../../types/request';
 import * as Photo from './types';
-declare type PhotoId = {
+type PhotoId = {
     photoId: string;
 };
 export declare const list: {
-    getPathname: (params: void | undefined) => string;
+    getPathname: (params: void) => string;
 } & {
-    handleRequest: (a: PaginationParams | undefined, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<{
         results: Photo.Basic[];
         total: number;
@@ -15,16 +15,16 @@ export declare const list: {
 export declare const get: {
     getPathname: (params: PhotoId) => string;
 } & {
-    handleRequest: (a: PhotoId, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: PhotoId, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<Photo.Full>;
 };
 export declare const getStats: {
     getPathname: (params: PhotoId) => string;
 } & {
-    handleRequest: (a: PhotoId, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: PhotoId, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<Photo.Stats>;
 };
-export declare type RandomParams = {
+export type RandomParams = {
     collectionIds?: string[];
     topicIds?: string[];
     featured?: boolean;
@@ -36,13 +36,13 @@ export declare type RandomParams = {
 export declare const getRandom: {
     getPathname: (params: unknown) => string;
 } & {
-    handleRequest: (a: RandomParams | undefined, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: RandomParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<Photo.Random | Photo.Random[]>;
 };
 export declare const trackDownload: {
     handleRequest: (a: {
         downloadLocation: string;
-    }, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    }, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<{
         url: string;
     }>;
diff --git a/dist/methods/photos/types.d.ts b/dist/methods/photos/types.d.ts
index 848e933a5bb1528a0ba253467d1c36497c662747..a214a3385ba4601ed6f3ec89b947a4f05ac3d814 100644
--- a/dist/methods/photos/types.d.ts
+++ b/dist/methods/photos/types.d.ts
@@ -69,7 +69,7 @@ interface ExifAndLocation {
 }
 export interface Random extends Basic, ExifAndLocation {
 }
-declare type RelatedCollectionsType = 'related' | 'collected';
+type RelatedCollectionsType = 'related' | 'collected';
 export interface Full extends Basic, ExifAndLocation {
     related_collections: {
         type: RelatedCollectionsType;
diff --git a/dist/methods/search/index.d.ts b/dist/methods/search/index.d.ts
index b2e63fd9cbbebdbbcd5e01b86e07413fc9fb3d0e..34f28e387f09c5ced4851abe8faed557197b5e3a 100644
--- a/dist/methods/search/index.d.ts
+++ b/dist/methods/search/index.d.ts
@@ -1,10 +1,10 @@
 import { OrientationParam, PaginationParams, Plus } from '../../types/request';
 import { ColorId, ContentFilter, Language, SearchOrderBy } from './types/request';
 import * as SearchResponse from './types/response';
-export declare type SearchParams = {
+export type SearchParams = {
     query: string;
 } & Pick<PaginationParams, 'page' | 'perPage'>;
-declare type SearchPhotosParams = SearchParams & OrientationParam & {
+type SearchPhotosParams = SearchParams & OrientationParam & {
     /**
      * API defaults to `"relevant"` if no value is provided
      */
@@ -22,21 +22,21 @@ declare type SearchPhotosParams = SearchParams & OrientationParam & {
     collectionIds?: string[];
 };
 export declare const getPhotos: {
-    getPathname: (params: void | undefined) => string;
+    getPathname: (params: void) => string;
 } & {
-    handleRequest: (a: SearchPhotosParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: SearchPhotosParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<SearchResponse.Photos>;
 };
 export declare const getCollections: {
-    getPathname: (params: void | undefined) => string;
+    getPathname: (params: void) => string;
 } & {
-    handleRequest: (a: SearchParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: SearchParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<SearchResponse.Collections>;
 };
 export declare const getUsers: {
-    getPathname: (params: void | undefined) => string;
+    getPathname: (params: void) => string;
 } & {
-    handleRequest: (a: SearchParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: SearchParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<SearchResponse.Users>;
 };
 export {};
diff --git a/dist/methods/search/types/request.d.ts b/dist/methods/search/types/request.d.ts
index 5eba489a3ac0bc18a00b9627820e84dc2e36e7f6..e29936e26681c365d877775ea4d450a0ebd188d5 100644
--- a/dist/methods/search/types/request.d.ts
+++ b/dist/methods/search/types/request.d.ts
@@ -1,6 +1,6 @@
-export declare type SearchOrderBy = 'relevant' | 'latest' | 'editorial';
-export declare type ColorId = 'white' | 'black' | 'yellow' | 'orange' | 'red' | 'purple' | 'magenta' | 'green' | 'teal' | 'blue' | 'black_and_white';
-export declare type ContentFilter = 'high' | 'low';
+export type SearchOrderBy = 'relevant' | 'latest' | 'editorial';
+export type ColorId = 'white' | 'black' | 'yellow' | 'orange' | 'red' | 'purple' | 'magenta' | 'green' | 'teal' | 'blue' | 'black_and_white';
+export type ContentFilter = 'high' | 'low';
 export declare enum Language {
     Afrikaans = "af",
     Amharic = "am",
diff --git a/dist/methods/topics/index.d.ts b/dist/methods/topics/index.d.ts
index bc7344f04ed2e2fb5417fe4e2c639e5a9abedd99..e9e016a27afb338a6d1635cc1425f5cc3086083e 100644
--- a/dist/methods/topics/index.d.ts
+++ b/dist/methods/topics/index.d.ts
@@ -2,10 +2,10 @@ import { OmitStrict } from '../../helpers/typescript';
 import { OrientationParam, PaginationParams } from '../../types/request';
 import * as Photo from '../photos/types';
 import * as Topic from './types';
-export declare type TopicIdOrSlug = {
+export type TopicIdOrSlug = {
     topicIdOrSlug: string;
 };
-export declare type TopicOrderBy = 'latest' | 'oldest' | 'position' | 'featured';
+export type TopicOrderBy = 'latest' | 'oldest' | 'position' | 'featured';
 export declare const list: {
     getPathname: (params: TopicIdOrSlug) => string;
 } & {
@@ -13,9 +13,9 @@ export declare const list: {
         /**
          * default: `position`
          */
-        orderBy?: TopicOrderBy | undefined;
-        topicIdsOrSlugs?: string[] | undefined;
-    }, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+        orderBy?: TopicOrderBy;
+        topicIdsOrSlugs?: string[];
+    }, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<{
         results: Topic.Basic[];
         total: number;
@@ -24,13 +24,13 @@ export declare const list: {
 export declare const get: {
     getPathname: (params: TopicIdOrSlug) => string;
 } & {
-    handleRequest: (a: TopicIdOrSlug, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: TopicIdOrSlug, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<Topic.Full>;
 };
 export declare const getPhotos: {
     getPathname: (params: TopicIdOrSlug) => string;
 } & {
-    handleRequest: (a: TopicIdOrSlug & PaginationParams & OrientationParam, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: TopicIdOrSlug & PaginationParams & OrientationParam, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<{
         results: Photo.Basic[];
         total: number;
diff --git a/dist/methods/users/index.d.ts b/dist/methods/users/index.d.ts
index ca30126e70961d7563e387a3d4e61da58e2e3a4e..fc3e59c0b63adde794a595a2d3bc5d735b5a8183 100644
--- a/dist/methods/users/index.d.ts
+++ b/dist/methods/users/index.d.ts
@@ -2,21 +2,21 @@ import { OrientationParam, PaginationParams } from '../../types/request';
 import * as User from './types';
 import * as Photo from '../photos/types';
 import * as Collection from '../collections/types';
-declare type Username = {
+type Username = {
     username: string;
 };
 export declare const get: {
     getPathname: (params: Username) => string;
 } & {
-    handleRequest: (a: Username, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: Username, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<User.Full>;
 };
 export declare const getPhotos: {
     getPathname: (params: Username) => string;
 } & {
     handleRequest: (a: {
-        stats?: boolean | undefined;
-    } & OrientationParam & Username & PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+        stats?: boolean;
+    } & OrientationParam & Username & PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<{
         results: Photo.Basic[];
         total: number;
@@ -25,7 +25,7 @@ export declare const getPhotos: {
 export declare const getLikes: {
     getPathname: (params: Username) => string;
 } & {
-    handleRequest: (a: OrientationParam & Username & PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: OrientationParam & Username & PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<{
         results: Photo.Basic[];
         total: number;
@@ -34,10 +34,19 @@ export declare const getLikes: {
 export declare const getCollections: {
     getPathname: (params: Username) => string;
 } & {
-    handleRequest: (a: Username & PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
+    handleRequest: (a: Username & PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
     handleResponse: import("../../helpers/response").HandleResponse<{
         results: Collection.Basic[];
         total: number;
     }>;
 };
+export declare const getStatistics: {
+    getPathname: (params: Username) => string;
+} & {
+    handleRequest: (a: Username & {
+        quantity?: number;
+        resolution?: string;
+    }, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions) => import("../../helpers/request").CompleteRequestParams;
+    handleResponse: import("../../helpers/response").HandleResponse<User.Statistics>;
+};
 export {};
diff --git a/dist/methods/users/types.d.ts b/dist/methods/users/types.d.ts
index 84f07d24313b9687457e92385947d00d27834233..8c0ea63f7a62563d46546836d828222064999b48 100644
--- a/dist/methods/users/types.d.ts
+++ b/dist/methods/users/types.d.ts
@@ -38,3 +38,32 @@ export interface Full extends Medium {
     followers_count: number;
     following_count: number;
 }
+export interface Statistics {
+    username: string;
+    downloads: {
+        total: number;
+        historical: {
+            change: number;
+            quantity: number;
+            average: number;
+            resolution: string;
+            values: {
+                date: string;
+                quantity: number;
+            }[];
+        };
+    };
+    views: {
+        total: number;
+        historical: {
+            change: number;
+            quantity: number;
+            average: number;
+            resolution: string;
+            values: {
+                date: string;
+                quantity: number;
+            }[];
+        };
+    };
+}
diff --git a/dist/types/request.d.ts b/dist/types/request.d.ts
index 3f27e8c673aaa5212abd8572c1a1c159112991ef..7501eed16fcc2b88cf350fc60023aa0a1baa82b3 100644
--- a/dist/types/request.d.ts
+++ b/dist/types/request.d.ts
@@ -5,12 +5,12 @@ export declare enum OrderBy {
     DOWNLOADS = "downloads",
     OLDEST = "oldest"
 }
-export declare type Orientation = 'landscape' | 'portrait' | 'squarish';
-export declare type OrientationParam = {
+export type Orientation = 'landscape' | 'portrait' | 'squarish';
+export type OrientationParam = {
     orientation?: Orientation;
 };
-export declare type Plus = 'mixed' | 'only' | 'none';
-export declare type PaginationParams = {
+export type Plus = 'mixed' | 'only' | 'none';
+export type PaginationParams = {
     /**
      * API defaults to `10` if no value is provided
      */
diff --git a/dist/unsplash-js.cjs.development.js b/dist/unsplash-js.cjs.development.js
index edf6f6bfc3d923902fb196bd5aa949659504be2c..690fae0c681bc3e6a1bdbe409562e2840db9f989 100644
--- a/dist/unsplash-js.cjs.development.js
+++ b/dist/unsplash-js.cjs.development.js
@@ -1,39 +1,31 @@
 'use strict';
 
-Object.defineProperty(exports, '__esModule', { value: true });
-
 var ContentTypeHelpers = require('content-type');
 
 function _extends() {
-  _extends = Object.assign || function (target) {
+  _extends = Object.assign ? Object.assign.bind() : function (target) {
     for (var i = 1; i < arguments.length; i++) {
       var source = arguments[i];
-
       for (var key in source) {
         if (Object.prototype.hasOwnProperty.call(source, key)) {
           target[key] = source[key];
         }
       }
     }
-
     return target;
   };
-
   return _extends.apply(this, arguments);
 }
-
 function _objectWithoutPropertiesLoose(source, excluded) {
   if (source == null) return {};
   var target = {};
   var sourceKeys = Object.keys(source);
   var key, i;
-
   for (i = 0; i < sourceKeys.length; i++) {
     key = sourceKeys[i];
     if (excluded.indexOf(key) >= 0) continue;
     target[key] = source[key];
   }
-
   return target;
 }
 
@@ -55,11 +47,9 @@ var checkIsNonEmptyArray = function checkIsNonEmptyArray(a) {
 /** Takes a dictionary containing nullish values and returns a dictionary of all the defined
  * (non-nullish) values.
  */
-
 var compactDefined = function compactDefined(obj) {
   return Object.keys(obj).reduce(function (acc, key) {
     var _ref;
-
     var value = obj[key];
     return _extends({}, acc, isDefined(value) ? (_ref = {}, _ref[key] = value, _ref) : {});
   }, {});
@@ -68,19 +58,15 @@ function flow() {
   for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
     fns[_key] = arguments[_key];
   }
-
   var len = fns.length - 1;
   return function () {
     for (var _len2 = arguments.length, x = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
       x[_key2] = arguments[_key2];
     }
-
     var y = fns[0].apply(this, x);
-
     for (var i = 1; i <= len; i++) {
       y = fns[i].call(this, y);
     }
-
     return y;
   };
 }
@@ -110,12 +96,12 @@ var getErrorForBadStatusCode = function getErrorForBadStatusCode(jsonResponse) {
   }
 };
 var DecodingError = function DecodingError(message) {
+  this.message = void 0;
   this.message = message;
 };
 
 var CONTENT_TYPE_RESPONSE_HEADER = 'content-type';
 var CONTENT_TYPE_JSON = 'application/json';
-
 var checkIsJsonResponse = function checkIsJsonResponse(response) {
   var contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);
   return isDefined(contentTypeHeader) && ContentTypeHelpers.parse(contentTypeHeader).type === CONTENT_TYPE_JSON;
@@ -123,8 +109,6 @@ var checkIsJsonResponse = function checkIsJsonResponse(response) {
 /**
  * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.
  */
-
-
 var getJsonResponse = function getJsonResponse(response) {
   if (checkIsJsonResponse(response)) {
     return response.json()["catch"](function (_err) {
@@ -191,7 +175,6 @@ var addQueryToUrl = function addQueryToUrl(query) {
     });
   };
 };
-
 var addPathnameToUrl = function addPathnameToUrl(pathname) {
   return function (url) {
     // When there is no existing pathname, the value is `/`. Appending would give us a URL with two
@@ -203,10 +186,9 @@ var addPathnameToUrl = function addPathnameToUrl(pathname) {
     }
   };
 };
-
 var buildUrl = function buildUrl(_ref) {
   var pathname = _ref.pathname,
-      query = _ref.query;
+    query = _ref.query;
   return function (apiUrl) {
     var url = new URL(apiUrl);
     addPathnameToUrl(pathname)(url);
@@ -214,7 +196,6 @@ var buildUrl = function buildUrl(_ref) {
     return url.toString();
   };
 };
-
 var getQueryFromSearchParams = function getQueryFromSearchParams(searchParams) {
   var query = {};
   searchParams.forEach(function (value, key) {
@@ -222,12 +203,10 @@ var getQueryFromSearchParams = function getQueryFromSearchParams(searchParams) {
   });
   return query;
 };
-
 var parseQueryAndPathname = function parseQueryAndPathname(url) {
   var _URL = new URL(url),
-      pathname = _URL.pathname,
-      searchParams = _URL.searchParams;
-
+    pathname = _URL.pathname,
+    searchParams = _URL.searchParams;
   var query = getQueryFromSearchParams(searchParams);
   return {
     query: query,
@@ -235,21 +214,20 @@ var parseQueryAndPathname = function parseQueryAndPathname(url) {
   };
 };
 
+var _excluded = ["headers", "query"],
+  _excluded2 = ["accessKey", "apiVersion", "apiUrl", "headers", "fetch"];
 /**
  * helper used to type-check the arguments, and add default params for all requests
  */
-
 var createRequestHandler = function createRequestHandler(fn) {
   return function (a, additionalFetchOptions) {
     if (additionalFetchOptions === void 0) {
       additionalFetchOptions = {};
     }
-
     var _fn = fn(a),
-        headers = _fn.headers,
-        query = _fn.query,
-        baseReqParams = _objectWithoutPropertiesLoose(_fn, ["headers", "query"]);
-
+      headers = _fn.headers,
+      query = _fn.query,
+      baseReqParams = _objectWithoutPropertiesLoose(_fn, _excluded);
     return _extends({}, baseReqParams, additionalFetchOptions, {
       query: query,
       headers: _extends({}, headers, additionalFetchOptions.headers)
@@ -261,30 +239,28 @@ var makeEndpoint = function makeEndpoint(endpoint) {
 };
 var initMakeRequest = function initMakeRequest(_ref) {
   var accessKey = _ref.accessKey,
-      _ref$apiVersion = _ref.apiVersion,
-      apiVersion = _ref$apiVersion === void 0 ? 'v1' : _ref$apiVersion,
-      _ref$apiUrl = _ref.apiUrl,
-      apiUrl = _ref$apiUrl === void 0 ? 'https://api.unsplash.com' : _ref$apiUrl,
-      generalHeaders = _ref.headers,
-      providedFetch = _ref.fetch,
-      generalFetchOptions = _objectWithoutPropertiesLoose(_ref, ["accessKey", "apiVersion", "apiUrl", "headers", "fetch"]);
-
+    _ref$apiVersion = _ref.apiVersion,
+    apiVersion = _ref$apiVersion === void 0 ? 'v1' : _ref$apiVersion,
+    _ref$apiUrl = _ref.apiUrl,
+    apiUrl = _ref$apiUrl === void 0 ? 'https://api.unsplash.com' : _ref$apiUrl,
+    generalHeaders = _ref.headers,
+    providedFetch = _ref.fetch,
+    generalFetchOptions = _objectWithoutPropertiesLoose(_ref, _excluded2);
   return function (_ref2) {
     var handleResponse = _ref2.handleResponse,
-        handleRequest = _ref2.handleRequest;
+      handleRequest = _ref2.handleRequest;
     return flow(handleRequest, function (_ref3) {
       var pathname = _ref3.pathname,
-          query = _ref3.query,
-          _ref3$method = _ref3.method,
-          method = _ref3$method === void 0 ? 'GET' : _ref3$method,
-          endpointHeaders = _ref3.headers,
-          body = _ref3.body,
-          signal = _ref3.signal;
+        query = _ref3.query,
+        _ref3$method = _ref3.method,
+        method = _ref3$method === void 0 ? 'GET' : _ref3$method,
+        endpointHeaders = _ref3.headers,
+        body = _ref3.body,
+        signal = _ref3.signal;
       var url = buildUrl({
         pathname: pathname,
         query: query
       })(apiUrl);
-
       var fetchOptions = _extends({
         method: method,
         headers: _extends({}, generalHeaders, endpointHeaders, {
@@ -295,7 +271,6 @@ var initMakeRequest = function initMakeRequest(_ref) {
         body: body,
         signal: signal
       }, generalFetchOptions);
-
       var fetchToUse = providedFetch != null ? providedFetch : fetch;
       return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));
     });
@@ -303,13 +278,10 @@ var initMakeRequest = function initMakeRequest(_ref) {
 };
 
 var TOTAL_RESPONSE_HEADER = 'x-total';
-
 var getTotalFromApiFeedResponse = function getTotalFromApiFeedResponse(response) {
   var totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);
-
   if (isDefined(totalsStr)) {
     var total = parseInt(totalsStr);
-
     if (Number.isInteger(total)) {
       return total;
     } else {
@@ -319,7 +291,6 @@ var getTotalFromApiFeedResponse = function getTotalFromApiFeedResponse(response)
     throw new DecodingError("expected " + TOTAL_RESPONSE_HEADER + " header to exist.");
   }
 };
-
 var handleFeedResponse = function handleFeedResponse() {
   return function (_ref) {
     var response = _ref.response;
@@ -346,8 +317,8 @@ var getTopics = function getTopics(topicIds) {
 };
 var getFeedParams = function getFeedParams(_ref) {
   var page = _ref.page,
-      perPage = _ref.perPage,
-      orderBy = _ref.orderBy;
+    perPage = _ref.perPage,
+    orderBy = _ref.orderBy;
   return compactDefined({
     per_page: perPage,
     order_by: orderBy,
@@ -355,20 +326,19 @@ var getFeedParams = function getFeedParams(_ref) {
   });
 };
 
+var _excluded$1 = ["collectionId", "orientation"];
 var COLLECTIONS_PATH_PREFIX = '/collections';
 var getPhotos = /*#__PURE__*/function () {
   var getPathname = function getPathname(_ref) {
     var collectionId = _ref.collectionId;
     return COLLECTIONS_PATH_PREFIX + "/" + collectionId + "/photos";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref2) {
       var collectionId = _ref2.collectionId,
-          orientation = _ref2.orientation,
-          paginationParams = _objectWithoutPropertiesLoose(_ref2, ["collectionId", "orientation"]);
-
+        orientation = _ref2.orientation,
+        paginationParams = _objectWithoutPropertiesLoose(_ref2, _excluded$1);
       return {
         pathname: getPathname({
           collectionId: collectionId
@@ -386,7 +356,6 @@ var get = /*#__PURE__*/function () {
     var collectionId = _ref3.collectionId;
     return COLLECTIONS_PATH_PREFIX + "/" + collectionId;
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref4) {
@@ -405,14 +374,12 @@ var list = /*#__PURE__*/function () {
   var getPathname = function getPathname() {
     return COLLECTIONS_PATH_PREFIX;
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (paginationParams) {
       if (paginationParams === void 0) {
         paginationParams = {};
       }
-
       return {
         pathname: getPathname(),
         query: getFeedParams(paginationParams)
@@ -426,7 +393,6 @@ var getRelated = /*#__PURE__*/function () {
     var collectionId = _ref5.collectionId;
     return COLLECTIONS_PATH_PREFIX + "/" + collectionId + "/related";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref6) {
@@ -450,12 +416,12 @@ var index = {
   getRelated: getRelated
 };
 
+var _excluded$2 = ["collectionIds", "contentFilter", "topicIds"];
 var PHOTOS_PATH_PREFIX = '/photos';
 var list$1 = /*#__PURE__*/function () {
   var _getPathname = function getPathname() {
     return PHOTOS_PATH_PREFIX;
   };
-
   return makeEndpoint({
     // Wrapper uses type trick to allow 0 args
     getPathname: function getPathname(_params) {
@@ -465,7 +431,6 @@ var list$1 = /*#__PURE__*/function () {
       if (feedParams === void 0) {
         feedParams = {};
       }
-
       return {
         pathname: PHOTOS_PATH_PREFIX,
         query: compactDefined(getFeedParams(feedParams))
@@ -479,7 +444,6 @@ var get$1 = /*#__PURE__*/function () {
     var photoId = _ref.photoId;
     return PHOTOS_PATH_PREFIX + "/" + photoId;
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref2) {
@@ -499,7 +463,6 @@ var getStats = /*#__PURE__*/function () {
     var photoId = _ref3.photoId;
     return PHOTOS_PATH_PREFIX + "/" + photoId + "/statistics";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref4) {
@@ -518,16 +481,14 @@ var getRandom = /*#__PURE__*/function () {
   var getPathname = function getPathname() {
     return PHOTOS_PATH_PREFIX + "/random";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_temp) {
       var _ref5 = _temp === void 0 ? {} : _temp,
-          collectionIds = _ref5.collectionIds,
-          contentFilter = _ref5.contentFilter,
-          topicIds = _ref5.topicIds,
-          queryParams = _objectWithoutPropertiesLoose(_ref5, ["collectionIds", "contentFilter", "topicIds"]);
-
+        collectionIds = _ref5.collectionIds,
+        contentFilter = _ref5.contentFilter,
+        topicIds = _ref5.topicIds,
+        queryParams = _objectWithoutPropertiesLoose(_ref5, _excluded$2);
       return {
         pathname: getPathname(),
         query: compactDefined(_extends({}, queryParams, {
@@ -547,15 +508,12 @@ var getRandom = /*#__PURE__*/function () {
 var trackDownload = {
   handleRequest: /*#__PURE__*/createRequestHandler(function (_ref6) {
     var downloadLocation = _ref6.downloadLocation;
-
     var _parseQueryAndPathnam = parseQueryAndPathname(downloadLocation),
-        pathname = _parseQueryAndPathnam.pathname,
-        query = _parseQueryAndPathnam.query;
-
+      pathname = _parseQueryAndPathnam.pathname,
+      query = _parseQueryAndPathnam.query;
     if (!isDefined(pathname)) {
       throw new Error('Could not parse pathname from url.');
     }
-
     return {
       pathname: pathname,
       query: compactDefined(query)
@@ -573,12 +531,14 @@ var index$1 = {
   trackDownload: trackDownload
 };
 
+var _excluded$3 = ["query", "page", "perPage", "orderBy", "collectionIds", "lang", "contentFilter"],
+  _excluded2$1 = ["query"],
+  _excluded3 = ["query"];
 var SEARCH_PATH_PREFIX = "/search";
 var getPhotos$1 = /*#__PURE__*/function () {
   var _getPathname = function getPathname() {
     return SEARCH_PATH_PREFIX + "/photos";
   };
-
   return makeEndpoint({
     // Wrapper uses type trick to allow 0 args
     getPathname: function getPathname(_params) {
@@ -586,14 +546,13 @@ var getPhotos$1 = /*#__PURE__*/function () {
     },
     handleRequest: createRequestHandler(function (_ref) {
       var query = _ref.query,
-          page = _ref.page,
-          perPage = _ref.perPage,
-          orderBy = _ref.orderBy,
-          collectionIds = _ref.collectionIds,
-          lang = _ref.lang,
-          contentFilter = _ref.contentFilter,
-          filters = _objectWithoutPropertiesLoose(_ref, ["query", "page", "perPage", "orderBy", "collectionIds", "lang", "contentFilter"]);
-
+        page = _ref.page,
+        perPage = _ref.perPage,
+        orderBy = _ref.orderBy,
+        collectionIds = _ref.collectionIds,
+        lang = _ref.lang,
+        contentFilter = _ref.contentFilter,
+        filters = _objectWithoutPropertiesLoose(_ref, _excluded$3);
       return {
         pathname: _getPathname(),
         query: compactDefined(_extends({
@@ -614,7 +573,6 @@ var getCollections$1 = /*#__PURE__*/function () {
   var _getPathname2 = function getPathname() {
     return SEARCH_PATH_PREFIX + "/collections";
   };
-
   return makeEndpoint({
     // Wrapper uses type trick to allow 0 args
     getPathname: function getPathname(_params) {
@@ -622,8 +580,7 @@ var getCollections$1 = /*#__PURE__*/function () {
     },
     handleRequest: createRequestHandler(function (_ref2) {
       var query = _ref2.query,
-          paginationParams = _objectWithoutPropertiesLoose(_ref2, ["query"]);
-
+        paginationParams = _objectWithoutPropertiesLoose(_ref2, _excluded2$1);
       return {
         pathname: _getPathname2(),
         query: _extends({
@@ -638,7 +595,6 @@ var getUsers = /*#__PURE__*/function () {
   var _getPathname3 = function getPathname() {
     return SEARCH_PATH_PREFIX + "/users";
   };
-
   return makeEndpoint({
     // Wrapper uses type trick to allow 0 args
     getPathname: function getPathname(_params) {
@@ -646,8 +602,7 @@ var getUsers = /*#__PURE__*/function () {
     },
     handleRequest: createRequestHandler(function (_ref3) {
       var query = _ref3.query,
-          paginationParams = _objectWithoutPropertiesLoose(_ref3, ["query"]);
-
+        paginationParams = _objectWithoutPropertiesLoose(_ref3, _excluded3);
       return {
         pathname: _getPathname3(),
         query: _extends({
@@ -666,13 +621,15 @@ var index$2 = {
   getUsers: getUsers
 };
 
+var _excluded$4 = ["username", "stats", "orientation"],
+  _excluded2$2 = ["username", "orientation"],
+  _excluded3$1 = ["username"];
 var USERS_PATH_PREFIX = '/users';
 var get$2 = /*#__PURE__*/function () {
   var getPathname = function getPathname(_ref) {
     var username = _ref.username;
     return USERS_PATH_PREFIX + "/" + username;
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref2) {
@@ -692,15 +649,13 @@ var getPhotos$2 = /*#__PURE__*/function () {
     var username = _ref3.username;
     return USERS_PATH_PREFIX + "/" + username + "/photos";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref4) {
       var username = _ref4.username,
-          stats = _ref4.stats,
-          orientation = _ref4.orientation,
-          paginationParams = _objectWithoutPropertiesLoose(_ref4, ["username", "stats", "orientation"]);
-
+        stats = _ref4.stats,
+        orientation = _ref4.orientation,
+        paginationParams = _objectWithoutPropertiesLoose(_ref4, _excluded$4);
       return {
         pathname: getPathname({
           username: username
@@ -719,14 +674,12 @@ var getLikes = /*#__PURE__*/function () {
     var username = _ref5.username;
     return USERS_PATH_PREFIX + "/" + username + "/likes";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref6) {
       var username = _ref6.username,
-          orientation = _ref6.orientation,
-          paginationParams = _objectWithoutPropertiesLoose(_ref6, ["username", "orientation"]);
-
+        orientation = _ref6.orientation,
+        paginationParams = _objectWithoutPropertiesLoose(_ref6, _excluded2$2);
       return {
         pathname: getPathname({
           username: username
@@ -744,13 +697,11 @@ var getCollections$2 = /*#__PURE__*/function () {
     var username = _ref7.username;
     return USERS_PATH_PREFIX + "/" + username + "/collections";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref8) {
       var username = _ref8.username,
-          paginationParams = _objectWithoutPropertiesLoose(_ref8, ["username"]);
-
+        paginationParams = _objectWithoutPropertiesLoose(_ref8, _excluded3$1);
       return {
         pathname: getPathname({
           username: username
@@ -761,29 +712,55 @@ var getCollections$2 = /*#__PURE__*/function () {
     handleResponse: handleFeedResponse()
   });
 }();
+var getStatistics = /*#__PURE__*/function () {
+  var getPathname = function getPathname(_ref9) {
+    var username = _ref9.username;
+    return USERS_PATH_PREFIX + "/" + username + "/statistics";
+  };
+  return makeEndpoint({
+    getPathname: getPathname,
+    handleRequest: createRequestHandler(function (_ref10) {
+      var username = _ref10.username,
+        _ref10$quantity = _ref10.quantity,
+        quantity = _ref10$quantity === void 0 ? 30 : _ref10$quantity,
+        _ref10$resolution = _ref10.resolution,
+        resolution = _ref10$resolution === void 0 ? 'days' : _ref10$resolution;
+      return {
+        pathname: getPathname({
+          username: username
+        }),
+        query: {
+          quantity: quantity,
+          resolution: resolution
+        }
+      };
+    }),
+    handleResponse: castResponse()
+  });
+}();
 
 var index$3 = {
   __proto__: null,
   get: get$2,
   getPhotos: getPhotos$2,
   getLikes: getLikes,
-  getCollections: getCollections$2
+  getCollections: getCollections$2,
+  getStatistics: getStatistics
 };
 
+var _excluded$5 = ["topicIdOrSlug", "orientation"];
 var BASE_TOPIC_PATH = '/topics';
-
 var getTopicPath = function getTopicPath(_ref) {
   var topicIdOrSlug = _ref.topicIdOrSlug;
   return BASE_TOPIC_PATH + "/" + topicIdOrSlug;
 };
-
 var list$2 = /*#__PURE__*/makeEndpoint({
   getPathname: getTopicPath,
   handleRequest: function handleRequest(_ref2) {
     var page = _ref2.page,
-        perPage = _ref2.perPage,
-        orderBy = _ref2.orderBy,
-        topicIdsOrSlugs = _ref2.topicIdsOrSlugs;
+      perPage = _ref2.perPage,
+      orderBy = _ref2.orderBy,
+      topicIdsOrSlugs = _ref2.topicIdsOrSlugs;
     return {
       pathname: BASE_TOPIC_PATH,
       query: compactDefined(_extends({}, getFeedParams({
@@ -818,9 +795,8 @@ var getPhotos$3 = /*#__PURE__*/function () {
     getPathname: getPathname,
     handleRequest: function handleRequest(_ref4) {
       var topicIdOrSlug = _ref4.topicIdOrSlug,
-          orientation = _ref4.orientation,
-          feedParams = _objectWithoutPropertiesLoose(_ref4, ["topicIdOrSlug", "orientation"]);
-
+        orientation = _ref4.orientation,
+        feedParams = _objectWithoutPropertiesLoose(_ref4, _excluded$5);
       return {
         pathname: getPathname({
           topicIdOrSlug: topicIdOrSlug
@@ -846,11 +822,9 @@ var trackNonHotLinkedPhotoView = function trackNonHotLinkedPhotoView(_ref) {
   return function (_ref2) {
     var photoId = _ref2.photoId;
     var ids = !Array.isArray(photoId) ? [photoId] : photoId;
-
     if (ids.length > 20) {
       throw new Error('You cannot track more than 20 photos at once. Please try again with fewer photos.');
     }
-
     return fetch("views.unsplash.com/v?photo_id=" + ids.join() + "&app_id=" + appId);
   };
 };
@@ -1000,6 +974,7 @@ var createApi = /*#__PURE__*/flow(initMakeRequest, function (makeRequest) {
       getPhotos: makeRequest(getPhotos$2),
       getCollections: makeRequest(getCollections$2),
       getLikes: makeRequest(getLikes),
+      getStatistics: makeRequest(getStatistics),
       get: makeRequest(get$2)
     },
     search: {
diff --git a/dist/unsplash-js.cjs.development.js.map b/dist/unsplash-js.cjs.development.js.map
index 6ba1efb0b498b448cab1b4667d47701f2208d786..57609d0b6c172eaba646a1447dbd0d7aa6d8d4fb 100644
--- a/dist/unsplash-js.cjs.development.js.map
+++ b/dist/unsplash-js.cjs.development.js.map
@@ -1 +1 @@
-{"version":3,"file":"unsplash-js.cjs.development.js","sources":["../src/helpers/typescript.ts","../src/helpers/fp.ts","../src/helpers/errors.ts","../src/helpers/json.ts","../src/helpers/response.ts","../src/helpers/url.ts","../src/helpers/request.ts","../src/helpers/feed.ts","../src/helpers/query.ts","../src/methods/collections/index.ts","../src/methods/photos/index.ts","../src/methods/search/index.ts","../src/methods/users/index.ts","../src/methods/topics/index.ts","../src/beacon.ts","../src/methods/search/types/request.ts","../src/types/request.ts","../src/index.ts"],"sourcesContent":["// Copied from https://github.com/Microsoft/TypeScript/issues/1897#issuecomment-338650717\nexport type AnyJson = boolean | number | string | null | JsonArray | JsonMap;\nexport type JsonMap = { [key: string]: AnyJson };\nexport type JsonArray = Array<AnyJson>;\n\nexport const checkIsString = getRefinement(\n  (value: unknown): Nullable<string> => (typeof value === 'string' ? value : null),\n);\n\n/**\n * https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-377567046\n */\nexport type OmitStrict<T, K extends keyof T> = Omit<T, K>;\n\n/**\n * Unlike TypeScript's `NonNullable`, this does _not_ include `undefined`\n */\nexport type Nullable<T> = T | null;\n\nexport const isDefined = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\ntype Refinement<A, B extends A> = (a: A) => a is B;\nexport function getRefinement<A, B extends A>(getB: (a: A) => Nullable<B>): Refinement<A, B> {\n  return (a: A): a is B => isDefined(getB(a));\n}\n\nexport const checkIsNonEmptyArray = <T>(a: T[]): a is NonEmptyArray<T> => a.length > 0;\n","import { isDefined } from './typescript';\n\n/** Takes a dictionary containing nullish values and returns a dictionary of all the defined\n * (non-nullish) values.\n */\nexport const compactDefined = <A>(obj: Record<string, A | null | undefined>) =>\n  Object.keys(obj).reduce<Record<string, A>>((acc, key) => {\n    const value = obj[key];\n    return {\n      ...acc,\n      ...(isDefined(value) ? { [key]: value } : {}),\n    };\n  }, {});\n\n/**\n * copied from `fp-ts`\n * https://github.com/gcanti/fp-ts/blob/70190b5a03ddc2d31b4708c75c6dfad81d0bfa21/perf/function/flow.tÂ¡s\n */\nexport function flow<A extends Array<unknown>, B>(ab: (...a: A) => B): (...a: A) => B;\nexport function flow<A extends Array<unknown>, B, C>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n): (...a: A) => C;\nexport function flow<A extends Array<unknown>, B, C, D>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (b: C) => D,\n): (...a: A) => D;\nexport function flow(...fns: Array<Function>): Function {\n  const len = fns.length - 1;\n  return function(this: any, ...x: Array<any>) {\n    let y = fns[0].apply(this, x);\n    for (let i = 1; i <= len; i++) {\n      y = fns[i].call(this, y);\n    }\n    return y;\n  };\n}\n","import {\n  AnyJson,\n  checkIsString,\n  getRefinement,\n  isDefined,\n  checkIsNonEmptyArray,\n  JsonMap,\n  NonEmptyArray,\n  Nullable,\n} from './typescript';\n\nexport type Errors = NonEmptyArray<string>;\nexport type ErrorSource = 'api' | 'decoding';\n\nconst checkIsObject = getRefinement(\n  (response: AnyJson): Nullable<JsonMap> =>\n    isDefined(response) && typeof response === 'object' && !Array.isArray(response)\n      ? response\n      : null,\n);\n\nconst checkIsErrors = getRefinement(\n  (errors: AnyJson): Nullable<Errors> =>\n    Array.isArray(errors) && errors.every(checkIsString) && checkIsNonEmptyArray(errors)\n      ? errors\n      : null,\n);\n\nconst checkIsApiError = getRefinement(\n  (response: AnyJson): Nullable<{ errors: Errors }> =>\n    checkIsObject(response) && 'errors' in response && checkIsErrors(response.errors)\n      ? { errors: response.errors }\n      : null,\n);\n\nexport const getErrorForBadStatusCode = (\n  jsonResponse: AnyJson,\n): { errors: Errors; source: ErrorSource } => {\n  if (checkIsApiError(jsonResponse)) {\n    return { errors: jsonResponse.errors, source: 'api' };\n  } else {\n    return {\n      errors: [\n        'Responded with a status code outside the 2xx range, and the response body is not recognisable.',\n      ],\n      source: 'decoding',\n    };\n  }\n};\n\nexport class DecodingError {\n  constructor(readonly message: string) {}\n}\n","import * as ContentTypeHelpers from 'content-type';\nimport { DecodingError } from './errors';\nimport { AnyJson, isDefined } from './typescript';\n\nconst CONTENT_TYPE_RESPONSE_HEADER = 'content-type';\nconst CONTENT_TYPE_JSON = 'application/json';\nconst checkIsJsonResponse = (response: Response) => {\n  const contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);\n\n  return (\n    isDefined(contentTypeHeader) &&\n    ContentTypeHelpers.parse(contentTypeHeader).type === CONTENT_TYPE_JSON\n  );\n};\n\n/**\n * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.\n */\nexport const getJsonResponse = (response: Response): Promise<AnyJson> => {\n  if (checkIsJsonResponse(response)) {\n    return response.json().catch(_err => {\n      throw new DecodingError('unable to parse JSON response.');\n    });\n  } else {\n    throw new DecodingError('expected JSON response from server.');\n  }\n};\n","import { Errors, ErrorSource, getErrorForBadStatusCode, DecodingError } from './errors';\nimport { getJsonResponse } from './json';\n\nexport type ApiResponse<T> =\n  | {\n      type: 'success';\n      response: T;\n      originalResponse: Response;\n      errors?: never;\n      status: number;\n    }\n  | {\n      type: 'error';\n      source: ErrorSource;\n      response?: never;\n      originalResponse: Response;\n      errors: Errors;\n      status: number;\n    };\n\nexport type HandleResponse<T> = (args: { response: Response }) => Promise<T>;\n\nexport const handleFetchResponse = <ResponseType>(handleResponse: HandleResponse<ResponseType>) => (\n  response: Response,\n): Promise<ApiResponse<ResponseType>> =>\n  (response.ok\n    ? handleResponse({ response }).then(\n        (handledResponse): ApiResponse<ResponseType> => ({\n          type: 'success',\n          status: response.status,\n          response: handledResponse,\n          originalResponse: response,\n        }),\n      )\n    : getJsonResponse(response).then(\n        (jsonResponse): ApiResponse<ResponseType> => ({\n          type: 'error',\n          status: response.status,\n          ...getErrorForBadStatusCode(jsonResponse),\n          originalResponse: response,\n        }),\n      )\n  ).catch(error => {\n    /**\n     * We want to separate expected decoding errors from unknown ones. We do so by throwing a custom\n     * `DecodingError` whenever we encounter one within `handleFetchResponse` and catch them all\n     * here. This allows us to easily handle all of these errors at once. Unexpected errors are not\n     * caught, so that they bubble up and fail loudly.\n     *\n     * Note: Ideally we'd use an Either type, but this does the job without introducing dependencies\n     * like `fp-ts`.\n     */\n    if (error instanceof DecodingError) {\n      return {\n        type: 'error',\n        source: 'decoding',\n        status: response.status,\n        originalResponse: response,\n        errors: [error.message],\n      };\n    } else {\n      throw error;\n    }\n  });\n\nexport const castResponse = <T>(): HandleResponse<T> => ({ response }) =>\n  (getJsonResponse(response) as unknown) as Promise<T>;\n","type Query = {\n  [index: string]: string | number | boolean;\n};\n\nexport type BuildUrlParams = {\n  pathname: string;\n  query: Query;\n};\n\nconst addQueryToUrl = (query: Query) => (url: URL) => {\n  Object.keys(query).forEach(queryKey =>\n    url.searchParams.set(queryKey, query[queryKey].toString()),\n  );\n};\n\nconst addPathnameToUrl = (pathname: string) => (url: URL) => {\n  // When there is no existing pathname, the value is `/`. Appending would give us a URL with two\n  // forward slashes. This is why we replace the value in that scenario.\n  if (url.pathname === '/') {\n    url.pathname = pathname;\n  } else {\n    url.pathname += pathname;\n  }\n};\n\nexport const buildUrl = ({ pathname, query }: BuildUrlParams) => (apiUrl: string) => {\n  const url = new URL(apiUrl);\n  addPathnameToUrl(pathname)(url);\n  addQueryToUrl(query)(url);\n  return url.toString();\n};\n\nconst getQueryFromSearchParams = (searchParams: URLSearchParams) => {\n  const query: Query = {};\n\n  searchParams.forEach((value, key) => {\n    query[key] = value;\n  });\n  return query;\n};\n\nexport const parseQueryAndPathname = (url: string) => {\n  const { pathname, searchParams } = new URL(url);\n\n  const query: Query = getQueryFromSearchParams(searchParams);\n\n  return { query, pathname: pathname === '/' ? undefined : pathname };\n};\n","import { flow } from './fp';\nimport { ApiResponse, handleFetchResponse, HandleResponse } from './response';\nimport { isDefined, OmitStrict } from './typescript';\nimport { buildUrl, BuildUrlParams } from './url';\n\ntype FetchParams = Pick<RequestInit, 'method'>;\n/**\n * The params generated by the library\n */\ntype BaseRequestParams = BuildUrlParams &\n  FetchParams &\n  // `headers` is not part of FetchParams because we want to allow headers in the additional params as well\n  Pick<RequestInit, 'headers'>;\n\n/**\n * Additional fetch options provided by the user on a per-call basis\n */\nexport interface AdditionalFetchOptions extends OmitStrict<RequestInit, keyof FetchParams> {}\nexport type CompleteRequestParams = BaseRequestParams & AdditionalFetchOptions;\ntype HandleRequest<Args> = (\n  a: Args,\n  additionalFetchOptions?: AdditionalFetchOptions,\n) => CompleteRequestParams;\n\n/**\n * helper used to type-check the arguments, and add default params for all requests\n */\nexport const createRequestHandler = <Args>(\n  fn: (a: Args) => BaseRequestParams,\n): HandleRequest<Args> => (a, additionalFetchOptions = {}) => {\n  const { headers, query, ...baseReqParams } = fn(a);\n\n  return {\n    ...baseReqParams,\n    ...additionalFetchOptions,\n    query,\n    headers: {\n      ...headers,\n      ...additionalFetchOptions.headers,\n    },\n  };\n};\n\n/**\n * Initial parameters that apply to all calls\n */\nexport type InitParams = {\n  apiVersion?: string;\n  fetch?: typeof fetch;\n} & OmitStrict<RequestInit, 'method' | 'body'> &\n  ({ accessKey: string; apiUrl?: never } | { apiUrl: string; accessKey?: never });\n\ntype RequestGenerator<Args, ResponseType> = {\n  handleRequest: HandleRequest<Args>;\n  handleResponse: HandleResponse<ResponseType>;\n};\n\ntype Endpoint<PathnameParams, RequestArgs, ResponseType> = {\n  getPathname: (params: PathnameParams) => string;\n} & RequestGenerator<RequestArgs, ResponseType>;\nexport const makeEndpoint = <PathnameParams, RequestArgs, ResponseType>(\n  endpoint: Endpoint<PathnameParams, RequestArgs, ResponseType>,\n) => endpoint;\n\ntype GeneratedRequestFunction<Args, ResponseType> = (\n  ...a: Parameters<HandleRequest<Args>>\n) => Promise<ApiResponse<ResponseType>>;\n\ntype InitMakeRequest = (\n  args: InitParams,\n) => <Args, ResponseType>(\n  handlers: RequestGenerator<Args, ResponseType>,\n) => GeneratedRequestFunction<Args, ResponseType>;\n\nexport const initMakeRequest: InitMakeRequest = ({\n  accessKey,\n  apiVersion = 'v1',\n  apiUrl = 'https://api.unsplash.com',\n  headers: generalHeaders,\n  fetch: providedFetch,\n  ...generalFetchOptions\n}) => ({ handleResponse, handleRequest }) =>\n  flow(\n    handleRequest,\n    ({ pathname, query, method = 'GET', headers: endpointHeaders, body, signal }) => {\n      const url = buildUrl({ pathname, query })(apiUrl);\n\n      const fetchOptions: RequestInit = {\n        method,\n        headers: {\n          ...generalHeaders,\n          ...endpointHeaders,\n          'Accept-Version': apiVersion,\n          ...(isDefined(accessKey) ? { Authorization: `Client-ID ${accessKey}` } : {}),\n        },\n        body,\n        signal,\n        ...generalFetchOptions,\n      };\n\n      const fetchToUse = providedFetch ?? fetch;\n\n      return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));\n    },\n  );\n","import { DecodingError } from './errors';\nimport { HandleResponse, castResponse } from './response';\nimport { isDefined } from './typescript';\n\nconst TOTAL_RESPONSE_HEADER = 'x-total';\nconst getTotalFromApiFeedResponse = (response: Response) => {\n  const totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);\n  if (isDefined(totalsStr)) {\n    const total = parseInt(totalsStr);\n    if (Number.isInteger(total)) {\n      return total;\n    } else {\n      throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to be valid integer.`);\n    }\n  } else {\n    throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to exist.`);\n  }\n};\n\ntype FeedResponse<T> = {\n  results: T[];\n  total: number;\n};\n\nexport const handleFeedResponse = <T>(): HandleResponse<FeedResponse<T>> => ({ response }) =>\n  castResponse<T[]>()({ response }).then(results => ({\n    results,\n    total: getTotalFromApiFeedResponse(response),\n  }));\n","import { PaginationParams } from '../types/request';\nimport { compactDefined } from './fp';\nimport { isDefined } from './typescript';\n\nexport const getCollections = (collectionIds?: string[]) =>\n  isDefined(collectionIds) ? { collections: collectionIds.join() } : {};\n\nexport const getTopics = (topicIds?: string[]) =>\n  isDefined(topicIds) ? { topics: topicIds.join() } : {};\n\nexport const getFeedParams = ({ page, perPage, orderBy }: PaginationParams) =>\n  compactDefined({\n    per_page: perPage,\n    order_by: orderBy,\n    page,\n  });\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\n\ntype CollectionId = {\n  collectionId: string;\n};\n\nconst COLLECTIONS_PATH_PREFIX = '/collections';\n\nexport const getPhotos = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        collectionId,\n        orientation,\n        ...paginationParams\n      }: CollectionId & PaginationParams & OrientationParam) => ({\n        pathname: getPathname({ collectionId }),\n        query: compactDefined({ ...Query.getFeedParams(paginationParams), orientation }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n\nexport const list = (() => {\n  const getPathname = () => COLLECTIONS_PATH_PREFIX;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      (paginationParams: Pick<PaginationParams, 'page' | 'perPage'> = {}) => ({\n        pathname: getPathname(),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const getRelated = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/related`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { isDefined } from '../../helpers/typescript';\nimport { parseQueryAndPathname } from '../../helpers/url';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from './types';\n\ntype PhotoId = {\n  photoId: string;\n};\n\nconst PHOTOS_PATH_PREFIX = '/photos';\n\nexport const list = (() => {\n  const getPathname = () => PHOTOS_PATH_PREFIX;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler((feedParams: PaginationParams = {}) => ({\n      pathname: PHOTOS_PATH_PREFIX,\n      query: compactDefined(Query.getFeedParams(feedParams)),\n    })),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Full>(),\n  });\n})();\n\nexport const getStats = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Stats>(),\n  });\n})();\n\nexport type RandomParams = {\n  collectionIds?: string[];\n  topicIds?: string[];\n  featured?: boolean;\n  username?: string;\n  query?: string;\n  contentFilter?: 'low' | 'high';\n  count?: number;\n} & OrientationParam;\n\nexport const getRandom = (() => {\n  const getPathname = () => `${PHOTOS_PATH_PREFIX}/random`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ collectionIds, contentFilter, topicIds, ...queryParams }: RandomParams = {}) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          ...queryParams,\n          content_filter: contentFilter,\n          ...Query.getCollections(collectionIds),\n          ...Query.getTopics(topicIds),\n        }),\n        headers: {\n          /**\n           * Avoid response caching\n           */\n          'cache-control': 'no-cache',\n        },\n      }),\n    ),\n    handleResponse: castResponse<\n      // An array when the `count` query parameter is used.\n      Photo.Random | Photo.Random[]\n    >(),\n  });\n})();\n\nexport const trackDownload = {\n  handleRequest: createRequestHandler(({ downloadLocation }: { downloadLocation: string }) => {\n    const { pathname, query } = parseQueryAndPathname(downloadLocation);\n\n    if (!isDefined(pathname)) {\n      throw new Error('Could not parse pathname from url.');\n    }\n    return { pathname, query: compactDefined(query) };\n  }),\n  handleResponse: castResponse<{ url: string }>(),\n};\n","import { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams, Plus } from '../../types/request';\nimport { ColorId, ContentFilter, Language, SearchOrderBy } from './types/request';\nimport * as SearchResponse from './types/response';\n\nexport type SearchParams = {\n  query: string;\n} & Pick<PaginationParams, 'page' | 'perPage'>;\n\nconst SEARCH_PATH_PREFIX = `/search`;\n\ntype SearchPhotosParams = SearchParams &\n  OrientationParam & {\n    /**\n     * API defaults to `\"relevant\"` if no value is provided\n     */\n    orderBy?: SearchOrderBy;\n    color?: ColorId;\n    plus?: Plus;\n    /**\n     * API defaults to `en` (English) if no value is provided\n     */\n    lang?: Language;\n    /**\n     * API defaults to `\"low\"` if no value is provided\n     */\n    contentFilter?: ContentFilter;\n    collectionIds?: string[];\n  };\n\nexport const getPhotos = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/photos`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(\n      ({\n        query,\n        page,\n        perPage,\n        orderBy,\n        collectionIds,\n        lang,\n        contentFilter,\n        ...filters\n      }: SearchPhotosParams) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          query,\n          content_filter: contentFilter,\n          lang,\n          order_by: orderBy,\n          ...Query.getFeedParams({ page, perPage }),\n          ...Query.getCollections(collectionIds),\n          ...filters,\n        }),\n      }),\n    ),\n    handleResponse: castResponse<SearchResponse.Photos>(),\n  });\n})();\n\nexport const getCollections = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/collections`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Collections>(),\n  });\n})();\n\nexport const getUsers = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/users`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Users>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as User from './types';\nimport * as Photo from '../photos/types';\nimport * as Collection from '../collections/types';\n\ntype Username = {\n  username: string;\n};\n\nconst USERS_PATH_PREFIX = '/users';\n\nexport const get = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ username }: Username) => ({\n      pathname: getPathname({ username }),\n      query: {},\n    })),\n    handleResponse: castResponse<User.Full>(),\n  });\n})();\n\nexport const getPhotos = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        stats,\n        orientation,\n        ...paginationParams\n      }: {\n        stats?: boolean;\n      } & OrientationParam &\n        Username &\n        PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n          stats,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const getLikes = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/likes`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        orientation,\n        ...paginationParams\n      }: OrientationParam & Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\nexport const getCollections = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/collections`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ username, ...paginationParams }: Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Collection.Basic>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined, flow } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OmitStrict } from '../../helpers/typescript';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from '../photos/types';\nimport * as Topic from './types';\n\nexport type TopicIdOrSlug = {\n  topicIdOrSlug: string;\n};\n\nconst BASE_TOPIC_PATH = '/topics';\nconst getTopicPath = ({ topicIdOrSlug }: TopicIdOrSlug) => `${BASE_TOPIC_PATH}/${topicIdOrSlug}`;\n\nexport type TopicOrderBy = 'latest' | 'oldest' | 'position' | 'featured';\n\nexport const list = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({\n    page,\n    perPage,\n    orderBy,\n    topicIdsOrSlugs,\n  }: OmitStrict<PaginationParams, 'orderBy'> & {\n    /**\n     * default: `position`\n     */\n    orderBy?: TopicOrderBy;\n    topicIdsOrSlugs?: string[];\n  }) => ({\n    pathname: BASE_TOPIC_PATH,\n    query: compactDefined({\n      ...Query.getFeedParams({ page, perPage }),\n      ids: topicIdsOrSlugs?.join(','),\n      order_by: orderBy,\n    }),\n  }),\n  handleResponse: handleFeedResponse<Topic.Basic>(),\n});\n\nexport const get = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({ topicIdOrSlug }: TopicIdOrSlug) => ({\n    pathname: getTopicPath({ topicIdOrSlug }),\n    query: {},\n  }),\n  handleResponse: castResponse<Topic.Full>(),\n});\n\nexport const getPhotos = (() => {\n  const getPathname = flow(getTopicPath, topicPath => `${topicPath}/photos`);\n  return makeEndpoint({\n    getPathname,\n    handleRequest: ({\n      topicIdOrSlug,\n      orientation,\n      ...feedParams\n    }: TopicIdOrSlug & PaginationParams & OrientationParam) => ({\n      pathname: getPathname({ topicIdOrSlug }),\n      query: compactDefined({\n        ...Query.getFeedParams(feedParams),\n        orientation,\n      }),\n    }),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n","export const trackNonHotLinkedPhotoView = ({ appId }: { appId: string }) => ({\n  photoId,\n}: {\n  photoId: string | string[];\n}) => {\n  const ids = !Array.isArray(photoId) ? [photoId] : photoId;\n\n  if (ids.length > 20) {\n    throw new Error(\n      'You cannot track more than 20 photos at once. Please try again with fewer photos.',\n    );\n  }\n\n  return fetch(`views.unsplash.com/v?photo_id=${ids.join()}&app_id=${appId}`);\n};\n","export type SearchOrderBy = 'relevant' | 'latest' | 'editorial';\n\nexport type ColorId =\n  | 'white'\n  | 'black'\n  | 'yellow'\n  | 'orange'\n  | 'red'\n  | 'purple'\n  | 'magenta'\n  | 'green'\n  | 'teal'\n  | 'blue'\n  | 'black_and_white';\n\nexport type ContentFilter = 'high' | 'low';\n\nexport enum Language {\n  Afrikaans = 'af',\n  Amharic = 'am',\n  Arabic = 'ar',\n  Azerbaijani = 'az',\n  Belarusian = 'be',\n  Bulgarian = 'bg',\n  Bengali = 'bn',\n  Bosnian = 'bs',\n  Catalan = 'ca',\n  Cebuano = 'ceb',\n  Corsican = 'co',\n  Czech = 'cs',\n  Welsh = 'cy',\n  Danish = 'da',\n  German = 'de',\n  Greek = 'el',\n  English = 'en',\n  Esperanto = 'eo',\n  Spanish = 'es',\n  Estonian = 'et',\n  Basque = 'eu',\n  Persian = 'fa',\n  Finnish = 'fi',\n  French = 'fr',\n  Frisian = 'fy',\n  Irish = 'ga',\n  ScotsGaelic = 'gd',\n  Galician = 'gl',\n  Gujarati = 'gu',\n  Hausa = 'ha',\n  Hawaiian = 'haw',\n  Hindi = 'hi',\n  Hmong = 'hmn',\n  Croatian = 'hr',\n  HaitianCreole = 'ht',\n  Hungarian = 'hu',\n  Armenian = 'hy',\n  Indonesian = 'id',\n  Igbo = 'ig',\n  Icelandic = 'is',\n  Italian = 'it',\n  Hebrew = 'iw',\n  Japanese = 'ja',\n  Javanese = 'jw',\n  Georgian = 'ka',\n  Kazakh = 'kk',\n  Khmer = 'km',\n  Kannada = 'kn',\n  Korean = 'ko',\n  Kurdish = 'ku',\n  Kyrgyz = 'ky',\n  Latin = 'la',\n  Luxembourgish = 'lb',\n  Lao = 'lo',\n  Lithuanian = 'lt',\n  Latvian = 'lv',\n  Malagasy = 'mg',\n  Maori = 'mi',\n  Macedonian = 'mk',\n  Malayalam = 'ml',\n  Mongolian = 'mn',\n  Marathi = 'mr',\n  Malay = 'ms',\n  Maltese = 'mt',\n  Myanmar = 'my',\n  Nepali = 'ne',\n  Dutch = 'nl',\n  Norwegian = 'no',\n  Nyanja = 'ny',\n  Oriya = 'or',\n  Punjabi = 'pa',\n  Polish = 'pl',\n  Pashto = 'ps',\n  Portuguese = 'pt',\n  Romanian = 'ro',\n  Russian = 'ru',\n  Kinyarwanda = 'rw',\n  Sindhi = 'sd',\n  Sinhala = 'si',\n  Slovak = 'sk',\n  Slovenian = 'sl',\n  Samoan = 'sm',\n  Shona = 'sn',\n  Somali = 'so',\n  Albanian = 'sq',\n  Serbian = 'sr',\n  Sesotho = 'st',\n  Sundanese = 'su',\n  Swedish = 'sv',\n  Swahili = 'sw',\n  Tamil = 'ta',\n  Telugu = 'te',\n  Tajik = 'tg',\n  Thai = 'th',\n  Turkmen = 'tk',\n  Filipino = 'tl',\n  Turkish = 'tr',\n  Tatar = 'tt',\n  Uighur = 'ug',\n  Ukrainian = 'uk',\n  Urdu = 'ur',\n  Uzbek = 'uz',\n  Vietnamese = 'vi',\n  Xhosa = 'xh',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  ChineseSimplified = 'zh',\n  ChineseTraditional = 'zh-TW',\n  Zulu = 'zu',\n}\n","export enum OrderBy {\n  LATEST = 'latest',\n  POPULAR = 'popular',\n  VIEWS = 'views',\n  DOWNLOADS = 'downloads',\n  OLDEST = 'oldest',\n}\nexport type Orientation = 'landscape' | 'portrait' | 'squarish';\nexport type OrientationParam = {\n  orientation?: Orientation;\n};\nexport type Plus = 'mixed' | 'only' | 'none';\n\nexport type PaginationParams = {\n  /**\n   * API defaults to `10` if no value is provided\n   */\n  perPage?: number;\n  /**\n   * API defaults to `1` if no value is provided\n   */\n  page?: number;\n  /**\n   * API defaults to `\"latest\"` if no value is provided\n   */\n  orderBy?: OrderBy;\n};\n","import { flow } from './helpers/fp';\nimport { initMakeRequest } from './helpers/request';\nimport * as collections from './methods/collections';\nimport * as photos from './methods/photos';\nimport * as search from './methods/search';\nimport * as users from './methods/users';\nimport * as topics from './methods/topics';\n\nimport * as _internals from './internals';\n\nexport const createApi = flow(initMakeRequest, makeRequest => ({\n  photos: {\n    get: makeRequest(photos.get),\n    list: makeRequest(photos.list),\n    getStats: makeRequest(photos.getStats),\n    getRandom: makeRequest(photos.getRandom),\n    trackDownload: makeRequest(photos.trackDownload),\n  },\n  users: {\n    getPhotos: makeRequest(users.getPhotos),\n    getCollections: makeRequest(users.getCollections),\n    getLikes: makeRequest(users.getLikes),\n    get: makeRequest(users.get),\n  },\n  search: {\n    getCollections: makeRequest(search.getCollections),\n    getPhotos: makeRequest(search.getPhotos),\n    getUsers: makeRequest(search.getUsers),\n  },\n  collections: {\n    getPhotos: makeRequest(collections.getPhotos),\n    get: makeRequest(collections.get),\n    list: makeRequest(collections.list),\n    getRelated: makeRequest(collections.getRelated),\n  },\n  topics: {\n    list: makeRequest(topics.list),\n    get: makeRequest(topics.get),\n    getPhotos: makeRequest(topics.getPhotos),\n  },\n}));\n\nexport { Language, ColorId, ContentFilter, SearchOrderBy } from './methods/search/types/request';\nexport { OrderBy, Orientation, Plus } from './types/request';\nexport { _internals };\n"],"names":["checkIsString","getRefinement","value","isDefined","x","undefined","getB","a","checkIsNonEmptyArray","length","compactDefined","obj","Object","keys","reduce","acc","key","flow","fns","len","y","apply","i","call","checkIsObject","response","Array","isArray","checkIsErrors","errors","every","checkIsApiError","getErrorForBadStatusCode","jsonResponse","source","DecodingError","message","CONTENT_TYPE_RESPONSE_HEADER","CONTENT_TYPE_JSON","checkIsJsonResponse","contentTypeHeader","headers","get","ContentTypeHelpers","type","getJsonResponse","json","_err","handleFetchResponse","handleResponse","ok","then","handledResponse","status","originalResponse","error","castResponse","addQueryToUrl","query","url","forEach","queryKey","searchParams","set","toString","addPathnameToUrl","pathname","buildUrl","apiUrl","URL","getQueryFromSearchParams","parseQueryAndPathname","createRequestHandler","fn","additionalFetchOptions","baseReqParams","makeEndpoint","endpoint","initMakeRequest","accessKey","apiVersion","generalHeaders","providedFetch","fetch","generalFetchOptions","handleRequest","method","endpointHeaders","body","signal","fetchOptions","Authorization","fetchToUse","TOTAL_RESPONSE_HEADER","getTotalFromApiFeedResponse","totalsStr","total","parseInt","Number","isInteger","handleFeedResponse","results","getCollections","collectionIds","collections","join","getTopics","topicIds","topics","getFeedParams","page","perPage","orderBy","per_page","order_by","COLLECTIONS_PATH_PREFIX","getPhotos","getPathname","collectionId","orientation","paginationParams","Query","list","getRelated","PHOTOS_PATH_PREFIX","_params","feedParams","photoId","getStats","getRandom","contentFilter","queryParams","content_filter","trackDownload","downloadLocation","Error","SEARCH_PATH_PREFIX","lang","filters","getUsers","USERS_PATH_PREFIX","username","stats","getLikes","BASE_TOPIC_PATH","getTopicPath","topicIdOrSlug","topicIdsOrSlugs","ids","topicPath","trackNonHotLinkedPhotoView","appId","Language","OrderBy","createApi","makeRequest","photos","users","search"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"unsplash-js.cjs.development.js","sources":["../src/helpers/typescript.ts","../src/helpers/fp.ts","../src/helpers/errors.ts","../src/helpers/json.ts","../src/helpers/response.ts","../src/helpers/url.ts","../src/helpers/request.ts","../src/helpers/feed.ts","../src/helpers/query.ts","../src/methods/collections/index.ts","../src/methods/photos/index.ts","../src/methods/search/index.ts","../src/methods/users/index.ts","../src/methods/topics/index.ts","../src/beacon.ts","../src/methods/search/types/request.ts","../src/types/request.ts","../src/index.ts"],"sourcesContent":["// Copied from https://github.com/Microsoft/TypeScript/issues/1897#issuecomment-338650717\nexport type AnyJson = boolean | number | string | null | JsonArray | JsonMap;\nexport type JsonMap = { [key: string]: AnyJson };\nexport type JsonArray = Array<AnyJson>;\n\nexport const checkIsString = getRefinement(\n  (value: unknown): Nullable<string> => (typeof value === 'string' ? value : null),\n);\n\n/**\n * https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-377567046\n */\nexport type OmitStrict<T, K extends keyof T> = Omit<T, K>;\n\n/**\n * Unlike TypeScript's `NonNullable`, this does _not_ include `undefined`\n */\nexport type Nullable<T> = T | null;\n\nexport const isDefined = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\ntype Refinement<A, B extends A> = (a: A) => a is B;\nexport function getRefinement<A, B extends A>(getB: (a: A) => Nullable<B>): Refinement<A, B> {\n  return (a: A): a is B => isDefined(getB(a));\n}\n\nexport const checkIsNonEmptyArray = <T>(a: T[]): a is NonEmptyArray<T> => a.length > 0;\n","import { isDefined } from './typescript';\n\n/** Takes a dictionary containing nullish values and returns a dictionary of all the defined\n * (non-nullish) values.\n */\nexport const compactDefined = <A>(obj: Record<string, A | null | undefined>) =>\n  Object.keys(obj).reduce<Record<string, A>>((acc, key) => {\n    const value = obj[key];\n    return {\n      ...acc,\n      ...(isDefined(value) ? { [key]: value } : {}),\n    };\n  }, {});\n\n/**\n * copied from `fp-ts`\n * https://github.com/gcanti/fp-ts/blob/70190b5a03ddc2d31b4708c75c6dfad81d0bfa21/perf/function/flow.tÂ¡s\n */\nexport function flow<A extends Array<unknown>, B>(ab: (...a: A) => B): (...a: A) => B;\nexport function flow<A extends Array<unknown>, B, C>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n): (...a: A) => C;\nexport function flow<A extends Array<unknown>, B, C, D>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (b: C) => D,\n): (...a: A) => D;\nexport function flow(...fns: Array<Function>): Function {\n  const len = fns.length - 1;\n  return function(this: any, ...x: Array<any>) {\n    let y = fns[0].apply(this, x);\n    for (let i = 1; i <= len; i++) {\n      y = fns[i].call(this, y);\n    }\n    return y;\n  };\n}\n","import {\n  AnyJson,\n  checkIsString,\n  getRefinement,\n  isDefined,\n  checkIsNonEmptyArray,\n  JsonMap,\n  NonEmptyArray,\n  Nullable,\n} from './typescript';\n\nexport type Errors = NonEmptyArray<string>;\nexport type ErrorSource = 'api' | 'decoding';\n\nconst checkIsObject = getRefinement(\n  (response: AnyJson): Nullable<JsonMap> =>\n    isDefined(response) && typeof response === 'object' && !Array.isArray(response)\n      ? response\n      : null,\n);\n\nconst checkIsErrors = getRefinement(\n  (errors: AnyJson): Nullable<Errors> =>\n    Array.isArray(errors) && errors.every(checkIsString) && checkIsNonEmptyArray(errors)\n      ? errors\n      : null,\n);\n\nconst checkIsApiError = getRefinement(\n  (response: AnyJson): Nullable<{ errors: Errors }> =>\n    checkIsObject(response) && 'errors' in response && checkIsErrors(response.errors)\n      ? { errors: response.errors }\n      : null,\n);\n\nexport const getErrorForBadStatusCode = (\n  jsonResponse: AnyJson,\n): { errors: Errors; source: ErrorSource } => {\n  if (checkIsApiError(jsonResponse)) {\n    return { errors: jsonResponse.errors, source: 'api' };\n  } else {\n    return {\n      errors: [\n        'Responded with a status code outside the 2xx range, and the response body is not recognisable.',\n      ],\n      source: 'decoding',\n    };\n  }\n};\n\nexport class DecodingError {\n  constructor(readonly message: string) {}\n}\n","import * as ContentTypeHelpers from 'content-type';\nimport { DecodingError } from './errors';\nimport { AnyJson, isDefined } from './typescript';\n\nconst CONTENT_TYPE_RESPONSE_HEADER = 'content-type';\nconst CONTENT_TYPE_JSON = 'application/json';\nconst checkIsJsonResponse = (response: Response) => {\n  const contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);\n\n  return (\n    isDefined(contentTypeHeader) &&\n    ContentTypeHelpers.parse(contentTypeHeader).type === CONTENT_TYPE_JSON\n  );\n};\n\n/**\n * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.\n */\nexport const getJsonResponse = (response: Response): Promise<AnyJson> => {\n  if (checkIsJsonResponse(response)) {\n    return response.json().catch(_err => {\n      throw new DecodingError('unable to parse JSON response.');\n    });\n  } else {\n    throw new DecodingError('expected JSON response from server.');\n  }\n};\n","import { Errors, ErrorSource, getErrorForBadStatusCode, DecodingError } from './errors';\nimport { getJsonResponse } from './json';\n\nexport type ApiResponse<T> =\n  | {\n      type: 'success';\n      response: T;\n      originalResponse: Response;\n      errors?: never;\n      status: number;\n    }\n  | {\n      type: 'error';\n      source: ErrorSource;\n      response?: never;\n      originalResponse: Response;\n      errors: Errors;\n      status: number;\n    };\n\nexport type HandleResponse<T> = (args: { response: Response }) => Promise<T>;\n\nexport const handleFetchResponse = <ResponseType>(handleResponse: HandleResponse<ResponseType>) => (\n  response: Response,\n): Promise<ApiResponse<ResponseType>> =>\n  (response.ok\n    ? handleResponse({ response }).then(\n        (handledResponse): ApiResponse<ResponseType> => ({\n          type: 'success',\n          status: response.status,\n          response: handledResponse,\n          originalResponse: response,\n        }),\n      )\n    : getJsonResponse(response).then(\n        (jsonResponse): ApiResponse<ResponseType> => ({\n          type: 'error',\n          status: response.status,\n          ...getErrorForBadStatusCode(jsonResponse),\n          originalResponse: response,\n        }),\n      )\n  ).catch(error => {\n    /**\n     * We want to separate expected decoding errors from unknown ones. We do so by throwing a custom\n     * `DecodingError` whenever we encounter one within `handleFetchResponse` and catch them all\n     * here. This allows us to easily handle all of these errors at once. Unexpected errors are not\n     * caught, so that they bubble up and fail loudly.\n     *\n     * Note: Ideally we'd use an Either type, but this does the job without introducing dependencies\n     * like `fp-ts`.\n     */\n    if (error instanceof DecodingError) {\n      return {\n        type: 'error',\n        source: 'decoding',\n        status: response.status,\n        originalResponse: response,\n        errors: [error.message],\n      };\n    } else {\n      throw error;\n    }\n  });\n\nexport const castResponse = <T>(): HandleResponse<T> => ({ response }) =>\n  (getJsonResponse(response) as unknown) as Promise<T>;\n","type Query = {\n  [index: string]: string | number | boolean;\n};\n\nexport type BuildUrlParams = {\n  pathname: string;\n  query: Query;\n};\n\nconst addQueryToUrl = (query: Query) => (url: URL) => {\n  Object.keys(query).forEach(queryKey =>\n    url.searchParams.set(queryKey, query[queryKey].toString()),\n  );\n};\n\nconst addPathnameToUrl = (pathname: string) => (url: URL) => {\n  // When there is no existing pathname, the value is `/`. Appending would give us a URL with two\n  // forward slashes. This is why we replace the value in that scenario.\n  if (url.pathname === '/') {\n    url.pathname = pathname;\n  } else {\n    url.pathname += pathname;\n  }\n};\n\nexport const buildUrl = ({ pathname, query }: BuildUrlParams) => (apiUrl: string) => {\n  const url = new URL(apiUrl);\n  addPathnameToUrl(pathname)(url);\n  addQueryToUrl(query)(url);\n  return url.toString();\n};\n\nconst getQueryFromSearchParams = (searchParams: URLSearchParams) => {\n  const query: Query = {};\n\n  searchParams.forEach((value, key) => {\n    query[key] = value;\n  });\n  return query;\n};\n\nexport const parseQueryAndPathname = (url: string) => {\n  const { pathname, searchParams } = new URL(url);\n\n  const query: Query = getQueryFromSearchParams(searchParams);\n\n  return { query, pathname: pathname === '/' ? undefined : pathname };\n};\n","import { flow } from './fp';\nimport { ApiResponse, handleFetchResponse, HandleResponse } from './response';\nimport { isDefined, OmitStrict } from './typescript';\nimport { buildUrl, BuildUrlParams } from './url';\n\ntype FetchParams = Pick<RequestInit, 'method'>;\n/**\n * The params generated by the library\n */\ntype BaseRequestParams = BuildUrlParams &\n  FetchParams &\n  // `headers` is not part of FetchParams because we want to allow headers in the additional params as well\n  Pick<RequestInit, 'headers'>;\n\n/**\n * Additional fetch options provided by the user on a per-call basis\n */\nexport interface AdditionalFetchOptions extends OmitStrict<RequestInit, keyof FetchParams> {}\nexport type CompleteRequestParams = BaseRequestParams & AdditionalFetchOptions;\ntype HandleRequest<Args> = (\n  a: Args,\n  additionalFetchOptions?: AdditionalFetchOptions,\n) => CompleteRequestParams;\n\n/**\n * helper used to type-check the arguments, and add default params for all requests\n */\nexport const createRequestHandler = <Args>(\n  fn: (a: Args) => BaseRequestParams,\n): HandleRequest<Args> => (a, additionalFetchOptions = {}) => {\n  const { headers, query, ...baseReqParams } = fn(a);\n\n  return {\n    ...baseReqParams,\n    ...additionalFetchOptions,\n    query,\n    headers: {\n      ...headers,\n      ...additionalFetchOptions.headers,\n    },\n  };\n};\n\n/**\n * Initial parameters that apply to all calls\n */\nexport type InitParams = {\n  apiVersion?: string;\n  fetch?: typeof fetch;\n} & OmitStrict<RequestInit, 'method' | 'body'> &\n  ({ accessKey: string; apiUrl?: never } | { apiUrl: string; accessKey?: never });\n\ntype RequestGenerator<Args, ResponseType> = {\n  handleRequest: HandleRequest<Args>;\n  handleResponse: HandleResponse<ResponseType>;\n};\n\ntype Endpoint<PathnameParams, RequestArgs, ResponseType> = {\n  getPathname: (params: PathnameParams) => string;\n} & RequestGenerator<RequestArgs, ResponseType>;\nexport const makeEndpoint = <PathnameParams, RequestArgs, ResponseType>(\n  endpoint: Endpoint<PathnameParams, RequestArgs, ResponseType>,\n) => endpoint;\n\ntype GeneratedRequestFunction<Args, ResponseType> = (\n  ...a: Parameters<HandleRequest<Args>>\n) => Promise<ApiResponse<ResponseType>>;\n\ntype InitMakeRequest = (\n  args: InitParams,\n) => <Args, ResponseType>(\n  handlers: RequestGenerator<Args, ResponseType>,\n) => GeneratedRequestFunction<Args, ResponseType>;\n\nexport const initMakeRequest: InitMakeRequest = ({\n  accessKey,\n  apiVersion = 'v1',\n  apiUrl = 'https://api.unsplash.com',\n  headers: generalHeaders,\n  fetch: providedFetch,\n  ...generalFetchOptions\n}) => ({ handleResponse, handleRequest }) =>\n  flow(\n    handleRequest,\n    ({ pathname, query, method = 'GET', headers: endpointHeaders, body, signal }) => {\n      const url = buildUrl({ pathname, query })(apiUrl);\n\n      const fetchOptions: RequestInit = {\n        method,\n        headers: {\n          ...generalHeaders,\n          ...endpointHeaders,\n          'Accept-Version': apiVersion,\n          ...(isDefined(accessKey) ? { Authorization: `Client-ID ${accessKey}` } : {}),\n        },\n        body,\n        signal,\n        ...generalFetchOptions,\n      };\n\n      const fetchToUse = providedFetch ?? fetch;\n\n      return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));\n    },\n  );\n","import { DecodingError } from './errors';\nimport { HandleResponse, castResponse } from './response';\nimport { isDefined } from './typescript';\n\nconst TOTAL_RESPONSE_HEADER = 'x-total';\nconst getTotalFromApiFeedResponse = (response: Response) => {\n  const totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);\n  if (isDefined(totalsStr)) {\n    const total = parseInt(totalsStr);\n    if (Number.isInteger(total)) {\n      return total;\n    } else {\n      throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to be valid integer.`);\n    }\n  } else {\n    throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to exist.`);\n  }\n};\n\ntype FeedResponse<T> = {\n  results: T[];\n  total: number;\n};\n\nexport const handleFeedResponse = <T>(): HandleResponse<FeedResponse<T>> => ({ response }) =>\n  castResponse<T[]>()({ response }).then(results => ({\n    results,\n    total: getTotalFromApiFeedResponse(response),\n  }));\n","import { PaginationParams } from '../types/request';\nimport { compactDefined } from './fp';\nimport { isDefined } from './typescript';\n\nexport const getCollections = (collectionIds?: string[]) =>\n  isDefined(collectionIds) ? { collections: collectionIds.join() } : {};\n\nexport const getTopics = (topicIds?: string[]) =>\n  isDefined(topicIds) ? { topics: topicIds.join() } : {};\n\nexport const getFeedParams = ({ page, perPage, orderBy }: PaginationParams) =>\n  compactDefined({\n    per_page: perPage,\n    order_by: orderBy,\n    page,\n  });\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\n\ntype CollectionId = {\n  collectionId: string;\n};\n\nconst COLLECTIONS_PATH_PREFIX = '/collections';\n\nexport const getPhotos = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        collectionId,\n        orientation,\n        ...paginationParams\n      }: CollectionId & PaginationParams & OrientationParam) => ({\n        pathname: getPathname({ collectionId }),\n        query: compactDefined({ ...Query.getFeedParams(paginationParams), orientation }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n\nexport const list = (() => {\n  const getPathname = () => COLLECTIONS_PATH_PREFIX;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      (paginationParams: Pick<PaginationParams, 'page' | 'perPage'> = {}) => ({\n        pathname: getPathname(),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const getRelated = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/related`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { isDefined } from '../../helpers/typescript';\nimport { parseQueryAndPathname } from '../../helpers/url';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from './types';\n\ntype PhotoId = {\n  photoId: string;\n};\n\nconst PHOTOS_PATH_PREFIX = '/photos';\n\nexport const list = (() => {\n  const getPathname = () => PHOTOS_PATH_PREFIX;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler((feedParams: PaginationParams = {}) => ({\n      pathname: PHOTOS_PATH_PREFIX,\n      query: compactDefined(Query.getFeedParams(feedParams)),\n    })),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Full>(),\n  });\n})();\n\nexport const getStats = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Stats>(),\n  });\n})();\n\nexport type RandomParams = {\n  collectionIds?: string[];\n  topicIds?: string[];\n  featured?: boolean;\n  username?: string;\n  query?: string;\n  contentFilter?: 'low' | 'high';\n  count?: number;\n} & OrientationParam;\n\nexport const getRandom = (() => {\n  const getPathname = () => `${PHOTOS_PATH_PREFIX}/random`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ collectionIds, contentFilter, topicIds, ...queryParams }: RandomParams = {}) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          ...queryParams,\n          content_filter: contentFilter,\n          ...Query.getCollections(collectionIds),\n          ...Query.getTopics(topicIds),\n        }),\n        headers: {\n          /**\n           * Avoid response caching\n           */\n          'cache-control': 'no-cache',\n        },\n      }),\n    ),\n    handleResponse: castResponse<\n      // An array when the `count` query parameter is used.\n      Photo.Random | Photo.Random[]\n    >(),\n  });\n})();\n\nexport const trackDownload = {\n  handleRequest: createRequestHandler(({ downloadLocation }: { downloadLocation: string }) => {\n    const { pathname, query } = parseQueryAndPathname(downloadLocation);\n\n    if (!isDefined(pathname)) {\n      throw new Error('Could not parse pathname from url.');\n    }\n    return { pathname, query: compactDefined(query) };\n  }),\n  handleResponse: castResponse<{ url: string }>(),\n};\n","import { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams, Plus } from '../../types/request';\nimport { ColorId, ContentFilter, Language, SearchOrderBy } from './types/request';\nimport * as SearchResponse from './types/response';\n\nexport type SearchParams = {\n  query: string;\n} & Pick<PaginationParams, 'page' | 'perPage'>;\n\nconst SEARCH_PATH_PREFIX = `/search`;\n\ntype SearchPhotosParams = SearchParams &\n  OrientationParam & {\n    /**\n     * API defaults to `\"relevant\"` if no value is provided\n     */\n    orderBy?: SearchOrderBy;\n    color?: ColorId;\n    plus?: Plus;\n    /**\n     * API defaults to `en` (English) if no value is provided\n     */\n    lang?: Language;\n    /**\n     * API defaults to `\"low\"` if no value is provided\n     */\n    contentFilter?: ContentFilter;\n    collectionIds?: string[];\n  };\n\nexport const getPhotos = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/photos`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(\n      ({\n        query,\n        page,\n        perPage,\n        orderBy,\n        collectionIds,\n        lang,\n        contentFilter,\n        ...filters\n      }: SearchPhotosParams) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          query,\n          content_filter: contentFilter,\n          lang,\n          order_by: orderBy,\n          ...Query.getFeedParams({ page, perPage }),\n          ...Query.getCollections(collectionIds),\n          ...filters,\n        }),\n      }),\n    ),\n    handleResponse: castResponse<SearchResponse.Photos>(),\n  });\n})();\n\nexport const getCollections = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/collections`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Collections>(),\n  });\n})();\n\nexport const getUsers = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/users`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Users>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as User from './types';\nimport * as Photo from '../photos/types';\nimport * as Collection from '../collections/types';\n\ntype Username = {\n  username: string;\n};\n\nconst USERS_PATH_PREFIX = '/users';\n\nexport const get = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ username }: Username) => ({\n      pathname: getPathname({ username }),\n      query: {},\n    })),\n    handleResponse: castResponse<User.Full>(),\n  });\n})();\n\nexport const getPhotos = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        stats,\n        orientation,\n        ...paginationParams\n      }: {\n        stats?: boolean;\n      } & OrientationParam &\n        Username &\n        PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n          stats,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const getLikes = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/likes`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        orientation,\n        ...paginationParams\n      }: OrientationParam & Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\nexport const getCollections = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/collections`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ username, ...paginationParams }: Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Collection.Basic>(),\n  });\n})();\n\nexport const getStatistics = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        quantity = 30,\n        resolution = 'days',\n      }: Username & {\n        quantity?: number;\n        resolution?: string;\n      }) => ({\n        pathname: getPathname({ username }),\n        query: {\n          quantity,\n          resolution,\n        },\n      }),\n    ),\n    handleResponse: castResponse<User.Statistics>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined, flow } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OmitStrict } from '../../helpers/typescript';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from '../photos/types';\nimport * as Topic from './types';\n\nexport type TopicIdOrSlug = {\n  topicIdOrSlug: string;\n};\n\nconst BASE_TOPIC_PATH = '/topics';\nconst getTopicPath = ({ topicIdOrSlug }: TopicIdOrSlug) => `${BASE_TOPIC_PATH}/${topicIdOrSlug}`;\n\nexport type TopicOrderBy = 'latest' | 'oldest' | 'position' | 'featured';\n\nexport const list = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({\n    page,\n    perPage,\n    orderBy,\n    topicIdsOrSlugs,\n  }: OmitStrict<PaginationParams, 'orderBy'> & {\n    /**\n     * default: `position`\n     */\n    orderBy?: TopicOrderBy;\n    topicIdsOrSlugs?: string[];\n  }) => ({\n    pathname: BASE_TOPIC_PATH,\n    query: compactDefined({\n      ...Query.getFeedParams({ page, perPage }),\n      ids: topicIdsOrSlugs?.join(','),\n      order_by: orderBy,\n    }),\n  }),\n  handleResponse: handleFeedResponse<Topic.Basic>(),\n});\n\nexport const get = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({ topicIdOrSlug }: TopicIdOrSlug) => ({\n    pathname: getTopicPath({ topicIdOrSlug }),\n    query: {},\n  }),\n  handleResponse: castResponse<Topic.Full>(),\n});\n\nexport const getPhotos = (() => {\n  const getPathname = flow(getTopicPath, topicPath => `${topicPath}/photos`);\n  return makeEndpoint({\n    getPathname,\n    handleRequest: ({\n      topicIdOrSlug,\n      orientation,\n      ...feedParams\n    }: TopicIdOrSlug & PaginationParams & OrientationParam) => ({\n      pathname: getPathname({ topicIdOrSlug }),\n      query: compactDefined({\n        ...Query.getFeedParams(feedParams),\n        orientation,\n      }),\n    }),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n","export const trackNonHotLinkedPhotoView = ({ appId }: { appId: string }) => ({\n  photoId,\n}: {\n  photoId: string | string[];\n}) => {\n  const ids = !Array.isArray(photoId) ? [photoId] : photoId;\n\n  if (ids.length > 20) {\n    throw new Error(\n      'You cannot track more than 20 photos at once. Please try again with fewer photos.',\n    );\n  }\n\n  return fetch(`views.unsplash.com/v?photo_id=${ids.join()}&app_id=${appId}`);\n};\n","export type SearchOrderBy = 'relevant' | 'latest' | 'editorial';\n\nexport type ColorId =\n  | 'white'\n  | 'black'\n  | 'yellow'\n  | 'orange'\n  | 'red'\n  | 'purple'\n  | 'magenta'\n  | 'green'\n  | 'teal'\n  | 'blue'\n  | 'black_and_white';\n\nexport type ContentFilter = 'high' | 'low';\n\nexport enum Language {\n  Afrikaans = 'af',\n  Amharic = 'am',\n  Arabic = 'ar',\n  Azerbaijani = 'az',\n  Belarusian = 'be',\n  Bulgarian = 'bg',\n  Bengali = 'bn',\n  Bosnian = 'bs',\n  Catalan = 'ca',\n  Cebuano = 'ceb',\n  Corsican = 'co',\n  Czech = 'cs',\n  Welsh = 'cy',\n  Danish = 'da',\n  German = 'de',\n  Greek = 'el',\n  English = 'en',\n  Esperanto = 'eo',\n  Spanish = 'es',\n  Estonian = 'et',\n  Basque = 'eu',\n  Persian = 'fa',\n  Finnish = 'fi',\n  French = 'fr',\n  Frisian = 'fy',\n  Irish = 'ga',\n  ScotsGaelic = 'gd',\n  Galician = 'gl',\n  Gujarati = 'gu',\n  Hausa = 'ha',\n  Hawaiian = 'haw',\n  Hindi = 'hi',\n  Hmong = 'hmn',\n  Croatian = 'hr',\n  HaitianCreole = 'ht',\n  Hungarian = 'hu',\n  Armenian = 'hy',\n  Indonesian = 'id',\n  Igbo = 'ig',\n  Icelandic = 'is',\n  Italian = 'it',\n  Hebrew = 'iw',\n  Japanese = 'ja',\n  Javanese = 'jw',\n  Georgian = 'ka',\n  Kazakh = 'kk',\n  Khmer = 'km',\n  Kannada = 'kn',\n  Korean = 'ko',\n  Kurdish = 'ku',\n  Kyrgyz = 'ky',\n  Latin = 'la',\n  Luxembourgish = 'lb',\n  Lao = 'lo',\n  Lithuanian = 'lt',\n  Latvian = 'lv',\n  Malagasy = 'mg',\n  Maori = 'mi',\n  Macedonian = 'mk',\n  Malayalam = 'ml',\n  Mongolian = 'mn',\n  Marathi = 'mr',\n  Malay = 'ms',\n  Maltese = 'mt',\n  Myanmar = 'my',\n  Nepali = 'ne',\n  Dutch = 'nl',\n  Norwegian = 'no',\n  Nyanja = 'ny',\n  Oriya = 'or',\n  Punjabi = 'pa',\n  Polish = 'pl',\n  Pashto = 'ps',\n  Portuguese = 'pt',\n  Romanian = 'ro',\n  Russian = 'ru',\n  Kinyarwanda = 'rw',\n  Sindhi = 'sd',\n  Sinhala = 'si',\n  Slovak = 'sk',\n  Slovenian = 'sl',\n  Samoan = 'sm',\n  Shona = 'sn',\n  Somali = 'so',\n  Albanian = 'sq',\n  Serbian = 'sr',\n  Sesotho = 'st',\n  Sundanese = 'su',\n  Swedish = 'sv',\n  Swahili = 'sw',\n  Tamil = 'ta',\n  Telugu = 'te',\n  Tajik = 'tg',\n  Thai = 'th',\n  Turkmen = 'tk',\n  Filipino = 'tl',\n  Turkish = 'tr',\n  Tatar = 'tt',\n  Uighur = 'ug',\n  Ukrainian = 'uk',\n  Urdu = 'ur',\n  Uzbek = 'uz',\n  Vietnamese = 'vi',\n  Xhosa = 'xh',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  ChineseSimplified = 'zh',\n  ChineseTraditional = 'zh-TW',\n  Zulu = 'zu',\n}\n","export enum OrderBy {\n  LATEST = 'latest',\n  POPULAR = 'popular',\n  VIEWS = 'views',\n  DOWNLOADS = 'downloads',\n  OLDEST = 'oldest',\n}\nexport type Orientation = 'landscape' | 'portrait' | 'squarish';\nexport type OrientationParam = {\n  orientation?: Orientation;\n};\nexport type Plus = 'mixed' | 'only' | 'none';\n\nexport type PaginationParams = {\n  /**\n   * API defaults to `10` if no value is provided\n   */\n  perPage?: number;\n  /**\n   * API defaults to `1` if no value is provided\n   */\n  page?: number;\n  /**\n   * API defaults to `\"latest\"` if no value is provided\n   */\n  orderBy?: OrderBy;\n};\n","import { flow } from './helpers/fp';\nimport { initMakeRequest } from './helpers/request';\nimport * as collections from './methods/collections';\nimport * as photos from './methods/photos';\nimport * as search from './methods/search';\nimport * as users from './methods/users';\nimport * as topics from './methods/topics';\n\nimport * as _internals from './internals';\n\nexport const createApi = flow(initMakeRequest, (makeRequest) => ({\n  photos: {\n    get: makeRequest(photos.get),\n    list: makeRequest(photos.list),\n    getStats: makeRequest(photos.getStats),\n    getRandom: makeRequest(photos.getRandom),\n    trackDownload: makeRequest(photos.trackDownload),\n  },\n  users: {\n    getPhotos: makeRequest(users.getPhotos),\n    getCollections: makeRequest(users.getCollections),\n    getLikes: makeRequest(users.getLikes),\n    getStatistics: makeRequest(users.getStatistics),\n    get: makeRequest(users.get),\n  },\n  search: {\n    getCollections: makeRequest(search.getCollections),\n    getPhotos: makeRequest(search.getPhotos),\n    getUsers: makeRequest(search.getUsers),\n  },\n  collections: {\n    getPhotos: makeRequest(collections.getPhotos),\n    get: makeRequest(collections.get),\n    list: makeRequest(collections.list),\n    getRelated: makeRequest(collections.getRelated),\n  },\n  topics: {\n    list: makeRequest(topics.list),\n    get: makeRequest(topics.get),\n    getPhotos: makeRequest(topics.getPhotos),\n  },\n}));\n\nexport { Language, ColorId, ContentFilter, SearchOrderBy } from './methods/search/types/request';\nexport { OrderBy, Orientation, Plus } from './types/request';\nexport { _internals };\n"],"names":["checkIsString","getRefinement","value","isDefined","x","undefined","getB","a","checkIsNonEmptyArray","length","compactDefined","obj","Object","keys","reduce","acc","key","_extends","_ref","flow","fns","Array","_len","_key","arguments","len","_len2","_key2","y","apply","i","call","checkIsObject","response","isArray","checkIsErrors","errors","every","checkIsApiError","getErrorForBadStatusCode","jsonResponse","source","DecodingError","message","CONTENT_TYPE_RESPONSE_HEADER","CONTENT_TYPE_JSON","checkIsJsonResponse","contentTypeHeader","headers","get","ContentTypeHelpers","type","getJsonResponse","json","_err","handleFetchResponse","handleResponse","ok","then","handledResponse","status","originalResponse","error","castResponse","addQueryToUrl","query","url","forEach","queryKey","searchParams","set","toString","addPathnameToUrl","pathname","buildUrl","apiUrl","URL","getQueryFromSearchParams","parseQueryAndPathname","_URL","createRequestHandler","fn","additionalFetchOptions","_fn","baseReqParams","_objectWithoutPropertiesLoose","_excluded","makeEndpoint","endpoint","initMakeRequest","accessKey","_ref$apiVersion","apiVersion","_ref$apiUrl","generalHeaders","providedFetch","fetch","generalFetchOptions","_excluded2","_ref2","handleRequest","_ref3","_ref3$method","method","endpointHeaders","body","signal","fetchOptions","Authorization","fetchToUse","TOTAL_RESPONSE_HEADER","getTotalFromApiFeedResponse","totalsStr","total","parseInt","Number","isInteger","handleFeedResponse","results","getCollections","collectionIds","collections","join","getTopics","topicIds","topics","getFeedParams","page","perPage","orderBy","per_page","order_by","COLLECTIONS_PATH_PREFIX","getPhotos","getPathname","collectionId","orientation","paginationParams","Query","_ref4","list","getRelated","_ref5","_ref6","PHOTOS_PATH_PREFIX","_params","feedParams","photoId","getStats","getRandom","_temp","contentFilter","queryParams","content_filter","trackDownload","downloadLocation","_parseQueryAndPathnam","Error","SEARCH_PATH_PREFIX","lang","filters","getUsers","_excluded3","USERS_PATH_PREFIX","username","stats","getLikes","_ref7","_ref8","getStatistics","_ref9","_ref10","_ref10$quantity","quantity","_ref10$resolution","resolution","BASE_TOPIC_PATH","getTopicPath","topicIdOrSlug","topicIdsOrSlugs","ids","topicPath","trackNonHotLinkedPhotoView","appId","Language","OrderBy","createApi","makeRequest","photos","users","search"],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/unsplash-js.cjs.production.min.js b/dist/unsplash-js.cjs.production.min.js
index 56ed6c2ca1762f39a629c7f4dd2489636b8eabcf..68b23b71358c1f60f21e7fd795f238c0a6eea1e7 100644
--- a/dist/unsplash-js.cjs.production.min.js
+++ b/dist/unsplash-js.cjs.production.min.js
@@ -1,2 +1,2 @@
-"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("content-type");function n(){return(n=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function t(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n.indexOf(t=o[r])>=0||(a[t]=e[t]);return a}var r=o((function(e){return"string"==typeof e?e:null})),a=function(e){return null!=e};function o(e){return function(n){return a(e(n))}}var u=function(e){return Object.keys(e).reduce((function(t,r){var o,u=e[r];return n({},t,a(u)?((o={})[r]=u,o):{})}),{})};function i(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];var r=n.length-1;return function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];for(var o=n[0].apply(this,t),u=1;u<=r;u++)o=n[u].call(this,o);return o}}var s,c,l=o((function(e){return a(e)&&"object"==typeof e&&!Array.isArray(e)?e:null})),h=o((function(e){return Array.isArray(e)&&e.every(r)&&e.length>0?e:null})),p=o((function(e){return l(e)&&"errors"in e&&h(e.errors)?{errors:e.errors}:null})),d=function(e){this.message=e},f=function(n){if(function(n){var t=n.headers.get("content-type");return a(t)&&"application/json"===e.parse(t).type}(n))return n.json().catch((function(e){throw new d("unable to parse JSON response.")}));throw new d("expected JSON response from server.")},g=function(){return function(e){return f(e.response)}},m=function(e){return function(r,a){void 0===a&&(a={});var o=e(r),u=o.headers,i=o.query;return n({},t(o,["headers","query"]),a,{query:i,headers:n({},u,a.headers)})}},y=function(e){return e},v=function(e){var r=e.accessKey,o=e.apiVersion,u=void 0===o?"v1":o,s=e.apiUrl,c=void 0===s?"https://api.unsplash.com":s,l=e.headers,h=e.fetch,g=t(e,["accessKey","apiVersion","apiUrl","headers","fetch"]);return function(e){var t=e.handleResponse;return i(e.handleRequest,(function(e){var o=e.method,i=void 0===o?"GET":o,s=e.headers,m=e.body,y=e.signal,v=function(e){var n=e.pathname,t=e.query;return function(e){var r=new URL(e);return function(e){return function(n){"/"===n.pathname?n.pathname=e:n.pathname+=e}}(n)(r),function(e){return function(n){Object.keys(e).forEach((function(t){return n.searchParams.set(t,e[t].toString())}))}}(t)(r),r.toString()}}({pathname:e.pathname,query:e.query})(c),q=n({method:i,headers:n({},l,s,{"Accept-Version":u},a(r)?{Authorization:"Client-ID "+r}:{}),body:m,signal:y},g);return(null!=h?h:fetch)(v,q).then(function(e){return function(t){return(t.ok?e({response:t}).then((function(e){return{type:"success",status:t.status,response:e,originalResponse:t}})):f(t).then((function(e){return n({type:"error",status:t.status},function(e){return p(e)?{errors:e.errors,source:"api"}:{errors:["Responded with a status code outside the 2xx range, and the response body is not recognisable."],source:"decoding"}}(e),{originalResponse:t})}))).catch((function(e){if(e instanceof d)return{type:"error",source:"decoding",status:t.status,originalResponse:t,errors:[e.message]};throw e}))}}(t))}))}},q=function(e){var n=e.headers.get("x-total");if(a(n)){var t=parseInt(n);if(Number.isInteger(t))return t;throw new d("expected x-total header to be valid integer.")}throw new d("expected x-total header to exist.")},R=function(){return function(e){var n=e.response;return g()({response:n}).then((function(e){return{results:e,total:q(n)}}))}},P=function(e){return a(e)?{collections:e.join()}:{}},I=function(e){return a(e)?{topics:e.join()}:{}},w=function(e){return u({per_page:e.perPage,order_by:e.orderBy,page:e.page})},_=function(){var e=function(e){return"/collections/"+e.collectionId+"/photos"};return{getPathname:e,handleRequest:m((function(r){var a=r.collectionId,o=r.orientation,i=t(r,["collectionId","orientation"]);return{pathname:e({collectionId:a}),query:u(n({},w(i),{orientation:o}))}})),handleResponse:R()}}(),b=function(){var e=function(e){return"/collections/"+e.collectionId};return{getPathname:e,handleRequest:m((function(n){return{pathname:e({collectionId:n.collectionId}),query:{}}})),handleResponse:g()}}(),k=function(){return{getPathname:function(){return"/collections"},handleRequest:m((function(e){return void 0===e&&(e={}),{pathname:"/collections",query:w(e)}})),handleResponse:R()}}(),S=function(){var e=function(e){return"/collections/"+e.collectionId+"/related"};return{getPathname:e,handleRequest:m((function(n){return{pathname:e({collectionId:n.collectionId}),query:{}}})),handleResponse:g()}}(),O={__proto__:null,getPhotos:_,get:b,list:k,getRelated:S},j=function(){return{getPathname:function(e){return"/photos"},handleRequest:m((function(e){return void 0===e&&(e={}),{pathname:"/photos",query:u(w(e))}})),handleResponse:R()}}(),A=function(){var e=function(e){return"/photos/"+e.photoId};return{getPathname:e,handleRequest:m((function(n){return{pathname:e({photoId:n.photoId}),query:{}}})),handleResponse:g()}}(),x=function(){var e=function(e){return"/photos/"+e.photoId+"/statistics"};return{getPathname:e,handleRequest:m((function(n){return{pathname:e({photoId:n.photoId}),query:{}}})),handleResponse:g()}}(),L=function(){return{getPathname:function(){return"/photos/random"},handleRequest:m((function(e){var r=void 0===e?{}:e,a=r.collectionIds,o=r.contentFilter,i=r.topicIds,s=t(r,["collectionIds","contentFilter","topicIds"]);return{pathname:"/photos/random",query:u(n({},s,{content_filter:o},P(a),I(i))),headers:{"cache-control":"no-cache"}}})),handleResponse:g()}}(),C={handleRequest:m((function(e){var n=function(e){var n=new URL(e),t=n.pathname;return{query:function(e){var n={};return e.forEach((function(e,t){n[t]=e})),n}(n.searchParams),pathname:"/"===t?void 0:t}}(e.downloadLocation),t=n.pathname,r=n.query;if(!a(t))throw new Error("Could not parse pathname from url.");return{pathname:t,query:u(r)}})),handleResponse:g()},T={__proto__:null,list:j,get:A,getStats:x,getRandom:L,trackDownload:C},z=function(){return{getPathname:function(e){return"/search/photos"},handleRequest:m((function(e){var r=e.query,a=e.page,o=e.perPage,i=e.orderBy,s=e.collectionIds,c=e.lang,l=e.contentFilter,h=t(e,["query","page","perPage","orderBy","collectionIds","lang","contentFilter"]);return{pathname:"/search/photos",query:u(n({query:r,content_filter:l,lang:c,order_by:i},w({page:a,perPage:o}),P(s),h))}})),handleResponse:g()}}(),B=function(){return{getPathname:function(e){return"/search/collections"},handleRequest:m((function(e){var r=e.query,a=t(e,["query"]);return{pathname:"/search/collections",query:n({query:r},w(a))}})),handleResponse:g()}}(),E=function(){return{getPathname:function(e){return"/search/users"},handleRequest:m((function(e){var r=e.query,a=t(e,["query"]);return{pathname:"/search/users",query:n({query:r},w(a))}})),handleResponse:g()}}(),U={__proto__:null,getPhotos:z,getCollections:B,getUsers:E},M=function(){var e=function(e){return"/users/"+e.username};return{getPathname:e,handleRequest:m((function(n){return{pathname:e({username:n.username}),query:{}}})),handleResponse:g()}}(),K=function(){var e=function(e){return"/users/"+e.username+"/photos"};return{getPathname:e,handleRequest:m((function(r){var a=r.username,o=r.stats,i=r.orientation,s=t(r,["username","stats","orientation"]);return{pathname:e({username:a}),query:u(n({},w(s),{orientation:i,stats:o}))}})),handleResponse:R()}}(),D=function(){var e=function(e){return"/users/"+e.username+"/likes"};return{getPathname:e,handleRequest:m((function(r){var a=r.username,o=r.orientation,i=t(r,["username","orientation"]);return{pathname:e({username:a}),query:u(n({},w(i),{orientation:o}))}})),handleResponse:R()}}(),F=function(){var e=function(e){return"/users/"+e.username+"/collections"};return{getPathname:e,handleRequest:m((function(n){var r=n.username,a=t(n,["username"]);return{pathname:e({username:r}),query:w(a)}})),handleResponse:R()}}(),H={__proto__:null,get:M,getPhotos:K,getLikes:D,getCollections:F},N=function(e){return"/topics/"+e.topicIdOrSlug},G=y({getPathname:N,handleRequest:function(e){var t=e.orderBy,r=e.topicIdsOrSlugs;return{pathname:"/topics",query:u(n({},w({page:e.page,perPage:e.perPage}),{ids:null==r?void 0:r.join(","),order_by:t}))}},handleResponse:R()}),V=y({getPathname:N,handleRequest:function(e){return{pathname:N({topicIdOrSlug:e.topicIdOrSlug}),query:{}}},handleResponse:g()}),J=function(){var e=i(N,(function(e){return e+"/photos"}));return{getPathname:e,handleRequest:function(r){var a=r.topicIdOrSlug,o=r.orientation,i=t(r,["topicIdOrSlug","orientation"]);return{pathname:e({topicIdOrSlug:a}),query:u(n({},w(i),{orientation:o}))}},handleResponse:R()}}(),W={__proto__:null,collections:O,photos:T,search:U,users:H,topics:{__proto__:null,list:G,get:V,getPhotos:J},trackNonHotLinkedPhotoView:function(e){var n=e.appId;return function(e){var t=e.photoId,r=Array.isArray(t)?t:[t];if(r.length>20)throw new Error("You cannot track more than 20 photos at once. Please try again with fewer photos.");return fetch("views.unsplash.com/v?photo_id="+r.join()+"&app_id="+n)}}};(s=exports.Language||(exports.Language={})).Afrikaans="af",s.Amharic="am",s.Arabic="ar",s.Azerbaijani="az",s.Belarusian="be",s.Bulgarian="bg",s.Bengali="bn",s.Bosnian="bs",s.Catalan="ca",s.Cebuano="ceb",s.Corsican="co",s.Czech="cs",s.Welsh="cy",s.Danish="da",s.German="de",s.Greek="el",s.English="en",s.Esperanto="eo",s.Spanish="es",s.Estonian="et",s.Basque="eu",s.Persian="fa",s.Finnish="fi",s.French="fr",s.Frisian="fy",s.Irish="ga",s.ScotsGaelic="gd",s.Galician="gl",s.Gujarati="gu",s.Hausa="ha",s.Hawaiian="haw",s.Hindi="hi",s.Hmong="hmn",s.Croatian="hr",s.HaitianCreole="ht",s.Hungarian="hu",s.Armenian="hy",s.Indonesian="id",s.Igbo="ig",s.Icelandic="is",s.Italian="it",s.Hebrew="iw",s.Japanese="ja",s.Javanese="jw",s.Georgian="ka",s.Kazakh="kk",s.Khmer="km",s.Kannada="kn",s.Korean="ko",s.Kurdish="ku",s.Kyrgyz="ky",s.Latin="la",s.Luxembourgish="lb",s.Lao="lo",s.Lithuanian="lt",s.Latvian="lv",s.Malagasy="mg",s.Maori="mi",s.Macedonian="mk",s.Malayalam="ml",s.Mongolian="mn",s.Marathi="mr",s.Malay="ms",s.Maltese="mt",s.Myanmar="my",s.Nepali="ne",s.Dutch="nl",s.Norwegian="no",s.Nyanja="ny",s.Oriya="or",s.Punjabi="pa",s.Polish="pl",s.Pashto="ps",s.Portuguese="pt",s.Romanian="ro",s.Russian="ru",s.Kinyarwanda="rw",s.Sindhi="sd",s.Sinhala="si",s.Slovak="sk",s.Slovenian="sl",s.Samoan="sm",s.Shona="sn",s.Somali="so",s.Albanian="sq",s.Serbian="sr",s.Sesotho="st",s.Sundanese="su",s.Swedish="sv",s.Swahili="sw",s.Tamil="ta",s.Telugu="te",s.Tajik="tg",s.Thai="th",s.Turkmen="tk",s.Filipino="tl",s.Turkish="tr",s.Tatar="tt",s.Uighur="ug",s.Ukrainian="uk",s.Urdu="ur",s.Uzbek="uz",s.Vietnamese="vi",s.Xhosa="xh",s.Yiddish="yi",s.Yoruba="yo",s.ChineseSimplified="zh",s.ChineseTraditional="zh-TW",s.Zulu="zu",(c=exports.OrderBy||(exports.OrderBy={})).LATEST="latest",c.POPULAR="popular",c.VIEWS="views",c.DOWNLOADS="downloads",c.OLDEST="oldest";var Y=i(v,(function(e){return{photos:{get:e(A),list:e(j),getStats:e(x),getRandom:e(L),trackDownload:e(C)},users:{getPhotos:e(K),getCollections:e(F),getLikes:e(D),get:e(M)},search:{getCollections:e(B),getPhotos:e(z),getUsers:e(E)},collections:{getPhotos:e(_),get:e(b),list:e(k),getRelated:e(S)},topics:{list:e(G),get:e(V),getPhotos:e(J)}}}));exports._internals=W,exports.createApi=Y;
+"use strict";var e=require("content-type");function n(){return(n=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function t(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n.indexOf(t=o[r])>=0||(a[t]=e[t]);return a}var r=o((function(e){return"string"==typeof e?e:null})),a=function(e){return null!=e};function o(e){return function(n){return a(e(n))}}var i=function(e){return Object.keys(e).reduce((function(t,r){var o,i=e[r];return n({},t,a(i)?((o={})[r]=i,o):{})}),{})};function s(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];var r=n.length-1;return function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];for(var o=n[0].apply(this,t),i=1;i<=r;i++)o=n[i].call(this,o);return o}}var u,c,l=o((function(e){return a(e)&&"object"==typeof e&&!Array.isArray(e)?e:null})),h=o((function(e){return Array.isArray(e)&&e.every(r)&&e.length>0?e:null})),p=o((function(e){return l(e)&&"errors"in e&&h(e.errors)?{errors:e.errors}:null})),d=function(e){this.message=void 0,this.message=e},f=function(n){if(function(n){var t=n.headers.get("content-type");return a(t)&&"application/json"===e.parse(t).type}(n))return n.json().catch((function(e){throw new d("unable to parse JSON response.")}));throw new d("expected JSON response from server.")},g=function(){return function(e){return f(e.response)}},m=["headers","query"],y=["accessKey","apiVersion","apiUrl","headers","fetch"],v=function(e){return function(r,a){void 0===a&&(a={});var o=e(r),i=o.headers,s=o.query;return n({},t(o,m),a,{query:s,headers:n({},i,a.headers)})}},q=function(e){return e},R=function(e){var r=e.accessKey,o=e.apiVersion,i=void 0===o?"v1":o,u=e.apiUrl,c=void 0===u?"https://api.unsplash.com":u,l=e.headers,h=e.fetch,g=t(e,y);return function(e){var t=e.handleResponse;return s(e.handleRequest,(function(e){var o=e.method,s=void 0===o?"GET":o,u=e.headers,m=e.body,y=e.signal,v=function(e){var n=e.pathname,t=e.query;return function(e){var r=new URL(e);return function(e){return function(n){"/"===n.pathname?n.pathname=e:n.pathname+=e}}(n)(r),function(e){return function(n){Object.keys(e).forEach((function(t){return n.searchParams.set(t,e[t].toString())}))}}(t)(r),r.toString()}}({pathname:e.pathname,query:e.query})(c),q=n({method:s,headers:n({},l,u,{"Accept-Version":i},a(r)?{Authorization:"Client-ID "+r}:{}),body:m,signal:y},g);return(null!=h?h:fetch)(v,q).then(function(e){return function(t){return(t.ok?e({response:t}).then((function(e){return{type:"success",status:t.status,response:e,originalResponse:t}})):f(t).then((function(e){return n({type:"error",status:t.status},function(e){return p(e)?{errors:e.errors,source:"api"}:{errors:["Responded with a status code outside the 2xx range, and the response body is not recognisable."],source:"decoding"}}(e),{originalResponse:t})}))).catch((function(e){if(e instanceof d)return{type:"error",source:"decoding",status:t.status,originalResponse:t,errors:[e.message]};throw e}))}}(t))}))}},P=function(e){var n=e.headers.get("x-total");if(a(n)){var t=parseInt(n);if(Number.isInteger(t))return t;throw new d("expected x-total header to be valid integer.")}throw new d("expected x-total header to exist.")},I=function(){return function(e){var n=e.response;return g()({response:n}).then((function(e){return{results:e,total:P(n)}}))}},w=function(e){return a(e)?{collections:e.join()}:{}},b=function(e){return a(e)?{topics:e.join()}:{}},S=function(e){return i({per_page:e.perPage,order_by:e.orderBy,page:e.page})},k=["collectionId","orientation"],_=function(){var e=function(e){return"/collections/"+e.collectionId+"/photos"};return{getPathname:e,handleRequest:v((function(r){var a=r.collectionId,o=r.orientation,s=t(r,k);return{pathname:e({collectionId:a}),query:i(n({},S(s),{orientation:o}))}})),handleResponse:I()}}(),O=function(){var e=function(e){return"/collections/"+e.collectionId};return{getPathname:e,handleRequest:v((function(n){return{pathname:e({collectionId:n.collectionId}),query:{}}})),handleResponse:g()}}(),j=function(){return{getPathname:function(){return"/collections"},handleRequest:v((function(e){return void 0===e&&(e={}),{pathname:"/collections",query:S(e)}})),handleResponse:I()}}(),A=function(){var e=function(e){return"/collections/"+e.collectionId+"/related"};return{getPathname:e,handleRequest:v((function(n){return{pathname:e({collectionId:n.collectionId}),query:{}}})),handleResponse:g()}}(),x={__proto__:null,getPhotos:_,get:O,list:j,getRelated:A},L=["collectionIds","contentFilter","topicIds"],C=function(){return{getPathname:function(e){return"/photos"},handleRequest:v((function(e){return void 0===e&&(e={}),{pathname:"/photos",query:i(S(e))}})),handleResponse:I()}}(),T=function(){var e=function(e){return"/photos/"+e.photoId};return{getPathname:e,handleRequest:v((function(n){return{pathname:e({photoId:n.photoId}),query:{}}})),handleResponse:g()}}(),z=function(){var e=function(e){return"/photos/"+e.photoId+"/statistics"};return{getPathname:e,handleRequest:v((function(n){return{pathname:e({photoId:n.photoId}),query:{}}})),handleResponse:g()}}(),B=function(){return{getPathname:function(){return"/photos/random"},handleRequest:v((function(e){var r=void 0===e?{}:e,a=r.collectionIds,o=r.contentFilter,s=r.topicIds,u=t(r,L);return{pathname:"/photos/random",query:i(n({},u,{content_filter:o},w(a),b(s))),headers:{"cache-control":"no-cache"}}})),handleResponse:g()}}(),E={handleRequest:v((function(e){var n=function(e){var n=new URL(e),t=n.pathname;return{query:function(e){var n={};return e.forEach((function(e,t){n[t]=e})),n}(n.searchParams),pathname:"/"===t?void 0:t}}(e.downloadLocation),t=n.pathname,r=n.query;if(!a(t))throw new Error("Could not parse pathname from url.");return{pathname:t,query:i(r)}})),handleResponse:g()},U={__proto__:null,list:C,get:T,getStats:z,getRandom:B,trackDownload:E},K=["query","page","perPage","orderBy","collectionIds","lang","contentFilter"],M=["query"],D=["query"],F=function(){return{getPathname:function(e){return"/search/photos"},handleRequest:v((function(e){var r=e.query,a=e.page,o=e.perPage,s=e.orderBy,u=e.collectionIds,c=e.lang,l=e.contentFilter,h=t(e,K);return{pathname:"/search/photos",query:i(n({query:r,content_filter:l,lang:c,order_by:s},S({page:a,perPage:o}),w(u),h))}})),handleResponse:g()}}(),H=function(){return{getPathname:function(e){return"/search/collections"},handleRequest:v((function(e){var r=e.query,a=t(e,M);return{pathname:"/search/collections",query:n({query:r},S(a))}})),handleResponse:g()}}(),N=function(){return{getPathname:function(e){return"/search/users"},handleRequest:v((function(e){var r=e.query,a=t(e,D);return{pathname:"/search/users",query:n({query:r},S(a))}})),handleResponse:g()}}(),G={__proto__:null,getPhotos:F,getCollections:H,getUsers:N},V=["username","stats","orientation"],J=["username","orientation"],W=["username"],Y=function(){var e=function(e){return"/users/"+e.username};return{getPathname:e,handleRequest:v((function(n){return{pathname:e({username:n.username}),query:{}}})),handleResponse:g()}}(),X=function(){var e=function(e){return"/users/"+e.username+"/photos"};return{getPathname:e,handleRequest:v((function(r){var a=r.username,o=r.stats,s=r.orientation,u=t(r,V);return{pathname:e({username:a}),query:i(n({},S(u),{orientation:s,stats:o}))}})),handleResponse:I()}}(),Z=function(){var e=function(e){return"/users/"+e.username+"/likes"};return{getPathname:e,handleRequest:v((function(r){var a=r.username,o=r.orientation,s=t(r,J);return{pathname:e({username:a}),query:i(n({},S(s),{orientation:o}))}})),handleResponse:I()}}(),Q=function(){var e=function(e){return"/users/"+e.username+"/collections"};return{getPathname:e,handleRequest:v((function(n){var r=n.username,a=t(n,W);return{pathname:e({username:r}),query:S(a)}})),handleResponse:I()}}(),$=function(){var e=function(e){return"/users/"+e.username+"/statistics"};return{getPathname:e,handleRequest:v((function(n){var t=n.quantity,r=void 0===t?30:t,a=n.resolution,o=void 0===a?"days":a;return{pathname:e({username:n.username}),query:{quantity:r,resolution:o}}})),handleResponse:g()}}(),ee={__proto__:null,get:Y,getPhotos:X,getLikes:Z,getCollections:Q,getStatistics:$},ne=["topicIdOrSlug","orientation"],te=function(e){return"/topics/"+e.topicIdOrSlug},re=q({getPathname:te,handleRequest:function(e){var t=e.orderBy,r=e.topicIdsOrSlugs;return{pathname:"/topics",query:i(n({},S({page:e.page,perPage:e.perPage}),{ids:null==r?void 0:r.join(","),order_by:t}))}},handleResponse:I()}),ae=q({getPathname:te,handleRequest:function(e){return{pathname:te({topicIdOrSlug:e.topicIdOrSlug}),query:{}}},handleResponse:g()}),oe=function(){var e=s(te,(function(e){return e+"/photos"}));return{getPathname:e,handleRequest:function(r){var a=r.topicIdOrSlug,o=r.orientation,s=t(r,ne);return{pathname:e({topicIdOrSlug:a}),query:i(n({},S(s),{orientation:o}))}},handleResponse:I()}}(),ie={__proto__:null,collections:x,photos:U,search:G,users:ee,topics:{__proto__:null,list:re,get:ae,getPhotos:oe},trackNonHotLinkedPhotoView:function(e){var n=e.appId;return function(e){var t=e.photoId,r=Array.isArray(t)?t:[t];if(r.length>20)throw new Error("You cannot track more than 20 photos at once. Please try again with fewer photos.");return fetch("views.unsplash.com/v?photo_id="+r.join()+"&app_id="+n)}}};(u=exports.Language||(exports.Language={})).Afrikaans="af",u.Amharic="am",u.Arabic="ar",u.Azerbaijani="az",u.Belarusian="be",u.Bulgarian="bg",u.Bengali="bn",u.Bosnian="bs",u.Catalan="ca",u.Cebuano="ceb",u.Corsican="co",u.Czech="cs",u.Welsh="cy",u.Danish="da",u.German="de",u.Greek="el",u.English="en",u.Esperanto="eo",u.Spanish="es",u.Estonian="et",u.Basque="eu",u.Persian="fa",u.Finnish="fi",u.French="fr",u.Frisian="fy",u.Irish="ga",u.ScotsGaelic="gd",u.Galician="gl",u.Gujarati="gu",u.Hausa="ha",u.Hawaiian="haw",u.Hindi="hi",u.Hmong="hmn",u.Croatian="hr",u.HaitianCreole="ht",u.Hungarian="hu",u.Armenian="hy",u.Indonesian="id",u.Igbo="ig",u.Icelandic="is",u.Italian="it",u.Hebrew="iw",u.Japanese="ja",u.Javanese="jw",u.Georgian="ka",u.Kazakh="kk",u.Khmer="km",u.Kannada="kn",u.Korean="ko",u.Kurdish="ku",u.Kyrgyz="ky",u.Latin="la",u.Luxembourgish="lb",u.Lao="lo",u.Lithuanian="lt",u.Latvian="lv",u.Malagasy="mg",u.Maori="mi",u.Macedonian="mk",u.Malayalam="ml",u.Mongolian="mn",u.Marathi="mr",u.Malay="ms",u.Maltese="mt",u.Myanmar="my",u.Nepali="ne",u.Dutch="nl",u.Norwegian="no",u.Nyanja="ny",u.Oriya="or",u.Punjabi="pa",u.Polish="pl",u.Pashto="ps",u.Portuguese="pt",u.Romanian="ro",u.Russian="ru",u.Kinyarwanda="rw",u.Sindhi="sd",u.Sinhala="si",u.Slovak="sk",u.Slovenian="sl",u.Samoan="sm",u.Shona="sn",u.Somali="so",u.Albanian="sq",u.Serbian="sr",u.Sesotho="st",u.Sundanese="su",u.Swedish="sv",u.Swahili="sw",u.Tamil="ta",u.Telugu="te",u.Tajik="tg",u.Thai="th",u.Turkmen="tk",u.Filipino="tl",u.Turkish="tr",u.Tatar="tt",u.Uighur="ug",u.Ukrainian="uk",u.Urdu="ur",u.Uzbek="uz",u.Vietnamese="vi",u.Xhosa="xh",u.Yiddish="yi",u.Yoruba="yo",u.ChineseSimplified="zh",u.ChineseTraditional="zh-TW",u.Zulu="zu",(c=exports.OrderBy||(exports.OrderBy={})).LATEST="latest",c.POPULAR="popular",c.VIEWS="views",c.DOWNLOADS="downloads",c.OLDEST="oldest";var se=s(R,(function(e){return{photos:{get:e(T),list:e(C),getStats:e(z),getRandom:e(B),trackDownload:e(E)},users:{getPhotos:e(X),getCollections:e(Q),getLikes:e(Z),getStatistics:e($),get:e(Y)},search:{getCollections:e(H),getPhotos:e(F),getUsers:e(N)},collections:{getPhotos:e(_),get:e(O),list:e(j),getRelated:e(A)},topics:{list:e(re),get:e(ae),getPhotos:e(oe)}}}));exports._internals=ie,exports.createApi=se;
 //# sourceMappingURL=unsplash-js.cjs.production.min.js.map
diff --git a/dist/unsplash-js.cjs.production.min.js.map b/dist/unsplash-js.cjs.production.min.js.map
index fc2834a686847a469dbdf7230ed86fbc51234fc1..878cb2c4fd8c5fbd6506d920629957026f704644 100644
--- a/dist/unsplash-js.cjs.production.min.js.map
+++ b/dist/unsplash-js.cjs.production.min.js.map
@@ -1 +1 @@
-{"version":3,"file":"unsplash-js.cjs.production.min.js","sources":["../src/helpers/typescript.ts","../src/helpers/fp.ts","../src/helpers/errors.ts","../src/methods/search/types/request.ts","../src/types/request.ts","../src/helpers/json.ts","../src/helpers/response.ts","../src/helpers/request.ts","../src/helpers/url.ts","../src/helpers/feed.ts","../src/helpers/query.ts","../src/methods/collections/index.ts","../src/methods/photos/index.ts","../src/methods/search/index.ts","../src/methods/users/index.ts","../src/methods/topics/index.ts","../src/beacon.ts","../src/index.ts"],"sourcesContent":["// Copied from https://github.com/Microsoft/TypeScript/issues/1897#issuecomment-338650717\nexport type AnyJson = boolean | number | string | null | JsonArray | JsonMap;\nexport type JsonMap = { [key: string]: AnyJson };\nexport type JsonArray = Array<AnyJson>;\n\nexport const checkIsString = getRefinement(\n  (value: unknown): Nullable<string> => (typeof value === 'string' ? value : null),\n);\n\n/**\n * https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-377567046\n */\nexport type OmitStrict<T, K extends keyof T> = Omit<T, K>;\n\n/**\n * Unlike TypeScript's `NonNullable`, this does _not_ include `undefined`\n */\nexport type Nullable<T> = T | null;\n\nexport const isDefined = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\ntype Refinement<A, B extends A> = (a: A) => a is B;\nexport function getRefinement<A, B extends A>(getB: (a: A) => Nullable<B>): Refinement<A, B> {\n  return (a: A): a is B => isDefined(getB(a));\n}\n\nexport const checkIsNonEmptyArray = <T>(a: T[]): a is NonEmptyArray<T> => a.length > 0;\n","import { isDefined } from './typescript';\n\n/** Takes a dictionary containing nullish values and returns a dictionary of all the defined\n * (non-nullish) values.\n */\nexport const compactDefined = <A>(obj: Record<string, A | null | undefined>) =>\n  Object.keys(obj).reduce<Record<string, A>>((acc, key) => {\n    const value = obj[key];\n    return {\n      ...acc,\n      ...(isDefined(value) ? { [key]: value } : {}),\n    };\n  }, {});\n\n/**\n * copied from `fp-ts`\n * https://github.com/gcanti/fp-ts/blob/70190b5a03ddc2d31b4708c75c6dfad81d0bfa21/perf/function/flow.tÂ¡s\n */\nexport function flow<A extends Array<unknown>, B>(ab: (...a: A) => B): (...a: A) => B;\nexport function flow<A extends Array<unknown>, B, C>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n): (...a: A) => C;\nexport function flow<A extends Array<unknown>, B, C, D>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (b: C) => D,\n): (...a: A) => D;\nexport function flow(...fns: Array<Function>): Function {\n  const len = fns.length - 1;\n  return function(this: any, ...x: Array<any>) {\n    let y = fns[0].apply(this, x);\n    for (let i = 1; i <= len; i++) {\n      y = fns[i].call(this, y);\n    }\n    return y;\n  };\n}\n","import {\n  AnyJson,\n  checkIsString,\n  getRefinement,\n  isDefined,\n  checkIsNonEmptyArray,\n  JsonMap,\n  NonEmptyArray,\n  Nullable,\n} from './typescript';\n\nexport type Errors = NonEmptyArray<string>;\nexport type ErrorSource = 'api' | 'decoding';\n\nconst checkIsObject = getRefinement(\n  (response: AnyJson): Nullable<JsonMap> =>\n    isDefined(response) && typeof response === 'object' && !Array.isArray(response)\n      ? response\n      : null,\n);\n\nconst checkIsErrors = getRefinement(\n  (errors: AnyJson): Nullable<Errors> =>\n    Array.isArray(errors) && errors.every(checkIsString) && checkIsNonEmptyArray(errors)\n      ? errors\n      : null,\n);\n\nconst checkIsApiError = getRefinement(\n  (response: AnyJson): Nullable<{ errors: Errors }> =>\n    checkIsObject(response) && 'errors' in response && checkIsErrors(response.errors)\n      ? { errors: response.errors }\n      : null,\n);\n\nexport const getErrorForBadStatusCode = (\n  jsonResponse: AnyJson,\n): { errors: Errors; source: ErrorSource } => {\n  if (checkIsApiError(jsonResponse)) {\n    return { errors: jsonResponse.errors, source: 'api' };\n  } else {\n    return {\n      errors: [\n        'Responded with a status code outside the 2xx range, and the response body is not recognisable.',\n      ],\n      source: 'decoding',\n    };\n  }\n};\n\nexport class DecodingError {\n  constructor(readonly message: string) {}\n}\n","export type SearchOrderBy = 'relevant' | 'latest' | 'editorial';\n\nexport type ColorId =\n  | 'white'\n  | 'black'\n  | 'yellow'\n  | 'orange'\n  | 'red'\n  | 'purple'\n  | 'magenta'\n  | 'green'\n  | 'teal'\n  | 'blue'\n  | 'black_and_white';\n\nexport type ContentFilter = 'high' | 'low';\n\nexport enum Language {\n  Afrikaans = 'af',\n  Amharic = 'am',\n  Arabic = 'ar',\n  Azerbaijani = 'az',\n  Belarusian = 'be',\n  Bulgarian = 'bg',\n  Bengali = 'bn',\n  Bosnian = 'bs',\n  Catalan = 'ca',\n  Cebuano = 'ceb',\n  Corsican = 'co',\n  Czech = 'cs',\n  Welsh = 'cy',\n  Danish = 'da',\n  German = 'de',\n  Greek = 'el',\n  English = 'en',\n  Esperanto = 'eo',\n  Spanish = 'es',\n  Estonian = 'et',\n  Basque = 'eu',\n  Persian = 'fa',\n  Finnish = 'fi',\n  French = 'fr',\n  Frisian = 'fy',\n  Irish = 'ga',\n  ScotsGaelic = 'gd',\n  Galician = 'gl',\n  Gujarati = 'gu',\n  Hausa = 'ha',\n  Hawaiian = 'haw',\n  Hindi = 'hi',\n  Hmong = 'hmn',\n  Croatian = 'hr',\n  HaitianCreole = 'ht',\n  Hungarian = 'hu',\n  Armenian = 'hy',\n  Indonesian = 'id',\n  Igbo = 'ig',\n  Icelandic = 'is',\n  Italian = 'it',\n  Hebrew = 'iw',\n  Japanese = 'ja',\n  Javanese = 'jw',\n  Georgian = 'ka',\n  Kazakh = 'kk',\n  Khmer = 'km',\n  Kannada = 'kn',\n  Korean = 'ko',\n  Kurdish = 'ku',\n  Kyrgyz = 'ky',\n  Latin = 'la',\n  Luxembourgish = 'lb',\n  Lao = 'lo',\n  Lithuanian = 'lt',\n  Latvian = 'lv',\n  Malagasy = 'mg',\n  Maori = 'mi',\n  Macedonian = 'mk',\n  Malayalam = 'ml',\n  Mongolian = 'mn',\n  Marathi = 'mr',\n  Malay = 'ms',\n  Maltese = 'mt',\n  Myanmar = 'my',\n  Nepali = 'ne',\n  Dutch = 'nl',\n  Norwegian = 'no',\n  Nyanja = 'ny',\n  Oriya = 'or',\n  Punjabi = 'pa',\n  Polish = 'pl',\n  Pashto = 'ps',\n  Portuguese = 'pt',\n  Romanian = 'ro',\n  Russian = 'ru',\n  Kinyarwanda = 'rw',\n  Sindhi = 'sd',\n  Sinhala = 'si',\n  Slovak = 'sk',\n  Slovenian = 'sl',\n  Samoan = 'sm',\n  Shona = 'sn',\n  Somali = 'so',\n  Albanian = 'sq',\n  Serbian = 'sr',\n  Sesotho = 'st',\n  Sundanese = 'su',\n  Swedish = 'sv',\n  Swahili = 'sw',\n  Tamil = 'ta',\n  Telugu = 'te',\n  Tajik = 'tg',\n  Thai = 'th',\n  Turkmen = 'tk',\n  Filipino = 'tl',\n  Turkish = 'tr',\n  Tatar = 'tt',\n  Uighur = 'ug',\n  Ukrainian = 'uk',\n  Urdu = 'ur',\n  Uzbek = 'uz',\n  Vietnamese = 'vi',\n  Xhosa = 'xh',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  ChineseSimplified = 'zh',\n  ChineseTraditional = 'zh-TW',\n  Zulu = 'zu',\n}\n","export enum OrderBy {\n  LATEST = 'latest',\n  POPULAR = 'popular',\n  VIEWS = 'views',\n  DOWNLOADS = 'downloads',\n  OLDEST = 'oldest',\n}\nexport type Orientation = 'landscape' | 'portrait' | 'squarish';\nexport type OrientationParam = {\n  orientation?: Orientation;\n};\nexport type Plus = 'mixed' | 'only' | 'none';\n\nexport type PaginationParams = {\n  /**\n   * API defaults to `10` if no value is provided\n   */\n  perPage?: number;\n  /**\n   * API defaults to `1` if no value is provided\n   */\n  page?: number;\n  /**\n   * API defaults to `\"latest\"` if no value is provided\n   */\n  orderBy?: OrderBy;\n};\n","import * as ContentTypeHelpers from 'content-type';\nimport { DecodingError } from './errors';\nimport { AnyJson, isDefined } from './typescript';\n\nconst CONTENT_TYPE_RESPONSE_HEADER = 'content-type';\nconst CONTENT_TYPE_JSON = 'application/json';\nconst checkIsJsonResponse = (response: Response) => {\n  const contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);\n\n  return (\n    isDefined(contentTypeHeader) &&\n    ContentTypeHelpers.parse(contentTypeHeader).type === CONTENT_TYPE_JSON\n  );\n};\n\n/**\n * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.\n */\nexport const getJsonResponse = (response: Response): Promise<AnyJson> => {\n  if (checkIsJsonResponse(response)) {\n    return response.json().catch(_err => {\n      throw new DecodingError('unable to parse JSON response.');\n    });\n  } else {\n    throw new DecodingError('expected JSON response from server.');\n  }\n};\n","import { Errors, ErrorSource, getErrorForBadStatusCode, DecodingError } from './errors';\nimport { getJsonResponse } from './json';\n\nexport type ApiResponse<T> =\n  | {\n      type: 'success';\n      response: T;\n      originalResponse: Response;\n      errors?: never;\n      status: number;\n    }\n  | {\n      type: 'error';\n      source: ErrorSource;\n      response?: never;\n      originalResponse: Response;\n      errors: Errors;\n      status: number;\n    };\n\nexport type HandleResponse<T> = (args: { response: Response }) => Promise<T>;\n\nexport const handleFetchResponse = <ResponseType>(handleResponse: HandleResponse<ResponseType>) => (\n  response: Response,\n): Promise<ApiResponse<ResponseType>> =>\n  (response.ok\n    ? handleResponse({ response }).then(\n        (handledResponse): ApiResponse<ResponseType> => ({\n          type: 'success',\n          status: response.status,\n          response: handledResponse,\n          originalResponse: response,\n        }),\n      )\n    : getJsonResponse(response).then(\n        (jsonResponse): ApiResponse<ResponseType> => ({\n          type: 'error',\n          status: response.status,\n          ...getErrorForBadStatusCode(jsonResponse),\n          originalResponse: response,\n        }),\n      )\n  ).catch(error => {\n    /**\n     * We want to separate expected decoding errors from unknown ones. We do so by throwing a custom\n     * `DecodingError` whenever we encounter one within `handleFetchResponse` and catch them all\n     * here. This allows us to easily handle all of these errors at once. Unexpected errors are not\n     * caught, so that they bubble up and fail loudly.\n     *\n     * Note: Ideally we'd use an Either type, but this does the job without introducing dependencies\n     * like `fp-ts`.\n     */\n    if (error instanceof DecodingError) {\n      return {\n        type: 'error',\n        source: 'decoding',\n        status: response.status,\n        originalResponse: response,\n        errors: [error.message],\n      };\n    } else {\n      throw error;\n    }\n  });\n\nexport const castResponse = <T>(): HandleResponse<T> => ({ response }) =>\n  (getJsonResponse(response) as unknown) as Promise<T>;\n","import { flow } from './fp';\nimport { ApiResponse, handleFetchResponse, HandleResponse } from './response';\nimport { isDefined, OmitStrict } from './typescript';\nimport { buildUrl, BuildUrlParams } from './url';\n\ntype FetchParams = Pick<RequestInit, 'method'>;\n/**\n * The params generated by the library\n */\ntype BaseRequestParams = BuildUrlParams &\n  FetchParams &\n  // `headers` is not part of FetchParams because we want to allow headers in the additional params as well\n  Pick<RequestInit, 'headers'>;\n\n/**\n * Additional fetch options provided by the user on a per-call basis\n */\nexport interface AdditionalFetchOptions extends OmitStrict<RequestInit, keyof FetchParams> {}\nexport type CompleteRequestParams = BaseRequestParams & AdditionalFetchOptions;\ntype HandleRequest<Args> = (\n  a: Args,\n  additionalFetchOptions?: AdditionalFetchOptions,\n) => CompleteRequestParams;\n\n/**\n * helper used to type-check the arguments, and add default params for all requests\n */\nexport const createRequestHandler = <Args>(\n  fn: (a: Args) => BaseRequestParams,\n): HandleRequest<Args> => (a, additionalFetchOptions = {}) => {\n  const { headers, query, ...baseReqParams } = fn(a);\n\n  return {\n    ...baseReqParams,\n    ...additionalFetchOptions,\n    query,\n    headers: {\n      ...headers,\n      ...additionalFetchOptions.headers,\n    },\n  };\n};\n\n/**\n * Initial parameters that apply to all calls\n */\nexport type InitParams = {\n  apiVersion?: string;\n  fetch?: typeof fetch;\n} & OmitStrict<RequestInit, 'method' | 'body'> &\n  ({ accessKey: string; apiUrl?: never } | { apiUrl: string; accessKey?: never });\n\ntype RequestGenerator<Args, ResponseType> = {\n  handleRequest: HandleRequest<Args>;\n  handleResponse: HandleResponse<ResponseType>;\n};\n\ntype Endpoint<PathnameParams, RequestArgs, ResponseType> = {\n  getPathname: (params: PathnameParams) => string;\n} & RequestGenerator<RequestArgs, ResponseType>;\nexport const makeEndpoint = <PathnameParams, RequestArgs, ResponseType>(\n  endpoint: Endpoint<PathnameParams, RequestArgs, ResponseType>,\n) => endpoint;\n\ntype GeneratedRequestFunction<Args, ResponseType> = (\n  ...a: Parameters<HandleRequest<Args>>\n) => Promise<ApiResponse<ResponseType>>;\n\ntype InitMakeRequest = (\n  args: InitParams,\n) => <Args, ResponseType>(\n  handlers: RequestGenerator<Args, ResponseType>,\n) => GeneratedRequestFunction<Args, ResponseType>;\n\nexport const initMakeRequest: InitMakeRequest = ({\n  accessKey,\n  apiVersion = 'v1',\n  apiUrl = 'https://api.unsplash.com',\n  headers: generalHeaders,\n  fetch: providedFetch,\n  ...generalFetchOptions\n}) => ({ handleResponse, handleRequest }) =>\n  flow(\n    handleRequest,\n    ({ pathname, query, method = 'GET', headers: endpointHeaders, body, signal }) => {\n      const url = buildUrl({ pathname, query })(apiUrl);\n\n      const fetchOptions: RequestInit = {\n        method,\n        headers: {\n          ...generalHeaders,\n          ...endpointHeaders,\n          'Accept-Version': apiVersion,\n          ...(isDefined(accessKey) ? { Authorization: `Client-ID ${accessKey}` } : {}),\n        },\n        body,\n        signal,\n        ...generalFetchOptions,\n      };\n\n      const fetchToUse = providedFetch ?? fetch;\n\n      return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));\n    },\n  );\n","type Query = {\n  [index: string]: string | number | boolean;\n};\n\nexport type BuildUrlParams = {\n  pathname: string;\n  query: Query;\n};\n\nconst addQueryToUrl = (query: Query) => (url: URL) => {\n  Object.keys(query).forEach(queryKey =>\n    url.searchParams.set(queryKey, query[queryKey].toString()),\n  );\n};\n\nconst addPathnameToUrl = (pathname: string) => (url: URL) => {\n  // When there is no existing pathname, the value is `/`. Appending would give us a URL with two\n  // forward slashes. This is why we replace the value in that scenario.\n  if (url.pathname === '/') {\n    url.pathname = pathname;\n  } else {\n    url.pathname += pathname;\n  }\n};\n\nexport const buildUrl = ({ pathname, query }: BuildUrlParams) => (apiUrl: string) => {\n  const url = new URL(apiUrl);\n  addPathnameToUrl(pathname)(url);\n  addQueryToUrl(query)(url);\n  return url.toString();\n};\n\nconst getQueryFromSearchParams = (searchParams: URLSearchParams) => {\n  const query: Query = {};\n\n  searchParams.forEach((value, key) => {\n    query[key] = value;\n  });\n  return query;\n};\n\nexport const parseQueryAndPathname = (url: string) => {\n  const { pathname, searchParams } = new URL(url);\n\n  const query: Query = getQueryFromSearchParams(searchParams);\n\n  return { query, pathname: pathname === '/' ? undefined : pathname };\n};\n","import { DecodingError } from './errors';\nimport { HandleResponse, castResponse } from './response';\nimport { isDefined } from './typescript';\n\nconst TOTAL_RESPONSE_HEADER = 'x-total';\nconst getTotalFromApiFeedResponse = (response: Response) => {\n  const totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);\n  if (isDefined(totalsStr)) {\n    const total = parseInt(totalsStr);\n    if (Number.isInteger(total)) {\n      return total;\n    } else {\n      throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to be valid integer.`);\n    }\n  } else {\n    throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to exist.`);\n  }\n};\n\ntype FeedResponse<T> = {\n  results: T[];\n  total: number;\n};\n\nexport const handleFeedResponse = <T>(): HandleResponse<FeedResponse<T>> => ({ response }) =>\n  castResponse<T[]>()({ response }).then(results => ({\n    results,\n    total: getTotalFromApiFeedResponse(response),\n  }));\n","import { PaginationParams } from '../types/request';\nimport { compactDefined } from './fp';\nimport { isDefined } from './typescript';\n\nexport const getCollections = (collectionIds?: string[]) =>\n  isDefined(collectionIds) ? { collections: collectionIds.join() } : {};\n\nexport const getTopics = (topicIds?: string[]) =>\n  isDefined(topicIds) ? { topics: topicIds.join() } : {};\n\nexport const getFeedParams = ({ page, perPage, orderBy }: PaginationParams) =>\n  compactDefined({\n    per_page: perPage,\n    order_by: orderBy,\n    page,\n  });\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\n\ntype CollectionId = {\n  collectionId: string;\n};\n\nconst COLLECTIONS_PATH_PREFIX = '/collections';\n\nexport const getPhotos = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        collectionId,\n        orientation,\n        ...paginationParams\n      }: CollectionId & PaginationParams & OrientationParam) => ({\n        pathname: getPathname({ collectionId }),\n        query: compactDefined({ ...Query.getFeedParams(paginationParams), orientation }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n\nexport const list = (() => {\n  const getPathname = () => COLLECTIONS_PATH_PREFIX;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      (paginationParams: Pick<PaginationParams, 'page' | 'perPage'> = {}) => ({\n        pathname: getPathname(),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const getRelated = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/related`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { isDefined } from '../../helpers/typescript';\nimport { parseQueryAndPathname } from '../../helpers/url';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from './types';\n\ntype PhotoId = {\n  photoId: string;\n};\n\nconst PHOTOS_PATH_PREFIX = '/photos';\n\nexport const list = (() => {\n  const getPathname = () => PHOTOS_PATH_PREFIX;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler((feedParams: PaginationParams = {}) => ({\n      pathname: PHOTOS_PATH_PREFIX,\n      query: compactDefined(Query.getFeedParams(feedParams)),\n    })),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Full>(),\n  });\n})();\n\nexport const getStats = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Stats>(),\n  });\n})();\n\nexport type RandomParams = {\n  collectionIds?: string[];\n  topicIds?: string[];\n  featured?: boolean;\n  username?: string;\n  query?: string;\n  contentFilter?: 'low' | 'high';\n  count?: number;\n} & OrientationParam;\n\nexport const getRandom = (() => {\n  const getPathname = () => `${PHOTOS_PATH_PREFIX}/random`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ collectionIds, contentFilter, topicIds, ...queryParams }: RandomParams = {}) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          ...queryParams,\n          content_filter: contentFilter,\n          ...Query.getCollections(collectionIds),\n          ...Query.getTopics(topicIds),\n        }),\n        headers: {\n          /**\n           * Avoid response caching\n           */\n          'cache-control': 'no-cache',\n        },\n      }),\n    ),\n    handleResponse: castResponse<\n      // An array when the `count` query parameter is used.\n      Photo.Random | Photo.Random[]\n    >(),\n  });\n})();\n\nexport const trackDownload = {\n  handleRequest: createRequestHandler(({ downloadLocation }: { downloadLocation: string }) => {\n    const { pathname, query } = parseQueryAndPathname(downloadLocation);\n\n    if (!isDefined(pathname)) {\n      throw new Error('Could not parse pathname from url.');\n    }\n    return { pathname, query: compactDefined(query) };\n  }),\n  handleResponse: castResponse<{ url: string }>(),\n};\n","import { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams, Plus } from '../../types/request';\nimport { ColorId, ContentFilter, Language, SearchOrderBy } from './types/request';\nimport * as SearchResponse from './types/response';\n\nexport type SearchParams = {\n  query: string;\n} & Pick<PaginationParams, 'page' | 'perPage'>;\n\nconst SEARCH_PATH_PREFIX = `/search`;\n\ntype SearchPhotosParams = SearchParams &\n  OrientationParam & {\n    /**\n     * API defaults to `\"relevant\"` if no value is provided\n     */\n    orderBy?: SearchOrderBy;\n    color?: ColorId;\n    plus?: Plus;\n    /**\n     * API defaults to `en` (English) if no value is provided\n     */\n    lang?: Language;\n    /**\n     * API defaults to `\"low\"` if no value is provided\n     */\n    contentFilter?: ContentFilter;\n    collectionIds?: string[];\n  };\n\nexport const getPhotos = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/photos`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(\n      ({\n        query,\n        page,\n        perPage,\n        orderBy,\n        collectionIds,\n        lang,\n        contentFilter,\n        ...filters\n      }: SearchPhotosParams) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          query,\n          content_filter: contentFilter,\n          lang,\n          order_by: orderBy,\n          ...Query.getFeedParams({ page, perPage }),\n          ...Query.getCollections(collectionIds),\n          ...filters,\n        }),\n      }),\n    ),\n    handleResponse: castResponse<SearchResponse.Photos>(),\n  });\n})();\n\nexport const getCollections = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/collections`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Collections>(),\n  });\n})();\n\nexport const getUsers = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/users`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Users>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as User from './types';\nimport * as Photo from '../photos/types';\nimport * as Collection from '../collections/types';\n\ntype Username = {\n  username: string;\n};\n\nconst USERS_PATH_PREFIX = '/users';\n\nexport const get = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ username }: Username) => ({\n      pathname: getPathname({ username }),\n      query: {},\n    })),\n    handleResponse: castResponse<User.Full>(),\n  });\n})();\n\nexport const getPhotos = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        stats,\n        orientation,\n        ...paginationParams\n      }: {\n        stats?: boolean;\n      } & OrientationParam &\n        Username &\n        PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n          stats,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const getLikes = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/likes`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        orientation,\n        ...paginationParams\n      }: OrientationParam & Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\nexport const getCollections = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/collections`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ username, ...paginationParams }: Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Collection.Basic>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined, flow } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OmitStrict } from '../../helpers/typescript';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from '../photos/types';\nimport * as Topic from './types';\n\nexport type TopicIdOrSlug = {\n  topicIdOrSlug: string;\n};\n\nconst BASE_TOPIC_PATH = '/topics';\nconst getTopicPath = ({ topicIdOrSlug }: TopicIdOrSlug) => `${BASE_TOPIC_PATH}/${topicIdOrSlug}`;\n\nexport type TopicOrderBy = 'latest' | 'oldest' | 'position' | 'featured';\n\nexport const list = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({\n    page,\n    perPage,\n    orderBy,\n    topicIdsOrSlugs,\n  }: OmitStrict<PaginationParams, 'orderBy'> & {\n    /**\n     * default: `position`\n     */\n    orderBy?: TopicOrderBy;\n    topicIdsOrSlugs?: string[];\n  }) => ({\n    pathname: BASE_TOPIC_PATH,\n    query: compactDefined({\n      ...Query.getFeedParams({ page, perPage }),\n      ids: topicIdsOrSlugs?.join(','),\n      order_by: orderBy,\n    }),\n  }),\n  handleResponse: handleFeedResponse<Topic.Basic>(),\n});\n\nexport const get = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({ topicIdOrSlug }: TopicIdOrSlug) => ({\n    pathname: getTopicPath({ topicIdOrSlug }),\n    query: {},\n  }),\n  handleResponse: castResponse<Topic.Full>(),\n});\n\nexport const getPhotos = (() => {\n  const getPathname = flow(getTopicPath, topicPath => `${topicPath}/photos`);\n  return makeEndpoint({\n    getPathname,\n    handleRequest: ({\n      topicIdOrSlug,\n      orientation,\n      ...feedParams\n    }: TopicIdOrSlug & PaginationParams & OrientationParam) => ({\n      pathname: getPathname({ topicIdOrSlug }),\n      query: compactDefined({\n        ...Query.getFeedParams(feedParams),\n        orientation,\n      }),\n    }),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n","export const trackNonHotLinkedPhotoView = ({ appId }: { appId: string }) => ({\n  photoId,\n}: {\n  photoId: string | string[];\n}) => {\n  const ids = !Array.isArray(photoId) ? [photoId] : photoId;\n\n  if (ids.length > 20) {\n    throw new Error(\n      'You cannot track more than 20 photos at once. Please try again with fewer photos.',\n    );\n  }\n\n  return fetch(`views.unsplash.com/v?photo_id=${ids.join()}&app_id=${appId}`);\n};\n","import { flow } from './helpers/fp';\nimport { initMakeRequest } from './helpers/request';\nimport * as collections from './methods/collections';\nimport * as photos from './methods/photos';\nimport * as search from './methods/search';\nimport * as users from './methods/users';\nimport * as topics from './methods/topics';\n\nimport * as _internals from './internals';\n\nexport const createApi = flow(initMakeRequest, makeRequest => ({\n  photos: {\n    get: makeRequest(photos.get),\n    list: makeRequest(photos.list),\n    getStats: makeRequest(photos.getStats),\n    getRandom: makeRequest(photos.getRandom),\n    trackDownload: makeRequest(photos.trackDownload),\n  },\n  users: {\n    getPhotos: makeRequest(users.getPhotos),\n    getCollections: makeRequest(users.getCollections),\n    getLikes: makeRequest(users.getLikes),\n    get: makeRequest(users.get),\n  },\n  search: {\n    getCollections: makeRequest(search.getCollections),\n    getPhotos: makeRequest(search.getPhotos),\n    getUsers: makeRequest(search.getUsers),\n  },\n  collections: {\n    getPhotos: makeRequest(collections.getPhotos),\n    get: makeRequest(collections.get),\n    list: makeRequest(collections.list),\n    getRelated: makeRequest(collections.getRelated),\n  },\n  topics: {\n    list: makeRequest(topics.list),\n    get: makeRequest(topics.get),\n    getPhotos: makeRequest(topics.getPhotos),\n  },\n}));\n\nexport { Language, ColorId, ContentFilter, SearchOrderBy } from './methods/search/types/request';\nexport { OrderBy, Orientation, Plus } from './types/request';\nexport { _internals };\n"],"names":["checkIsString","getRefinement","value","isDefined","x","getB","a","compactDefined","obj","Object","keys","reduce","acc","key","flow","fns","len","length","y","apply","this","i","call","Language","OrderBy","checkIsObject","response","Array","isArray","checkIsErrors","errors","every","checkIsApiError","DecodingError","message","getJsonResponse","contentTypeHeader","headers","get","ContentTypeHelpers","type","checkIsJsonResponse","json","_err","castResponse","createRequestHandler","fn","additionalFetchOptions","query","makeEndpoint","endpoint","initMakeRequest","accessKey","apiVersion","apiUrl","generalHeaders","providedFetch","fetch","generalFetchOptions","handleResponse","handleRequest","method","endpointHeaders","body","signal","url","pathname","URL","addPathnameToUrl","forEach","queryKey","searchParams","set","toString","addQueryToUrl","buildUrl","fetchOptions","Authorization","then","ok","handledResponse","status","originalResponse","jsonResponse","source","getErrorForBadStatusCode","error","handleFetchResponse","getTotalFromApiFeedResponse","totalsStr","total","parseInt","Number","isInteger","handleFeedResponse","results","getCollections","collectionIds","collections","join","getTopics","topicIds","topics","getFeedParams","per_page","perPage","order_by","orderBy","page","getPhotos","getPathname","COLLECTIONS_PATH_PREFIX","collectionId","orientation","paginationParams","Query","list","getRelated","_params","feedParams","PHOTOS_PATH_PREFIX","photoId","getStats","getRandom","contentFilter","queryParams","content_filter","trackDownload","getQueryFromSearchParams","undefined","parseQueryAndPathname","downloadLocation","Error","SEARCH_PATH_PREFIX","lang","filters","getUsers","USERS_PATH_PREFIX","username","stats","getLikes","getTopicPath","BASE_TOPIC_PATH","topicIdOrSlug","topicIdsOrSlugs","ids","topicPath","appId","createApi","makeRequest","photos","users","search"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"unsplash-js.cjs.production.min.js","sources":["../src/helpers/typescript.ts","../src/helpers/fp.ts","../src/helpers/errors.ts","../src/methods/search/types/request.ts","../src/types/request.ts","../src/helpers/json.ts","../src/helpers/response.ts","../src/helpers/request.ts","../src/helpers/url.ts","../src/helpers/feed.ts","../src/helpers/query.ts","../src/methods/collections/index.ts","../src/methods/photos/index.ts","../src/methods/search/index.ts","../src/methods/users/index.ts","../src/methods/topics/index.ts","../src/beacon.ts","../src/index.ts"],"sourcesContent":["// Copied from https://github.com/Microsoft/TypeScript/issues/1897#issuecomment-338650717\nexport type AnyJson = boolean | number | string | null | JsonArray | JsonMap;\nexport type JsonMap = { [key: string]: AnyJson };\nexport type JsonArray = Array<AnyJson>;\n\nexport const checkIsString = getRefinement(\n  (value: unknown): Nullable<string> => (typeof value === 'string' ? value : null),\n);\n\n/**\n * https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-377567046\n */\nexport type OmitStrict<T, K extends keyof T> = Omit<T, K>;\n\n/**\n * Unlike TypeScript's `NonNullable`, this does _not_ include `undefined`\n */\nexport type Nullable<T> = T | null;\n\nexport const isDefined = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\ntype Refinement<A, B extends A> = (a: A) => a is B;\nexport function getRefinement<A, B extends A>(getB: (a: A) => Nullable<B>): Refinement<A, B> {\n  return (a: A): a is B => isDefined(getB(a));\n}\n\nexport const checkIsNonEmptyArray = <T>(a: T[]): a is NonEmptyArray<T> => a.length > 0;\n","import { isDefined } from './typescript';\n\n/** Takes a dictionary containing nullish values and returns a dictionary of all the defined\n * (non-nullish) values.\n */\nexport const compactDefined = <A>(obj: Record<string, A | null | undefined>) =>\n  Object.keys(obj).reduce<Record<string, A>>((acc, key) => {\n    const value = obj[key];\n    return {\n      ...acc,\n      ...(isDefined(value) ? { [key]: value } : {}),\n    };\n  }, {});\n\n/**\n * copied from `fp-ts`\n * https://github.com/gcanti/fp-ts/blob/70190b5a03ddc2d31b4708c75c6dfad81d0bfa21/perf/function/flow.tÂ¡s\n */\nexport function flow<A extends Array<unknown>, B>(ab: (...a: A) => B): (...a: A) => B;\nexport function flow<A extends Array<unknown>, B, C>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n): (...a: A) => C;\nexport function flow<A extends Array<unknown>, B, C, D>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (b: C) => D,\n): (...a: A) => D;\nexport function flow(...fns: Array<Function>): Function {\n  const len = fns.length - 1;\n  return function(this: any, ...x: Array<any>) {\n    let y = fns[0].apply(this, x);\n    for (let i = 1; i <= len; i++) {\n      y = fns[i].call(this, y);\n    }\n    return y;\n  };\n}\n","import {\n  AnyJson,\n  checkIsString,\n  getRefinement,\n  isDefined,\n  checkIsNonEmptyArray,\n  JsonMap,\n  NonEmptyArray,\n  Nullable,\n} from './typescript';\n\nexport type Errors = NonEmptyArray<string>;\nexport type ErrorSource = 'api' | 'decoding';\n\nconst checkIsObject = getRefinement(\n  (response: AnyJson): Nullable<JsonMap> =>\n    isDefined(response) && typeof response === 'object' && !Array.isArray(response)\n      ? response\n      : null,\n);\n\nconst checkIsErrors = getRefinement(\n  (errors: AnyJson): Nullable<Errors> =>\n    Array.isArray(errors) && errors.every(checkIsString) && checkIsNonEmptyArray(errors)\n      ? errors\n      : null,\n);\n\nconst checkIsApiError = getRefinement(\n  (response: AnyJson): Nullable<{ errors: Errors }> =>\n    checkIsObject(response) && 'errors' in response && checkIsErrors(response.errors)\n      ? { errors: response.errors }\n      : null,\n);\n\nexport const getErrorForBadStatusCode = (\n  jsonResponse: AnyJson,\n): { errors: Errors; source: ErrorSource } => {\n  if (checkIsApiError(jsonResponse)) {\n    return { errors: jsonResponse.errors, source: 'api' };\n  } else {\n    return {\n      errors: [\n        'Responded with a status code outside the 2xx range, and the response body is not recognisable.',\n      ],\n      source: 'decoding',\n    };\n  }\n};\n\nexport class DecodingError {\n  constructor(readonly message: string) {}\n}\n","export type SearchOrderBy = 'relevant' | 'latest' | 'editorial';\n\nexport type ColorId =\n  | 'white'\n  | 'black'\n  | 'yellow'\n  | 'orange'\n  | 'red'\n  | 'purple'\n  | 'magenta'\n  | 'green'\n  | 'teal'\n  | 'blue'\n  | 'black_and_white';\n\nexport type ContentFilter = 'high' | 'low';\n\nexport enum Language {\n  Afrikaans = 'af',\n  Amharic = 'am',\n  Arabic = 'ar',\n  Azerbaijani = 'az',\n  Belarusian = 'be',\n  Bulgarian = 'bg',\n  Bengali = 'bn',\n  Bosnian = 'bs',\n  Catalan = 'ca',\n  Cebuano = 'ceb',\n  Corsican = 'co',\n  Czech = 'cs',\n  Welsh = 'cy',\n  Danish = 'da',\n  German = 'de',\n  Greek = 'el',\n  English = 'en',\n  Esperanto = 'eo',\n  Spanish = 'es',\n  Estonian = 'et',\n  Basque = 'eu',\n  Persian = 'fa',\n  Finnish = 'fi',\n  French = 'fr',\n  Frisian = 'fy',\n  Irish = 'ga',\n  ScotsGaelic = 'gd',\n  Galician = 'gl',\n  Gujarati = 'gu',\n  Hausa = 'ha',\n  Hawaiian = 'haw',\n  Hindi = 'hi',\n  Hmong = 'hmn',\n  Croatian = 'hr',\n  HaitianCreole = 'ht',\n  Hungarian = 'hu',\n  Armenian = 'hy',\n  Indonesian = 'id',\n  Igbo = 'ig',\n  Icelandic = 'is',\n  Italian = 'it',\n  Hebrew = 'iw',\n  Japanese = 'ja',\n  Javanese = 'jw',\n  Georgian = 'ka',\n  Kazakh = 'kk',\n  Khmer = 'km',\n  Kannada = 'kn',\n  Korean = 'ko',\n  Kurdish = 'ku',\n  Kyrgyz = 'ky',\n  Latin = 'la',\n  Luxembourgish = 'lb',\n  Lao = 'lo',\n  Lithuanian = 'lt',\n  Latvian = 'lv',\n  Malagasy = 'mg',\n  Maori = 'mi',\n  Macedonian = 'mk',\n  Malayalam = 'ml',\n  Mongolian = 'mn',\n  Marathi = 'mr',\n  Malay = 'ms',\n  Maltese = 'mt',\n  Myanmar = 'my',\n  Nepali = 'ne',\n  Dutch = 'nl',\n  Norwegian = 'no',\n  Nyanja = 'ny',\n  Oriya = 'or',\n  Punjabi = 'pa',\n  Polish = 'pl',\n  Pashto = 'ps',\n  Portuguese = 'pt',\n  Romanian = 'ro',\n  Russian = 'ru',\n  Kinyarwanda = 'rw',\n  Sindhi = 'sd',\n  Sinhala = 'si',\n  Slovak = 'sk',\n  Slovenian = 'sl',\n  Samoan = 'sm',\n  Shona = 'sn',\n  Somali = 'so',\n  Albanian = 'sq',\n  Serbian = 'sr',\n  Sesotho = 'st',\n  Sundanese = 'su',\n  Swedish = 'sv',\n  Swahili = 'sw',\n  Tamil = 'ta',\n  Telugu = 'te',\n  Tajik = 'tg',\n  Thai = 'th',\n  Turkmen = 'tk',\n  Filipino = 'tl',\n  Turkish = 'tr',\n  Tatar = 'tt',\n  Uighur = 'ug',\n  Ukrainian = 'uk',\n  Urdu = 'ur',\n  Uzbek = 'uz',\n  Vietnamese = 'vi',\n  Xhosa = 'xh',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  ChineseSimplified = 'zh',\n  ChineseTraditional = 'zh-TW',\n  Zulu = 'zu',\n}\n","export enum OrderBy {\n  LATEST = 'latest',\n  POPULAR = 'popular',\n  VIEWS = 'views',\n  DOWNLOADS = 'downloads',\n  OLDEST = 'oldest',\n}\nexport type Orientation = 'landscape' | 'portrait' | 'squarish';\nexport type OrientationParam = {\n  orientation?: Orientation;\n};\nexport type Plus = 'mixed' | 'only' | 'none';\n\nexport type PaginationParams = {\n  /**\n   * API defaults to `10` if no value is provided\n   */\n  perPage?: number;\n  /**\n   * API defaults to `1` if no value is provided\n   */\n  page?: number;\n  /**\n   * API defaults to `\"latest\"` if no value is provided\n   */\n  orderBy?: OrderBy;\n};\n","import * as ContentTypeHelpers from 'content-type';\nimport { DecodingError } from './errors';\nimport { AnyJson, isDefined } from './typescript';\n\nconst CONTENT_TYPE_RESPONSE_HEADER = 'content-type';\nconst CONTENT_TYPE_JSON = 'application/json';\nconst checkIsJsonResponse = (response: Response) => {\n  const contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);\n\n  return (\n    isDefined(contentTypeHeader) &&\n    ContentTypeHelpers.parse(contentTypeHeader).type === CONTENT_TYPE_JSON\n  );\n};\n\n/**\n * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.\n */\nexport const getJsonResponse = (response: Response): Promise<AnyJson> => {\n  if (checkIsJsonResponse(response)) {\n    return response.json().catch(_err => {\n      throw new DecodingError('unable to parse JSON response.');\n    });\n  } else {\n    throw new DecodingError('expected JSON response from server.');\n  }\n};\n","import { Errors, ErrorSource, getErrorForBadStatusCode, DecodingError } from './errors';\nimport { getJsonResponse } from './json';\n\nexport type ApiResponse<T> =\n  | {\n      type: 'success';\n      response: T;\n      originalResponse: Response;\n      errors?: never;\n      status: number;\n    }\n  | {\n      type: 'error';\n      source: ErrorSource;\n      response?: never;\n      originalResponse: Response;\n      errors: Errors;\n      status: number;\n    };\n\nexport type HandleResponse<T> = (args: { response: Response }) => Promise<T>;\n\nexport const handleFetchResponse = <ResponseType>(handleResponse: HandleResponse<ResponseType>) => (\n  response: Response,\n): Promise<ApiResponse<ResponseType>> =>\n  (response.ok\n    ? handleResponse({ response }).then(\n        (handledResponse): ApiResponse<ResponseType> => ({\n          type: 'success',\n          status: response.status,\n          response: handledResponse,\n          originalResponse: response,\n        }),\n      )\n    : getJsonResponse(response).then(\n        (jsonResponse): ApiResponse<ResponseType> => ({\n          type: 'error',\n          status: response.status,\n          ...getErrorForBadStatusCode(jsonResponse),\n          originalResponse: response,\n        }),\n      )\n  ).catch(error => {\n    /**\n     * We want to separate expected decoding errors from unknown ones. We do so by throwing a custom\n     * `DecodingError` whenever we encounter one within `handleFetchResponse` and catch them all\n     * here. This allows us to easily handle all of these errors at once. Unexpected errors are not\n     * caught, so that they bubble up and fail loudly.\n     *\n     * Note: Ideally we'd use an Either type, but this does the job without introducing dependencies\n     * like `fp-ts`.\n     */\n    if (error instanceof DecodingError) {\n      return {\n        type: 'error',\n        source: 'decoding',\n        status: response.status,\n        originalResponse: response,\n        errors: [error.message],\n      };\n    } else {\n      throw error;\n    }\n  });\n\nexport const castResponse = <T>(): HandleResponse<T> => ({ response }) =>\n  (getJsonResponse(response) as unknown) as Promise<T>;\n","import { flow } from './fp';\nimport { ApiResponse, handleFetchResponse, HandleResponse } from './response';\nimport { isDefined, OmitStrict } from './typescript';\nimport { buildUrl, BuildUrlParams } from './url';\n\ntype FetchParams = Pick<RequestInit, 'method'>;\n/**\n * The params generated by the library\n */\ntype BaseRequestParams = BuildUrlParams &\n  FetchParams &\n  // `headers` is not part of FetchParams because we want to allow headers in the additional params as well\n  Pick<RequestInit, 'headers'>;\n\n/**\n * Additional fetch options provided by the user on a per-call basis\n */\nexport interface AdditionalFetchOptions extends OmitStrict<RequestInit, keyof FetchParams> {}\nexport type CompleteRequestParams = BaseRequestParams & AdditionalFetchOptions;\ntype HandleRequest<Args> = (\n  a: Args,\n  additionalFetchOptions?: AdditionalFetchOptions,\n) => CompleteRequestParams;\n\n/**\n * helper used to type-check the arguments, and add default params for all requests\n */\nexport const createRequestHandler = <Args>(\n  fn: (a: Args) => BaseRequestParams,\n): HandleRequest<Args> => (a, additionalFetchOptions = {}) => {\n  const { headers, query, ...baseReqParams } = fn(a);\n\n  return {\n    ...baseReqParams,\n    ...additionalFetchOptions,\n    query,\n    headers: {\n      ...headers,\n      ...additionalFetchOptions.headers,\n    },\n  };\n};\n\n/**\n * Initial parameters that apply to all calls\n */\nexport type InitParams = {\n  apiVersion?: string;\n  fetch?: typeof fetch;\n} & OmitStrict<RequestInit, 'method' | 'body'> &\n  ({ accessKey: string; apiUrl?: never } | { apiUrl: string; accessKey?: never });\n\ntype RequestGenerator<Args, ResponseType> = {\n  handleRequest: HandleRequest<Args>;\n  handleResponse: HandleResponse<ResponseType>;\n};\n\ntype Endpoint<PathnameParams, RequestArgs, ResponseType> = {\n  getPathname: (params: PathnameParams) => string;\n} & RequestGenerator<RequestArgs, ResponseType>;\nexport const makeEndpoint = <PathnameParams, RequestArgs, ResponseType>(\n  endpoint: Endpoint<PathnameParams, RequestArgs, ResponseType>,\n) => endpoint;\n\ntype GeneratedRequestFunction<Args, ResponseType> = (\n  ...a: Parameters<HandleRequest<Args>>\n) => Promise<ApiResponse<ResponseType>>;\n\ntype InitMakeRequest = (\n  args: InitParams,\n) => <Args, ResponseType>(\n  handlers: RequestGenerator<Args, ResponseType>,\n) => GeneratedRequestFunction<Args, ResponseType>;\n\nexport const initMakeRequest: InitMakeRequest = ({\n  accessKey,\n  apiVersion = 'v1',\n  apiUrl = 'https://api.unsplash.com',\n  headers: generalHeaders,\n  fetch: providedFetch,\n  ...generalFetchOptions\n}) => ({ handleResponse, handleRequest }) =>\n  flow(\n    handleRequest,\n    ({ pathname, query, method = 'GET', headers: endpointHeaders, body, signal }) => {\n      const url = buildUrl({ pathname, query })(apiUrl);\n\n      const fetchOptions: RequestInit = {\n        method,\n        headers: {\n          ...generalHeaders,\n          ...endpointHeaders,\n          'Accept-Version': apiVersion,\n          ...(isDefined(accessKey) ? { Authorization: `Client-ID ${accessKey}` } : {}),\n        },\n        body,\n        signal,\n        ...generalFetchOptions,\n      };\n\n      const fetchToUse = providedFetch ?? fetch;\n\n      return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));\n    },\n  );\n","type Query = {\n  [index: string]: string | number | boolean;\n};\n\nexport type BuildUrlParams = {\n  pathname: string;\n  query: Query;\n};\n\nconst addQueryToUrl = (query: Query) => (url: URL) => {\n  Object.keys(query).forEach(queryKey =>\n    url.searchParams.set(queryKey, query[queryKey].toString()),\n  );\n};\n\nconst addPathnameToUrl = (pathname: string) => (url: URL) => {\n  // When there is no existing pathname, the value is `/`. Appending would give us a URL with two\n  // forward slashes. This is why we replace the value in that scenario.\n  if (url.pathname === '/') {\n    url.pathname = pathname;\n  } else {\n    url.pathname += pathname;\n  }\n};\n\nexport const buildUrl = ({ pathname, query }: BuildUrlParams) => (apiUrl: string) => {\n  const url = new URL(apiUrl);\n  addPathnameToUrl(pathname)(url);\n  addQueryToUrl(query)(url);\n  return url.toString();\n};\n\nconst getQueryFromSearchParams = (searchParams: URLSearchParams) => {\n  const query: Query = {};\n\n  searchParams.forEach((value, key) => {\n    query[key] = value;\n  });\n  return query;\n};\n\nexport const parseQueryAndPathname = (url: string) => {\n  const { pathname, searchParams } = new URL(url);\n\n  const query: Query = getQueryFromSearchParams(searchParams);\n\n  return { query, pathname: pathname === '/' ? undefined : pathname };\n};\n","import { DecodingError } from './errors';\nimport { HandleResponse, castResponse } from './response';\nimport { isDefined } from './typescript';\n\nconst TOTAL_RESPONSE_HEADER = 'x-total';\nconst getTotalFromApiFeedResponse = (response: Response) => {\n  const totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);\n  if (isDefined(totalsStr)) {\n    const total = parseInt(totalsStr);\n    if (Number.isInteger(total)) {\n      return total;\n    } else {\n      throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to be valid integer.`);\n    }\n  } else {\n    throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to exist.`);\n  }\n};\n\ntype FeedResponse<T> = {\n  results: T[];\n  total: number;\n};\n\nexport const handleFeedResponse = <T>(): HandleResponse<FeedResponse<T>> => ({ response }) =>\n  castResponse<T[]>()({ response }).then(results => ({\n    results,\n    total: getTotalFromApiFeedResponse(response),\n  }));\n","import { PaginationParams } from '../types/request';\nimport { compactDefined } from './fp';\nimport { isDefined } from './typescript';\n\nexport const getCollections = (collectionIds?: string[]) =>\n  isDefined(collectionIds) ? { collections: collectionIds.join() } : {};\n\nexport const getTopics = (topicIds?: string[]) =>\n  isDefined(topicIds) ? { topics: topicIds.join() } : {};\n\nexport const getFeedParams = ({ page, perPage, orderBy }: PaginationParams) =>\n  compactDefined({\n    per_page: perPage,\n    order_by: orderBy,\n    page,\n  });\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\n\ntype CollectionId = {\n  collectionId: string;\n};\n\nconst COLLECTIONS_PATH_PREFIX = '/collections';\n\nexport const getPhotos = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        collectionId,\n        orientation,\n        ...paginationParams\n      }: CollectionId & PaginationParams & OrientationParam) => ({\n        pathname: getPathname({ collectionId }),\n        query: compactDefined({ ...Query.getFeedParams(paginationParams), orientation }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n\nexport const list = (() => {\n  const getPathname = () => COLLECTIONS_PATH_PREFIX;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      (paginationParams: Pick<PaginationParams, 'page' | 'perPage'> = {}) => ({\n        pathname: getPathname(),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const getRelated = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/related`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { isDefined } from '../../helpers/typescript';\nimport { parseQueryAndPathname } from '../../helpers/url';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from './types';\n\ntype PhotoId = {\n  photoId: string;\n};\n\nconst PHOTOS_PATH_PREFIX = '/photos';\n\nexport const list = (() => {\n  const getPathname = () => PHOTOS_PATH_PREFIX;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler((feedParams: PaginationParams = {}) => ({\n      pathname: PHOTOS_PATH_PREFIX,\n      query: compactDefined(Query.getFeedParams(feedParams)),\n    })),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Full>(),\n  });\n})();\n\nexport const getStats = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Stats>(),\n  });\n})();\n\nexport type RandomParams = {\n  collectionIds?: string[];\n  topicIds?: string[];\n  featured?: boolean;\n  username?: string;\n  query?: string;\n  contentFilter?: 'low' | 'high';\n  count?: number;\n} & OrientationParam;\n\nexport const getRandom = (() => {\n  const getPathname = () => `${PHOTOS_PATH_PREFIX}/random`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ collectionIds, contentFilter, topicIds, ...queryParams }: RandomParams = {}) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          ...queryParams,\n          content_filter: contentFilter,\n          ...Query.getCollections(collectionIds),\n          ...Query.getTopics(topicIds),\n        }),\n        headers: {\n          /**\n           * Avoid response caching\n           */\n          'cache-control': 'no-cache',\n        },\n      }),\n    ),\n    handleResponse: castResponse<\n      // An array when the `count` query parameter is used.\n      Photo.Random | Photo.Random[]\n    >(),\n  });\n})();\n\nexport const trackDownload = {\n  handleRequest: createRequestHandler(({ downloadLocation }: { downloadLocation: string }) => {\n    const { pathname, query } = parseQueryAndPathname(downloadLocation);\n\n    if (!isDefined(pathname)) {\n      throw new Error('Could not parse pathname from url.');\n    }\n    return { pathname, query: compactDefined(query) };\n  }),\n  handleResponse: castResponse<{ url: string }>(),\n};\n","import { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams, Plus } from '../../types/request';\nimport { ColorId, ContentFilter, Language, SearchOrderBy } from './types/request';\nimport * as SearchResponse from './types/response';\n\nexport type SearchParams = {\n  query: string;\n} & Pick<PaginationParams, 'page' | 'perPage'>;\n\nconst SEARCH_PATH_PREFIX = `/search`;\n\ntype SearchPhotosParams = SearchParams &\n  OrientationParam & {\n    /**\n     * API defaults to `\"relevant\"` if no value is provided\n     */\n    orderBy?: SearchOrderBy;\n    color?: ColorId;\n    plus?: Plus;\n    /**\n     * API defaults to `en` (English) if no value is provided\n     */\n    lang?: Language;\n    /**\n     * API defaults to `\"low\"` if no value is provided\n     */\n    contentFilter?: ContentFilter;\n    collectionIds?: string[];\n  };\n\nexport const getPhotos = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/photos`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(\n      ({\n        query,\n        page,\n        perPage,\n        orderBy,\n        collectionIds,\n        lang,\n        contentFilter,\n        ...filters\n      }: SearchPhotosParams) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          query,\n          content_filter: contentFilter,\n          lang,\n          order_by: orderBy,\n          ...Query.getFeedParams({ page, perPage }),\n          ...Query.getCollections(collectionIds),\n          ...filters,\n        }),\n      }),\n    ),\n    handleResponse: castResponse<SearchResponse.Photos>(),\n  });\n})();\n\nexport const getCollections = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/collections`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Collections>(),\n  });\n})();\n\nexport const getUsers = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/users`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Users>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as User from './types';\nimport * as Photo from '../photos/types';\nimport * as Collection from '../collections/types';\n\ntype Username = {\n  username: string;\n};\n\nconst USERS_PATH_PREFIX = '/users';\n\nexport const get = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ username }: Username) => ({\n      pathname: getPathname({ username }),\n      query: {},\n    })),\n    handleResponse: castResponse<User.Full>(),\n  });\n})();\n\nexport const getPhotos = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        stats,\n        orientation,\n        ...paginationParams\n      }: {\n        stats?: boolean;\n      } & OrientationParam &\n        Username &\n        PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n          stats,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const getLikes = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/likes`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        orientation,\n        ...paginationParams\n      }: OrientationParam & Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\nexport const getCollections = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/collections`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ username, ...paginationParams }: Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Collection.Basic>(),\n  });\n})();\n\nexport const getStatistics = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        quantity = 30,\n        resolution = 'days',\n      }: Username & {\n        quantity?: number;\n        resolution?: string;\n      }) => ({\n        pathname: getPathname({ username }),\n        query: {\n          quantity,\n          resolution,\n        },\n      }),\n    ),\n    handleResponse: castResponse<User.Statistics>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined, flow } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OmitStrict } from '../../helpers/typescript';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from '../photos/types';\nimport * as Topic from './types';\n\nexport type TopicIdOrSlug = {\n  topicIdOrSlug: string;\n};\n\nconst BASE_TOPIC_PATH = '/topics';\nconst getTopicPath = ({ topicIdOrSlug }: TopicIdOrSlug) => `${BASE_TOPIC_PATH}/${topicIdOrSlug}`;\n\nexport type TopicOrderBy = 'latest' | 'oldest' | 'position' | 'featured';\n\nexport const list = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({\n    page,\n    perPage,\n    orderBy,\n    topicIdsOrSlugs,\n  }: OmitStrict<PaginationParams, 'orderBy'> & {\n    /**\n     * default: `position`\n     */\n    orderBy?: TopicOrderBy;\n    topicIdsOrSlugs?: string[];\n  }) => ({\n    pathname: BASE_TOPIC_PATH,\n    query: compactDefined({\n      ...Query.getFeedParams({ page, perPage }),\n      ids: topicIdsOrSlugs?.join(','),\n      order_by: orderBy,\n    }),\n  }),\n  handleResponse: handleFeedResponse<Topic.Basic>(),\n});\n\nexport const get = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({ topicIdOrSlug }: TopicIdOrSlug) => ({\n    pathname: getTopicPath({ topicIdOrSlug }),\n    query: {},\n  }),\n  handleResponse: castResponse<Topic.Full>(),\n});\n\nexport const getPhotos = (() => {\n  const getPathname = flow(getTopicPath, topicPath => `${topicPath}/photos`);\n  return makeEndpoint({\n    getPathname,\n    handleRequest: ({\n      topicIdOrSlug,\n      orientation,\n      ...feedParams\n    }: TopicIdOrSlug & PaginationParams & OrientationParam) => ({\n      pathname: getPathname({ topicIdOrSlug }),\n      query: compactDefined({\n        ...Query.getFeedParams(feedParams),\n        orientation,\n      }),\n    }),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n","export const trackNonHotLinkedPhotoView = ({ appId }: { appId: string }) => ({\n  photoId,\n}: {\n  photoId: string | string[];\n}) => {\n  const ids = !Array.isArray(photoId) ? [photoId] : photoId;\n\n  if (ids.length > 20) {\n    throw new Error(\n      'You cannot track more than 20 photos at once. Please try again with fewer photos.',\n    );\n  }\n\n  return fetch(`views.unsplash.com/v?photo_id=${ids.join()}&app_id=${appId}`);\n};\n","import { flow } from './helpers/fp';\nimport { initMakeRequest } from './helpers/request';\nimport * as collections from './methods/collections';\nimport * as photos from './methods/photos';\nimport * as search from './methods/search';\nimport * as users from './methods/users';\nimport * as topics from './methods/topics';\n\nimport * as _internals from './internals';\n\nexport const createApi = flow(initMakeRequest, (makeRequest) => ({\n  photos: {\n    get: makeRequest(photos.get),\n    list: makeRequest(photos.list),\n    getStats: makeRequest(photos.getStats),\n    getRandom: makeRequest(photos.getRandom),\n    trackDownload: makeRequest(photos.trackDownload),\n  },\n  users: {\n    getPhotos: makeRequest(users.getPhotos),\n    getCollections: makeRequest(users.getCollections),\n    getLikes: makeRequest(users.getLikes),\n    getStatistics: makeRequest(users.getStatistics),\n    get: makeRequest(users.get),\n  },\n  search: {\n    getCollections: makeRequest(search.getCollections),\n    getPhotos: makeRequest(search.getPhotos),\n    getUsers: makeRequest(search.getUsers),\n  },\n  collections: {\n    getPhotos: makeRequest(collections.getPhotos),\n    get: makeRequest(collections.get),\n    list: makeRequest(collections.list),\n    getRelated: makeRequest(collections.getRelated),\n  },\n  topics: {\n    list: makeRequest(topics.list),\n    get: makeRequest(topics.get),\n    getPhotos: makeRequest(topics.getPhotos),\n  },\n}));\n\nexport { Language, ColorId, ContentFilter, SearchOrderBy } from './methods/search/types/request';\nexport { OrderBy, Orientation, Plus } from './types/request';\nexport { _internals };\n"],"names":["checkIsString","getRefinement","value","isDefined","x","getB","a","compactDefined","obj","Object","keys","reduce","acc","key","_extends","_ref","flow","fns","Array","_len","_key","arguments","len","length","_len2","_key2","y","apply","this","i","call","Language","OrderBy","checkIsObject","response","isArray","checkIsErrors","errors","every","checkIsApiError","DecodingError","message","getJsonResponse","contentTypeHeader","headers","get","ContentTypeHelpers","type","checkIsJsonResponse","json","_err","castResponse","createRequestHandler","fn","additionalFetchOptions","_fn","query","_objectWithoutPropertiesLoose","_excluded","makeEndpoint","endpoint","initMakeRequest","accessKey","_ref$apiVersion","apiVersion","_ref$apiUrl","apiUrl","generalHeaders","providedFetch","fetch","generalFetchOptions","_excluded2","_ref2","handleResponse","handleRequest","_ref3","_ref3$method","method","endpointHeaders","body","signal","url","pathname","URL","addPathnameToUrl","forEach","queryKey","searchParams","set","toString","addQueryToUrl","buildUrl","fetchOptions","Accept-Version","Authorization","then","ok","handledResponse","status","originalResponse","jsonResponse","source","getErrorForBadStatusCode","error","handleFetchResponse","getTotalFromApiFeedResponse","totalsStr","total","parseInt","Number","isInteger","handleFeedResponse","results","getCollections","collectionIds","collections","join","getTopics","topicIds","topics","getFeedParams","per_page","perPage","order_by","orderBy","page","getPhotos","getPathname","COLLECTIONS_PATH_PREFIX","collectionId","orientation","paginationParams","Query","_ref4","list","getRelated","_ref5","_ref6","_params","feedParams","PHOTOS_PATH_PREFIX","photoId","getStats","getRandom","_temp","contentFilter","queryParams","content_filter","cache-control","trackDownload","_parseQueryAndPathnam","_URL","getQueryFromSearchParams","undefined","parseQueryAndPathname","downloadLocation","Error","SEARCH_PATH_PREFIX","lang","filters","getUsers","_excluded3","USERS_PATH_PREFIX","username","stats","getLikes","_ref7","_ref8","getStatistics","_ref9","_ref10","_ref10$quantity","quantity","_ref10$resolution","resolution","getTopicPath","BASE_TOPIC_PATH","topicIdOrSlug","topicIdsOrSlugs","ids","topicPath","appId","createApi","makeRequest","photos","users","search"],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/unsplash-js.esm.js b/dist/unsplash-js.esm.js
index 6ee8ffb051a7c338c716d27a9d0bd4b57ce069ff..1cbc4537526d33effb9db7d59ff71e1c2c738801 100644
--- a/dist/unsplash-js.esm.js
+++ b/dist/unsplash-js.esm.js
@@ -1,35 +1,29 @@
 import { parse } from 'content-type';
 
 function _extends() {
-  _extends = Object.assign || function (target) {
+  _extends = Object.assign ? Object.assign.bind() : function (target) {
     for (var i = 1; i < arguments.length; i++) {
       var source = arguments[i];
-
       for (var key in source) {
         if (Object.prototype.hasOwnProperty.call(source, key)) {
           target[key] = source[key];
         }
       }
     }
-
     return target;
   };
-
   return _extends.apply(this, arguments);
 }
-
 function _objectWithoutPropertiesLoose(source, excluded) {
   if (source == null) return {};
   var target = {};
   var sourceKeys = Object.keys(source);
   var key, i;
-
   for (i = 0; i < sourceKeys.length; i++) {
     key = sourceKeys[i];
     if (excluded.indexOf(key) >= 0) continue;
     target[key] = source[key];
   }
-
   return target;
 }
 
@@ -51,11 +45,9 @@ var checkIsNonEmptyArray = function checkIsNonEmptyArray(a) {
 /** Takes a dictionary containing nullish values and returns a dictionary of all the defined
  * (non-nullish) values.
  */
-
 var compactDefined = function compactDefined(obj) {
   return Object.keys(obj).reduce(function (acc, key) {
     var _ref;
-
     var value = obj[key];
     return _extends({}, acc, isDefined(value) ? (_ref = {}, _ref[key] = value, _ref) : {});
   }, {});
@@ -64,19 +56,15 @@ function flow() {
   for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
     fns[_key] = arguments[_key];
   }
-
   var len = fns.length - 1;
   return function () {
     for (var _len2 = arguments.length, x = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
       x[_key2] = arguments[_key2];
     }
-
     var y = fns[0].apply(this, x);
-
     for (var i = 1; i <= len; i++) {
       y = fns[i].call(this, y);
     }
-
     return y;
   };
 }
@@ -106,12 +94,12 @@ var getErrorForBadStatusCode = function getErrorForBadStatusCode(jsonResponse) {
   }
 };
 var DecodingError = function DecodingError(message) {
+  this.message = void 0;
   this.message = message;
 };
 
 var CONTENT_TYPE_RESPONSE_HEADER = 'content-type';
 var CONTENT_TYPE_JSON = 'application/json';
-
 var checkIsJsonResponse = function checkIsJsonResponse(response) {
   var contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);
   return isDefined(contentTypeHeader) && parse(contentTypeHeader).type === CONTENT_TYPE_JSON;
@@ -119,8 +107,6 @@ var checkIsJsonResponse = function checkIsJsonResponse(response) {
 /**
  * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.
  */
-
-
 var getJsonResponse = function getJsonResponse(response) {
   if (checkIsJsonResponse(response)) {
     return response.json()["catch"](function (_err) {
@@ -187,7 +173,6 @@ var addQueryToUrl = function addQueryToUrl(query) {
     });
   };
 };
-
 var addPathnameToUrl = function addPathnameToUrl(pathname) {
   return function (url) {
     // When there is no existing pathname, the value is `/`. Appending would give us a URL with two
@@ -199,10 +184,9 @@ var addPathnameToUrl = function addPathnameToUrl(pathname) {
     }
   };
 };
-
 var buildUrl = function buildUrl(_ref) {
   var pathname = _ref.pathname,
-      query = _ref.query;
+    query = _ref.query;
   return function (apiUrl) {
     var url = new URL(apiUrl);
     addPathnameToUrl(pathname)(url);
@@ -210,7 +194,6 @@ var buildUrl = function buildUrl(_ref) {
     return url.toString();
   };
 };
-
 var getQueryFromSearchParams = function getQueryFromSearchParams(searchParams) {
   var query = {};
   searchParams.forEach(function (value, key) {
@@ -218,12 +201,10 @@ var getQueryFromSearchParams = function getQueryFromSearchParams(searchParams) {
   });
   return query;
 };
-
 var parseQueryAndPathname = function parseQueryAndPathname(url) {
   var _URL = new URL(url),
-      pathname = _URL.pathname,
-      searchParams = _URL.searchParams;
-
+    pathname = _URL.pathname,
+    searchParams = _URL.searchParams;
   var query = getQueryFromSearchParams(searchParams);
   return {
     query: query,
@@ -231,21 +212,20 @@ var parseQueryAndPathname = function parseQueryAndPathname(url) {
   };
 };
 
+var _excluded = ["headers", "query"],
+  _excluded2 = ["accessKey", "apiVersion", "apiUrl", "headers", "fetch"];
 /**
  * helper used to type-check the arguments, and add default params for all requests
  */
-
 var createRequestHandler = function createRequestHandler(fn) {
   return function (a, additionalFetchOptions) {
     if (additionalFetchOptions === void 0) {
       additionalFetchOptions = {};
     }
-
     var _fn = fn(a),
-        headers = _fn.headers,
-        query = _fn.query,
-        baseReqParams = _objectWithoutPropertiesLoose(_fn, ["headers", "query"]);
-
+      headers = _fn.headers,
+      query = _fn.query,
+      baseReqParams = _objectWithoutPropertiesLoose(_fn, _excluded);
     return _extends({}, baseReqParams, additionalFetchOptions, {
       query: query,
       headers: _extends({}, headers, additionalFetchOptions.headers)
@@ -257,30 +237,28 @@ var makeEndpoint = function makeEndpoint(endpoint) {
 };
 var initMakeRequest = function initMakeRequest(_ref) {
   var accessKey = _ref.accessKey,
-      _ref$apiVersion = _ref.apiVersion,
-      apiVersion = _ref$apiVersion === void 0 ? 'v1' : _ref$apiVersion,
-      _ref$apiUrl = _ref.apiUrl,
-      apiUrl = _ref$apiUrl === void 0 ? 'https://api.unsplash.com' : _ref$apiUrl,
-      generalHeaders = _ref.headers,
-      providedFetch = _ref.fetch,
-      generalFetchOptions = _objectWithoutPropertiesLoose(_ref, ["accessKey", "apiVersion", "apiUrl", "headers", "fetch"]);
-
+    _ref$apiVersion = _ref.apiVersion,
+    apiVersion = _ref$apiVersion === void 0 ? 'v1' : _ref$apiVersion,
+    _ref$apiUrl = _ref.apiUrl,
+    apiUrl = _ref$apiUrl === void 0 ? 'https://api.unsplash.com' : _ref$apiUrl,
+    generalHeaders = _ref.headers,
+    providedFetch = _ref.fetch,
+    generalFetchOptions = _objectWithoutPropertiesLoose(_ref, _excluded2);
   return function (_ref2) {
     var handleResponse = _ref2.handleResponse,
-        handleRequest = _ref2.handleRequest;
+      handleRequest = _ref2.handleRequest;
     return flow(handleRequest, function (_ref3) {
       var pathname = _ref3.pathname,
-          query = _ref3.query,
-          _ref3$method = _ref3.method,
-          method = _ref3$method === void 0 ? 'GET' : _ref3$method,
-          endpointHeaders = _ref3.headers,
-          body = _ref3.body,
-          signal = _ref3.signal;
+        query = _ref3.query,
+        _ref3$method = _ref3.method,
+        method = _ref3$method === void 0 ? 'GET' : _ref3$method,
+        endpointHeaders = _ref3.headers,
+        body = _ref3.body,
+        signal = _ref3.signal;
       var url = buildUrl({
         pathname: pathname,
         query: query
       })(apiUrl);
-
       var fetchOptions = _extends({
         method: method,
         headers: _extends({}, generalHeaders, endpointHeaders, {
@@ -291,7 +269,6 @@ var initMakeRequest = function initMakeRequest(_ref) {
         body: body,
         signal: signal
       }, generalFetchOptions);
-
       var fetchToUse = providedFetch != null ? providedFetch : fetch;
       return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));
     });
@@ -299,13 +276,10 @@ var initMakeRequest = function initMakeRequest(_ref) {
 };
 
 var TOTAL_RESPONSE_HEADER = 'x-total';
-
 var getTotalFromApiFeedResponse = function getTotalFromApiFeedResponse(response) {
   var totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);
-
   if (isDefined(totalsStr)) {
     var total = parseInt(totalsStr);
-
     if (Number.isInteger(total)) {
       return total;
     } else {
@@ -315,7 +289,6 @@ var getTotalFromApiFeedResponse = function getTotalFromApiFeedResponse(response)
     throw new DecodingError("expected " + TOTAL_RESPONSE_HEADER + " header to exist.");
   }
 };
-
 var handleFeedResponse = function handleFeedResponse() {
   return function (_ref) {
     var response = _ref.response;
@@ -342,8 +315,8 @@ var getTopics = function getTopics(topicIds) {
 };
 var getFeedParams = function getFeedParams(_ref) {
   var page = _ref.page,
-      perPage = _ref.perPage,
-      orderBy = _ref.orderBy;
+    perPage = _ref.perPage,
+    orderBy = _ref.orderBy;
   return compactDefined({
     per_page: perPage,
     order_by: orderBy,
@@ -351,20 +324,19 @@ var getFeedParams = function getFeedParams(_ref) {
   });
 };
 
+var _excluded$1 = ["collectionId", "orientation"];
 var COLLECTIONS_PATH_PREFIX = '/collections';
 var getPhotos = /*#__PURE__*/function () {
   var getPathname = function getPathname(_ref) {
     var collectionId = _ref.collectionId;
     return COLLECTIONS_PATH_PREFIX + "/" + collectionId + "/photos";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref2) {
       var collectionId = _ref2.collectionId,
-          orientation = _ref2.orientation,
-          paginationParams = _objectWithoutPropertiesLoose(_ref2, ["collectionId", "orientation"]);
-
+        orientation = _ref2.orientation,
+        paginationParams = _objectWithoutPropertiesLoose(_ref2, _excluded$1);
       return {
         pathname: getPathname({
           collectionId: collectionId
@@ -382,7 +354,6 @@ var get = /*#__PURE__*/function () {
     var collectionId = _ref3.collectionId;
     return COLLECTIONS_PATH_PREFIX + "/" + collectionId;
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref4) {
@@ -401,14 +372,12 @@ var list = /*#__PURE__*/function () {
   var getPathname = function getPathname() {
     return COLLECTIONS_PATH_PREFIX;
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (paginationParams) {
       if (paginationParams === void 0) {
         paginationParams = {};
       }
-
       return {
         pathname: getPathname(),
         query: getFeedParams(paginationParams)
@@ -422,7 +391,6 @@ var getRelated = /*#__PURE__*/function () {
     var collectionId = _ref5.collectionId;
     return COLLECTIONS_PATH_PREFIX + "/" + collectionId + "/related";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref6) {
@@ -446,12 +414,12 @@ var index = {
   getRelated: getRelated
 };
 
+var _excluded$2 = ["collectionIds", "contentFilter", "topicIds"];
 var PHOTOS_PATH_PREFIX = '/photos';
 var list$1 = /*#__PURE__*/function () {
   var _getPathname = function getPathname() {
     return PHOTOS_PATH_PREFIX;
   };
-
   return makeEndpoint({
     // Wrapper uses type trick to allow 0 args
     getPathname: function getPathname(_params) {
@@ -461,7 +429,6 @@ var list$1 = /*#__PURE__*/function () {
       if (feedParams === void 0) {
         feedParams = {};
       }
-
       return {
         pathname: PHOTOS_PATH_PREFIX,
         query: compactDefined(getFeedParams(feedParams))
@@ -475,7 +442,6 @@ var get$1 = /*#__PURE__*/function () {
     var photoId = _ref.photoId;
     return PHOTOS_PATH_PREFIX + "/" + photoId;
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref2) {
@@ -495,7 +461,6 @@ var getStats = /*#__PURE__*/function () {
     var photoId = _ref3.photoId;
     return PHOTOS_PATH_PREFIX + "/" + photoId + "/statistics";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref4) {
@@ -514,16 +479,14 @@ var getRandom = /*#__PURE__*/function () {
   var getPathname = function getPathname() {
     return PHOTOS_PATH_PREFIX + "/random";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_temp) {
       var _ref5 = _temp === void 0 ? {} : _temp,
-          collectionIds = _ref5.collectionIds,
-          contentFilter = _ref5.contentFilter,
-          topicIds = _ref5.topicIds,
-          queryParams = _objectWithoutPropertiesLoose(_ref5, ["collectionIds", "contentFilter", "topicIds"]);
-
+        collectionIds = _ref5.collectionIds,
+        contentFilter = _ref5.contentFilter,
+        topicIds = _ref5.topicIds,
+        queryParams = _objectWithoutPropertiesLoose(_ref5, _excluded$2);
       return {
         pathname: getPathname(),
         query: compactDefined(_extends({}, queryParams, {
@@ -543,15 +506,12 @@ var getRandom = /*#__PURE__*/function () {
 var trackDownload = {
   handleRequest: /*#__PURE__*/createRequestHandler(function (_ref6) {
     var downloadLocation = _ref6.downloadLocation;
-
     var _parseQueryAndPathnam = parseQueryAndPathname(downloadLocation),
-        pathname = _parseQueryAndPathnam.pathname,
-        query = _parseQueryAndPathnam.query;
-
+      pathname = _parseQueryAndPathnam.pathname,
+      query = _parseQueryAndPathnam.query;
     if (!isDefined(pathname)) {
       throw new Error('Could not parse pathname from url.');
     }
-
     return {
       pathname: pathname,
       query: compactDefined(query)
@@ -569,12 +529,14 @@ var index$1 = {
   trackDownload: trackDownload
 };
 
+var _excluded$3 = ["query", "page", "perPage", "orderBy", "collectionIds", "lang", "contentFilter"],
+  _excluded2$1 = ["query"],
+  _excluded3 = ["query"];
 var SEARCH_PATH_PREFIX = "/search";
 var getPhotos$1 = /*#__PURE__*/function () {
   var _getPathname = function getPathname() {
     return SEARCH_PATH_PREFIX + "/photos";
   };
-
   return makeEndpoint({
     // Wrapper uses type trick to allow 0 args
     getPathname: function getPathname(_params) {
@@ -582,14 +544,13 @@ var getPhotos$1 = /*#__PURE__*/function () {
     },
     handleRequest: createRequestHandler(function (_ref) {
       var query = _ref.query,
-          page = _ref.page,
-          perPage = _ref.perPage,
-          orderBy = _ref.orderBy,
-          collectionIds = _ref.collectionIds,
-          lang = _ref.lang,
-          contentFilter = _ref.contentFilter,
-          filters = _objectWithoutPropertiesLoose(_ref, ["query", "page", "perPage", "orderBy", "collectionIds", "lang", "contentFilter"]);
-
+        page = _ref.page,
+        perPage = _ref.perPage,
+        orderBy = _ref.orderBy,
+        collectionIds = _ref.collectionIds,
+        lang = _ref.lang,
+        contentFilter = _ref.contentFilter,
+        filters = _objectWithoutPropertiesLoose(_ref, _excluded$3);
       return {
         pathname: _getPathname(),
         query: compactDefined(_extends({
@@ -610,7 +571,6 @@ var getCollections$1 = /*#__PURE__*/function () {
   var _getPathname2 = function getPathname() {
     return SEARCH_PATH_PREFIX + "/collections";
   };
-
   return makeEndpoint({
     // Wrapper uses type trick to allow 0 args
     getPathname: function getPathname(_params) {
@@ -618,8 +578,7 @@ var getCollections$1 = /*#__PURE__*/function () {
     },
     handleRequest: createRequestHandler(function (_ref2) {
       var query = _ref2.query,
-          paginationParams = _objectWithoutPropertiesLoose(_ref2, ["query"]);
-
+        paginationParams = _objectWithoutPropertiesLoose(_ref2, _excluded2$1);
       return {
         pathname: _getPathname2(),
         query: _extends({
@@ -634,7 +593,6 @@ var getUsers = /*#__PURE__*/function () {
   var _getPathname3 = function getPathname() {
     return SEARCH_PATH_PREFIX + "/users";
   };
-
   return makeEndpoint({
     // Wrapper uses type trick to allow 0 args
     getPathname: function getPathname(_params) {
@@ -642,8 +600,7 @@ var getUsers = /*#__PURE__*/function () {
     },
     handleRequest: createRequestHandler(function (_ref3) {
       var query = _ref3.query,
-          paginationParams = _objectWithoutPropertiesLoose(_ref3, ["query"]);
-
+        paginationParams = _objectWithoutPropertiesLoose(_ref3, _excluded3);
       return {
         pathname: _getPathname3(),
         query: _extends({
@@ -662,13 +619,15 @@ var index$2 = {
   getUsers: getUsers
 };
 
+var _excluded$4 = ["username", "stats", "orientation"],
+  _excluded2$2 = ["username", "orientation"],
+  _excluded3$1 = ["username"];
 var USERS_PATH_PREFIX = '/users';
 var get$2 = /*#__PURE__*/function () {
   var getPathname = function getPathname(_ref) {
     var username = _ref.username;
     return USERS_PATH_PREFIX + "/" + username;
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref2) {
@@ -688,15 +647,13 @@ var getPhotos$2 = /*#__PURE__*/function () {
     var username = _ref3.username;
     return USERS_PATH_PREFIX + "/" + username + "/photos";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref4) {
       var username = _ref4.username,
-          stats = _ref4.stats,
-          orientation = _ref4.orientation,
-          paginationParams = _objectWithoutPropertiesLoose(_ref4, ["username", "stats", "orientation"]);
-
+        stats = _ref4.stats,
+        orientation = _ref4.orientation,
+        paginationParams = _objectWithoutPropertiesLoose(_ref4, _excluded$4);
       return {
         pathname: getPathname({
           username: username
@@ -715,14 +672,12 @@ var getLikes = /*#__PURE__*/function () {
     var username = _ref5.username;
     return USERS_PATH_PREFIX + "/" + username + "/likes";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref6) {
       var username = _ref6.username,
-          orientation = _ref6.orientation,
-          paginationParams = _objectWithoutPropertiesLoose(_ref6, ["username", "orientation"]);
-
+        orientation = _ref6.orientation,
+        paginationParams = _objectWithoutPropertiesLoose(_ref6, _excluded2$2);
       return {
         pathname: getPathname({
           username: username
@@ -740,13 +695,11 @@ var getCollections$2 = /*#__PURE__*/function () {
     var username = _ref7.username;
     return USERS_PATH_PREFIX + "/" + username + "/collections";
   };
-
   return makeEndpoint({
     getPathname: getPathname,
     handleRequest: createRequestHandler(function (_ref8) {
       var username = _ref8.username,
-          paginationParams = _objectWithoutPropertiesLoose(_ref8, ["username"]);
-
+        paginationParams = _objectWithoutPropertiesLoose(_ref8, _excluded3$1);
       return {
         pathname: getPathname({
           username: username
@@ -757,29 +710,55 @@ var getCollections$2 = /*#__PURE__*/function () {
     handleResponse: handleFeedResponse()
   });
 }();
+var getStatistics = /*#__PURE__*/function () {
+  var getPathname = function getPathname(_ref9) {
+    var username = _ref9.username;
+    return USERS_PATH_PREFIX + "/" + username + "/statistics";
+  };
+  return makeEndpoint({
+    getPathname: getPathname,
+    handleRequest: createRequestHandler(function (_ref10) {
+      var username = _ref10.username,
+        _ref10$quantity = _ref10.quantity,
+        quantity = _ref10$quantity === void 0 ? 30 : _ref10$quantity,
+        _ref10$resolution = _ref10.resolution,
+        resolution = _ref10$resolution === void 0 ? 'days' : _ref10$resolution;
+      return {
+        pathname: getPathname({
+          username: username
+        }),
+        query: {
+          quantity: quantity,
+          resolution: resolution
+        }
+      };
+    }),
+    handleResponse: castResponse()
+  });
+}();
 
 var index$3 = {
   __proto__: null,
   get: get$2,
   getPhotos: getPhotos$2,
   getLikes: getLikes,
-  getCollections: getCollections$2
+  getCollections: getCollections$2,
+  getStatistics: getStatistics
 };
 
+var _excluded$5 = ["topicIdOrSlug", "orientation"];
 var BASE_TOPIC_PATH = '/topics';
-
 var getTopicPath = function getTopicPath(_ref) {
   var topicIdOrSlug = _ref.topicIdOrSlug;
   return BASE_TOPIC_PATH + "/" + topicIdOrSlug;
 };
-
 var list$2 = /*#__PURE__*/makeEndpoint({
   getPathname: getTopicPath,
   handleRequest: function handleRequest(_ref2) {
     var page = _ref2.page,
-        perPage = _ref2.perPage,
-        orderBy = _ref2.orderBy,
-        topicIdsOrSlugs = _ref2.topicIdsOrSlugs;
+      perPage = _ref2.perPage,
+      orderBy = _ref2.orderBy,
+      topicIdsOrSlugs = _ref2.topicIdsOrSlugs;
     return {
       pathname: BASE_TOPIC_PATH,
       query: compactDefined(_extends({}, getFeedParams({
@@ -814,9 +793,8 @@ var getPhotos$3 = /*#__PURE__*/function () {
     getPathname: getPathname,
     handleRequest: function handleRequest(_ref4) {
       var topicIdOrSlug = _ref4.topicIdOrSlug,
-          orientation = _ref4.orientation,
-          feedParams = _objectWithoutPropertiesLoose(_ref4, ["topicIdOrSlug", "orientation"]);
-
+        orientation = _ref4.orientation,
+        feedParams = _objectWithoutPropertiesLoose(_ref4, _excluded$5);
       return {
         pathname: getPathname({
           topicIdOrSlug: topicIdOrSlug
@@ -842,11 +820,9 @@ var trackNonHotLinkedPhotoView = function trackNonHotLinkedPhotoView(_ref) {
   return function (_ref2) {
     var photoId = _ref2.photoId;
     var ids = !Array.isArray(photoId) ? [photoId] : photoId;
-
     if (ids.length > 20) {
       throw new Error('You cannot track more than 20 photos at once. Please try again with fewer photos.');
     }
-
     return fetch("views.unsplash.com/v?photo_id=" + ids.join() + "&app_id=" + appId);
   };
 };
@@ -864,7 +840,6 @@ var internals = {
 };
 
 var Language;
-
 (function (Language) {
   Language["Afrikaans"] = "af";
   Language["Amharic"] = "am";
@@ -978,7 +953,6 @@ var Language;
 })(Language || (Language = {}));
 
 var OrderBy;
-
 (function (OrderBy) {
   OrderBy["LATEST"] = "latest";
   OrderBy["POPULAR"] = "popular";
@@ -1000,6 +974,7 @@ var createApi = /*#__PURE__*/flow(initMakeRequest, function (makeRequest) {
       getPhotos: makeRequest(getPhotos$2),
       getCollections: makeRequest(getCollections$2),
       getLikes: makeRequest(getLikes),
+      getStatistics: makeRequest(getStatistics),
       get: makeRequest(get$2)
     },
     search: {
diff --git a/dist/unsplash-js.esm.js.map b/dist/unsplash-js.esm.js.map
index bc26def693afc345217d1140c72fc28b42b20315..b42317c33d2b72aa1e949e56d123cec71d12c93b 100644
--- a/dist/unsplash-js.esm.js.map
+++ b/dist/unsplash-js.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"unsplash-js.esm.js","sources":["../src/helpers/typescript.ts","../src/helpers/fp.ts","../src/helpers/errors.ts","../src/helpers/json.ts","../src/helpers/response.ts","../src/helpers/url.ts","../src/helpers/request.ts","../src/helpers/feed.ts","../src/helpers/query.ts","../src/methods/collections/index.ts","../src/methods/photos/index.ts","../src/methods/search/index.ts","../src/methods/users/index.ts","../src/methods/topics/index.ts","../src/beacon.ts","../src/methods/search/types/request.ts","../src/types/request.ts","../src/index.ts"],"sourcesContent":["// Copied from https://github.com/Microsoft/TypeScript/issues/1897#issuecomment-338650717\nexport type AnyJson = boolean | number | string | null | JsonArray | JsonMap;\nexport type JsonMap = { [key: string]: AnyJson };\nexport type JsonArray = Array<AnyJson>;\n\nexport const checkIsString = getRefinement(\n  (value: unknown): Nullable<string> => (typeof value === 'string' ? value : null),\n);\n\n/**\n * https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-377567046\n */\nexport type OmitStrict<T, K extends keyof T> = Omit<T, K>;\n\n/**\n * Unlike TypeScript's `NonNullable`, this does _not_ include `undefined`\n */\nexport type Nullable<T> = T | null;\n\nexport const isDefined = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\ntype Refinement<A, B extends A> = (a: A) => a is B;\nexport function getRefinement<A, B extends A>(getB: (a: A) => Nullable<B>): Refinement<A, B> {\n  return (a: A): a is B => isDefined(getB(a));\n}\n\nexport const checkIsNonEmptyArray = <T>(a: T[]): a is NonEmptyArray<T> => a.length > 0;\n","import { isDefined } from './typescript';\n\n/** Takes a dictionary containing nullish values and returns a dictionary of all the defined\n * (non-nullish) values.\n */\nexport const compactDefined = <A>(obj: Record<string, A | null | undefined>) =>\n  Object.keys(obj).reduce<Record<string, A>>((acc, key) => {\n    const value = obj[key];\n    return {\n      ...acc,\n      ...(isDefined(value) ? { [key]: value } : {}),\n    };\n  }, {});\n\n/**\n * copied from `fp-ts`\n * https://github.com/gcanti/fp-ts/blob/70190b5a03ddc2d31b4708c75c6dfad81d0bfa21/perf/function/flow.tÂ¡s\n */\nexport function flow<A extends Array<unknown>, B>(ab: (...a: A) => B): (...a: A) => B;\nexport function flow<A extends Array<unknown>, B, C>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n): (...a: A) => C;\nexport function flow<A extends Array<unknown>, B, C, D>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (b: C) => D,\n): (...a: A) => D;\nexport function flow(...fns: Array<Function>): Function {\n  const len = fns.length - 1;\n  return function(this: any, ...x: Array<any>) {\n    let y = fns[0].apply(this, x);\n    for (let i = 1; i <= len; i++) {\n      y = fns[i].call(this, y);\n    }\n    return y;\n  };\n}\n","import {\n  AnyJson,\n  checkIsString,\n  getRefinement,\n  isDefined,\n  checkIsNonEmptyArray,\n  JsonMap,\n  NonEmptyArray,\n  Nullable,\n} from './typescript';\n\nexport type Errors = NonEmptyArray<string>;\nexport type ErrorSource = 'api' | 'decoding';\n\nconst checkIsObject = getRefinement(\n  (response: AnyJson): Nullable<JsonMap> =>\n    isDefined(response) && typeof response === 'object' && !Array.isArray(response)\n      ? response\n      : null,\n);\n\nconst checkIsErrors = getRefinement(\n  (errors: AnyJson): Nullable<Errors> =>\n    Array.isArray(errors) && errors.every(checkIsString) && checkIsNonEmptyArray(errors)\n      ? errors\n      : null,\n);\n\nconst checkIsApiError = getRefinement(\n  (response: AnyJson): Nullable<{ errors: Errors }> =>\n    checkIsObject(response) && 'errors' in response && checkIsErrors(response.errors)\n      ? { errors: response.errors }\n      : null,\n);\n\nexport const getErrorForBadStatusCode = (\n  jsonResponse: AnyJson,\n): { errors: Errors; source: ErrorSource } => {\n  if (checkIsApiError(jsonResponse)) {\n    return { errors: jsonResponse.errors, source: 'api' };\n  } else {\n    return {\n      errors: [\n        'Responded with a status code outside the 2xx range, and the response body is not recognisable.',\n      ],\n      source: 'decoding',\n    };\n  }\n};\n\nexport class DecodingError {\n  constructor(readonly message: string) {}\n}\n","import * as ContentTypeHelpers from 'content-type';\nimport { DecodingError } from './errors';\nimport { AnyJson, isDefined } from './typescript';\n\nconst CONTENT_TYPE_RESPONSE_HEADER = 'content-type';\nconst CONTENT_TYPE_JSON = 'application/json';\nconst checkIsJsonResponse = (response: Response) => {\n  const contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);\n\n  return (\n    isDefined(contentTypeHeader) &&\n    ContentTypeHelpers.parse(contentTypeHeader).type === CONTENT_TYPE_JSON\n  );\n};\n\n/**\n * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.\n */\nexport const getJsonResponse = (response: Response): Promise<AnyJson> => {\n  if (checkIsJsonResponse(response)) {\n    return response.json().catch(_err => {\n      throw new DecodingError('unable to parse JSON response.');\n    });\n  } else {\n    throw new DecodingError('expected JSON response from server.');\n  }\n};\n","import { Errors, ErrorSource, getErrorForBadStatusCode, DecodingError } from './errors';\nimport { getJsonResponse } from './json';\n\nexport type ApiResponse<T> =\n  | {\n      type: 'success';\n      response: T;\n      originalResponse: Response;\n      errors?: never;\n      status: number;\n    }\n  | {\n      type: 'error';\n      source: ErrorSource;\n      response?: never;\n      originalResponse: Response;\n      errors: Errors;\n      status: number;\n    };\n\nexport type HandleResponse<T> = (args: { response: Response }) => Promise<T>;\n\nexport const handleFetchResponse = <ResponseType>(handleResponse: HandleResponse<ResponseType>) => (\n  response: Response,\n): Promise<ApiResponse<ResponseType>> =>\n  (response.ok\n    ? handleResponse({ response }).then(\n        (handledResponse): ApiResponse<ResponseType> => ({\n          type: 'success',\n          status: response.status,\n          response: handledResponse,\n          originalResponse: response,\n        }),\n      )\n    : getJsonResponse(response).then(\n        (jsonResponse): ApiResponse<ResponseType> => ({\n          type: 'error',\n          status: response.status,\n          ...getErrorForBadStatusCode(jsonResponse),\n          originalResponse: response,\n        }),\n      )\n  ).catch(error => {\n    /**\n     * We want to separate expected decoding errors from unknown ones. We do so by throwing a custom\n     * `DecodingError` whenever we encounter one within `handleFetchResponse` and catch them all\n     * here. This allows us to easily handle all of these errors at once. Unexpected errors are not\n     * caught, so that they bubble up and fail loudly.\n     *\n     * Note: Ideally we'd use an Either type, but this does the job without introducing dependencies\n     * like `fp-ts`.\n     */\n    if (error instanceof DecodingError) {\n      return {\n        type: 'error',\n        source: 'decoding',\n        status: response.status,\n        originalResponse: response,\n        errors: [error.message],\n      };\n    } else {\n      throw error;\n    }\n  });\n\nexport const castResponse = <T>(): HandleResponse<T> => ({ response }) =>\n  (getJsonResponse(response) as unknown) as Promise<T>;\n","type Query = {\n  [index: string]: string | number | boolean;\n};\n\nexport type BuildUrlParams = {\n  pathname: string;\n  query: Query;\n};\n\nconst addQueryToUrl = (query: Query) => (url: URL) => {\n  Object.keys(query).forEach(queryKey =>\n    url.searchParams.set(queryKey, query[queryKey].toString()),\n  );\n};\n\nconst addPathnameToUrl = (pathname: string) => (url: URL) => {\n  // When there is no existing pathname, the value is `/`. Appending would give us a URL with two\n  // forward slashes. This is why we replace the value in that scenario.\n  if (url.pathname === '/') {\n    url.pathname = pathname;\n  } else {\n    url.pathname += pathname;\n  }\n};\n\nexport const buildUrl = ({ pathname, query }: BuildUrlParams) => (apiUrl: string) => {\n  const url = new URL(apiUrl);\n  addPathnameToUrl(pathname)(url);\n  addQueryToUrl(query)(url);\n  return url.toString();\n};\n\nconst getQueryFromSearchParams = (searchParams: URLSearchParams) => {\n  const query: Query = {};\n\n  searchParams.forEach((value, key) => {\n    query[key] = value;\n  });\n  return query;\n};\n\nexport const parseQueryAndPathname = (url: string) => {\n  const { pathname, searchParams } = new URL(url);\n\n  const query: Query = getQueryFromSearchParams(searchParams);\n\n  return { query, pathname: pathname === '/' ? undefined : pathname };\n};\n","import { flow } from './fp';\nimport { ApiResponse, handleFetchResponse, HandleResponse } from './response';\nimport { isDefined, OmitStrict } from './typescript';\nimport { buildUrl, BuildUrlParams } from './url';\n\ntype FetchParams = Pick<RequestInit, 'method'>;\n/**\n * The params generated by the library\n */\ntype BaseRequestParams = BuildUrlParams &\n  FetchParams &\n  // `headers` is not part of FetchParams because we want to allow headers in the additional params as well\n  Pick<RequestInit, 'headers'>;\n\n/**\n * Additional fetch options provided by the user on a per-call basis\n */\nexport interface AdditionalFetchOptions extends OmitStrict<RequestInit, keyof FetchParams> {}\nexport type CompleteRequestParams = BaseRequestParams & AdditionalFetchOptions;\ntype HandleRequest<Args> = (\n  a: Args,\n  additionalFetchOptions?: AdditionalFetchOptions,\n) => CompleteRequestParams;\n\n/**\n * helper used to type-check the arguments, and add default params for all requests\n */\nexport const createRequestHandler = <Args>(\n  fn: (a: Args) => BaseRequestParams,\n): HandleRequest<Args> => (a, additionalFetchOptions = {}) => {\n  const { headers, query, ...baseReqParams } = fn(a);\n\n  return {\n    ...baseReqParams,\n    ...additionalFetchOptions,\n    query,\n    headers: {\n      ...headers,\n      ...additionalFetchOptions.headers,\n    },\n  };\n};\n\n/**\n * Initial parameters that apply to all calls\n */\nexport type InitParams = {\n  apiVersion?: string;\n  fetch?: typeof fetch;\n} & OmitStrict<RequestInit, 'method' | 'body'> &\n  ({ accessKey: string; apiUrl?: never } | { apiUrl: string; accessKey?: never });\n\ntype RequestGenerator<Args, ResponseType> = {\n  handleRequest: HandleRequest<Args>;\n  handleResponse: HandleResponse<ResponseType>;\n};\n\ntype Endpoint<PathnameParams, RequestArgs, ResponseType> = {\n  getPathname: (params: PathnameParams) => string;\n} & RequestGenerator<RequestArgs, ResponseType>;\nexport const makeEndpoint = <PathnameParams, RequestArgs, ResponseType>(\n  endpoint: Endpoint<PathnameParams, RequestArgs, ResponseType>,\n) => endpoint;\n\ntype GeneratedRequestFunction<Args, ResponseType> = (\n  ...a: Parameters<HandleRequest<Args>>\n) => Promise<ApiResponse<ResponseType>>;\n\ntype InitMakeRequest = (\n  args: InitParams,\n) => <Args, ResponseType>(\n  handlers: RequestGenerator<Args, ResponseType>,\n) => GeneratedRequestFunction<Args, ResponseType>;\n\nexport const initMakeRequest: InitMakeRequest = ({\n  accessKey,\n  apiVersion = 'v1',\n  apiUrl = 'https://api.unsplash.com',\n  headers: generalHeaders,\n  fetch: providedFetch,\n  ...generalFetchOptions\n}) => ({ handleResponse, handleRequest }) =>\n  flow(\n    handleRequest,\n    ({ pathname, query, method = 'GET', headers: endpointHeaders, body, signal }) => {\n      const url = buildUrl({ pathname, query })(apiUrl);\n\n      const fetchOptions: RequestInit = {\n        method,\n        headers: {\n          ...generalHeaders,\n          ...endpointHeaders,\n          'Accept-Version': apiVersion,\n          ...(isDefined(accessKey) ? { Authorization: `Client-ID ${accessKey}` } : {}),\n        },\n        body,\n        signal,\n        ...generalFetchOptions,\n      };\n\n      const fetchToUse = providedFetch ?? fetch;\n\n      return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));\n    },\n  );\n","import { DecodingError } from './errors';\nimport { HandleResponse, castResponse } from './response';\nimport { isDefined } from './typescript';\n\nconst TOTAL_RESPONSE_HEADER = 'x-total';\nconst getTotalFromApiFeedResponse = (response: Response) => {\n  const totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);\n  if (isDefined(totalsStr)) {\n    const total = parseInt(totalsStr);\n    if (Number.isInteger(total)) {\n      return total;\n    } else {\n      throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to be valid integer.`);\n    }\n  } else {\n    throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to exist.`);\n  }\n};\n\ntype FeedResponse<T> = {\n  results: T[];\n  total: number;\n};\n\nexport const handleFeedResponse = <T>(): HandleResponse<FeedResponse<T>> => ({ response }) =>\n  castResponse<T[]>()({ response }).then(results => ({\n    results,\n    total: getTotalFromApiFeedResponse(response),\n  }));\n","import { PaginationParams } from '../types/request';\nimport { compactDefined } from './fp';\nimport { isDefined } from './typescript';\n\nexport const getCollections = (collectionIds?: string[]) =>\n  isDefined(collectionIds) ? { collections: collectionIds.join() } : {};\n\nexport const getTopics = (topicIds?: string[]) =>\n  isDefined(topicIds) ? { topics: topicIds.join() } : {};\n\nexport const getFeedParams = ({ page, perPage, orderBy }: PaginationParams) =>\n  compactDefined({\n    per_page: perPage,\n    order_by: orderBy,\n    page,\n  });\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\n\ntype CollectionId = {\n  collectionId: string;\n};\n\nconst COLLECTIONS_PATH_PREFIX = '/collections';\n\nexport const getPhotos = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        collectionId,\n        orientation,\n        ...paginationParams\n      }: CollectionId & PaginationParams & OrientationParam) => ({\n        pathname: getPathname({ collectionId }),\n        query: compactDefined({ ...Query.getFeedParams(paginationParams), orientation }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n\nexport const list = (() => {\n  const getPathname = () => COLLECTIONS_PATH_PREFIX;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      (paginationParams: Pick<PaginationParams, 'page' | 'perPage'> = {}) => ({\n        pathname: getPathname(),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const getRelated = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/related`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { isDefined } from '../../helpers/typescript';\nimport { parseQueryAndPathname } from '../../helpers/url';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from './types';\n\ntype PhotoId = {\n  photoId: string;\n};\n\nconst PHOTOS_PATH_PREFIX = '/photos';\n\nexport const list = (() => {\n  const getPathname = () => PHOTOS_PATH_PREFIX;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler((feedParams: PaginationParams = {}) => ({\n      pathname: PHOTOS_PATH_PREFIX,\n      query: compactDefined(Query.getFeedParams(feedParams)),\n    })),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Full>(),\n  });\n})();\n\nexport const getStats = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Stats>(),\n  });\n})();\n\nexport type RandomParams = {\n  collectionIds?: string[];\n  topicIds?: string[];\n  featured?: boolean;\n  username?: string;\n  query?: string;\n  contentFilter?: 'low' | 'high';\n  count?: number;\n} & OrientationParam;\n\nexport const getRandom = (() => {\n  const getPathname = () => `${PHOTOS_PATH_PREFIX}/random`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ collectionIds, contentFilter, topicIds, ...queryParams }: RandomParams = {}) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          ...queryParams,\n          content_filter: contentFilter,\n          ...Query.getCollections(collectionIds),\n          ...Query.getTopics(topicIds),\n        }),\n        headers: {\n          /**\n           * Avoid response caching\n           */\n          'cache-control': 'no-cache',\n        },\n      }),\n    ),\n    handleResponse: castResponse<\n      // An array when the `count` query parameter is used.\n      Photo.Random | Photo.Random[]\n    >(),\n  });\n})();\n\nexport const trackDownload = {\n  handleRequest: createRequestHandler(({ downloadLocation }: { downloadLocation: string }) => {\n    const { pathname, query } = parseQueryAndPathname(downloadLocation);\n\n    if (!isDefined(pathname)) {\n      throw new Error('Could not parse pathname from url.');\n    }\n    return { pathname, query: compactDefined(query) };\n  }),\n  handleResponse: castResponse<{ url: string }>(),\n};\n","import { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams, Plus } from '../../types/request';\nimport { ColorId, ContentFilter, Language, SearchOrderBy } from './types/request';\nimport * as SearchResponse from './types/response';\n\nexport type SearchParams = {\n  query: string;\n} & Pick<PaginationParams, 'page' | 'perPage'>;\n\nconst SEARCH_PATH_PREFIX = `/search`;\n\ntype SearchPhotosParams = SearchParams &\n  OrientationParam & {\n    /**\n     * API defaults to `\"relevant\"` if no value is provided\n     */\n    orderBy?: SearchOrderBy;\n    color?: ColorId;\n    plus?: Plus;\n    /**\n     * API defaults to `en` (English) if no value is provided\n     */\n    lang?: Language;\n    /**\n     * API defaults to `\"low\"` if no value is provided\n     */\n    contentFilter?: ContentFilter;\n    collectionIds?: string[];\n  };\n\nexport const getPhotos = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/photos`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(\n      ({\n        query,\n        page,\n        perPage,\n        orderBy,\n        collectionIds,\n        lang,\n        contentFilter,\n        ...filters\n      }: SearchPhotosParams) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          query,\n          content_filter: contentFilter,\n          lang,\n          order_by: orderBy,\n          ...Query.getFeedParams({ page, perPage }),\n          ...Query.getCollections(collectionIds),\n          ...filters,\n        }),\n      }),\n    ),\n    handleResponse: castResponse<SearchResponse.Photos>(),\n  });\n})();\n\nexport const getCollections = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/collections`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Collections>(),\n  });\n})();\n\nexport const getUsers = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/users`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Users>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as User from './types';\nimport * as Photo from '../photos/types';\nimport * as Collection from '../collections/types';\n\ntype Username = {\n  username: string;\n};\n\nconst USERS_PATH_PREFIX = '/users';\n\nexport const get = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ username }: Username) => ({\n      pathname: getPathname({ username }),\n      query: {},\n    })),\n    handleResponse: castResponse<User.Full>(),\n  });\n})();\n\nexport const getPhotos = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        stats,\n        orientation,\n        ...paginationParams\n      }: {\n        stats?: boolean;\n      } & OrientationParam &\n        Username &\n        PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n          stats,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const getLikes = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/likes`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        orientation,\n        ...paginationParams\n      }: OrientationParam & Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\nexport const getCollections = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/collections`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ username, ...paginationParams }: Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Collection.Basic>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined, flow } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OmitStrict } from '../../helpers/typescript';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from '../photos/types';\nimport * as Topic from './types';\n\nexport type TopicIdOrSlug = {\n  topicIdOrSlug: string;\n};\n\nconst BASE_TOPIC_PATH = '/topics';\nconst getTopicPath = ({ topicIdOrSlug }: TopicIdOrSlug) => `${BASE_TOPIC_PATH}/${topicIdOrSlug}`;\n\nexport type TopicOrderBy = 'latest' | 'oldest' | 'position' | 'featured';\n\nexport const list = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({\n    page,\n    perPage,\n    orderBy,\n    topicIdsOrSlugs,\n  }: OmitStrict<PaginationParams, 'orderBy'> & {\n    /**\n     * default: `position`\n     */\n    orderBy?: TopicOrderBy;\n    topicIdsOrSlugs?: string[];\n  }) => ({\n    pathname: BASE_TOPIC_PATH,\n    query: compactDefined({\n      ...Query.getFeedParams({ page, perPage }),\n      ids: topicIdsOrSlugs?.join(','),\n      order_by: orderBy,\n    }),\n  }),\n  handleResponse: handleFeedResponse<Topic.Basic>(),\n});\n\nexport const get = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({ topicIdOrSlug }: TopicIdOrSlug) => ({\n    pathname: getTopicPath({ topicIdOrSlug }),\n    query: {},\n  }),\n  handleResponse: castResponse<Topic.Full>(),\n});\n\nexport const getPhotos = (() => {\n  const getPathname = flow(getTopicPath, topicPath => `${topicPath}/photos`);\n  return makeEndpoint({\n    getPathname,\n    handleRequest: ({\n      topicIdOrSlug,\n      orientation,\n      ...feedParams\n    }: TopicIdOrSlug & PaginationParams & OrientationParam) => ({\n      pathname: getPathname({ topicIdOrSlug }),\n      query: compactDefined({\n        ...Query.getFeedParams(feedParams),\n        orientation,\n      }),\n    }),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n","export const trackNonHotLinkedPhotoView = ({ appId }: { appId: string }) => ({\n  photoId,\n}: {\n  photoId: string | string[];\n}) => {\n  const ids = !Array.isArray(photoId) ? [photoId] : photoId;\n\n  if (ids.length > 20) {\n    throw new Error(\n      'You cannot track more than 20 photos at once. Please try again with fewer photos.',\n    );\n  }\n\n  return fetch(`views.unsplash.com/v?photo_id=${ids.join()}&app_id=${appId}`);\n};\n","export type SearchOrderBy = 'relevant' | 'latest' | 'editorial';\n\nexport type ColorId =\n  | 'white'\n  | 'black'\n  | 'yellow'\n  | 'orange'\n  | 'red'\n  | 'purple'\n  | 'magenta'\n  | 'green'\n  | 'teal'\n  | 'blue'\n  | 'black_and_white';\n\nexport type ContentFilter = 'high' | 'low';\n\nexport enum Language {\n  Afrikaans = 'af',\n  Amharic = 'am',\n  Arabic = 'ar',\n  Azerbaijani = 'az',\n  Belarusian = 'be',\n  Bulgarian = 'bg',\n  Bengali = 'bn',\n  Bosnian = 'bs',\n  Catalan = 'ca',\n  Cebuano = 'ceb',\n  Corsican = 'co',\n  Czech = 'cs',\n  Welsh = 'cy',\n  Danish = 'da',\n  German = 'de',\n  Greek = 'el',\n  English = 'en',\n  Esperanto = 'eo',\n  Spanish = 'es',\n  Estonian = 'et',\n  Basque = 'eu',\n  Persian = 'fa',\n  Finnish = 'fi',\n  French = 'fr',\n  Frisian = 'fy',\n  Irish = 'ga',\n  ScotsGaelic = 'gd',\n  Galician = 'gl',\n  Gujarati = 'gu',\n  Hausa = 'ha',\n  Hawaiian = 'haw',\n  Hindi = 'hi',\n  Hmong = 'hmn',\n  Croatian = 'hr',\n  HaitianCreole = 'ht',\n  Hungarian = 'hu',\n  Armenian = 'hy',\n  Indonesian = 'id',\n  Igbo = 'ig',\n  Icelandic = 'is',\n  Italian = 'it',\n  Hebrew = 'iw',\n  Japanese = 'ja',\n  Javanese = 'jw',\n  Georgian = 'ka',\n  Kazakh = 'kk',\n  Khmer = 'km',\n  Kannada = 'kn',\n  Korean = 'ko',\n  Kurdish = 'ku',\n  Kyrgyz = 'ky',\n  Latin = 'la',\n  Luxembourgish = 'lb',\n  Lao = 'lo',\n  Lithuanian = 'lt',\n  Latvian = 'lv',\n  Malagasy = 'mg',\n  Maori = 'mi',\n  Macedonian = 'mk',\n  Malayalam = 'ml',\n  Mongolian = 'mn',\n  Marathi = 'mr',\n  Malay = 'ms',\n  Maltese = 'mt',\n  Myanmar = 'my',\n  Nepali = 'ne',\n  Dutch = 'nl',\n  Norwegian = 'no',\n  Nyanja = 'ny',\n  Oriya = 'or',\n  Punjabi = 'pa',\n  Polish = 'pl',\n  Pashto = 'ps',\n  Portuguese = 'pt',\n  Romanian = 'ro',\n  Russian = 'ru',\n  Kinyarwanda = 'rw',\n  Sindhi = 'sd',\n  Sinhala = 'si',\n  Slovak = 'sk',\n  Slovenian = 'sl',\n  Samoan = 'sm',\n  Shona = 'sn',\n  Somali = 'so',\n  Albanian = 'sq',\n  Serbian = 'sr',\n  Sesotho = 'st',\n  Sundanese = 'su',\n  Swedish = 'sv',\n  Swahili = 'sw',\n  Tamil = 'ta',\n  Telugu = 'te',\n  Tajik = 'tg',\n  Thai = 'th',\n  Turkmen = 'tk',\n  Filipino = 'tl',\n  Turkish = 'tr',\n  Tatar = 'tt',\n  Uighur = 'ug',\n  Ukrainian = 'uk',\n  Urdu = 'ur',\n  Uzbek = 'uz',\n  Vietnamese = 'vi',\n  Xhosa = 'xh',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  ChineseSimplified = 'zh',\n  ChineseTraditional = 'zh-TW',\n  Zulu = 'zu',\n}\n","export enum OrderBy {\n  LATEST = 'latest',\n  POPULAR = 'popular',\n  VIEWS = 'views',\n  DOWNLOADS = 'downloads',\n  OLDEST = 'oldest',\n}\nexport type Orientation = 'landscape' | 'portrait' | 'squarish';\nexport type OrientationParam = {\n  orientation?: Orientation;\n};\nexport type Plus = 'mixed' | 'only' | 'none';\n\nexport type PaginationParams = {\n  /**\n   * API defaults to `10` if no value is provided\n   */\n  perPage?: number;\n  /**\n   * API defaults to `1` if no value is provided\n   */\n  page?: number;\n  /**\n   * API defaults to `\"latest\"` if no value is provided\n   */\n  orderBy?: OrderBy;\n};\n","import { flow } from './helpers/fp';\nimport { initMakeRequest } from './helpers/request';\nimport * as collections from './methods/collections';\nimport * as photos from './methods/photos';\nimport * as search from './methods/search';\nimport * as users from './methods/users';\nimport * as topics from './methods/topics';\n\nimport * as _internals from './internals';\n\nexport const createApi = flow(initMakeRequest, makeRequest => ({\n  photos: {\n    get: makeRequest(photos.get),\n    list: makeRequest(photos.list),\n    getStats: makeRequest(photos.getStats),\n    getRandom: makeRequest(photos.getRandom),\n    trackDownload: makeRequest(photos.trackDownload),\n  },\n  users: {\n    getPhotos: makeRequest(users.getPhotos),\n    getCollections: makeRequest(users.getCollections),\n    getLikes: makeRequest(users.getLikes),\n    get: makeRequest(users.get),\n  },\n  search: {\n    getCollections: makeRequest(search.getCollections),\n    getPhotos: makeRequest(search.getPhotos),\n    getUsers: makeRequest(search.getUsers),\n  },\n  collections: {\n    getPhotos: makeRequest(collections.getPhotos),\n    get: makeRequest(collections.get),\n    list: makeRequest(collections.list),\n    getRelated: makeRequest(collections.getRelated),\n  },\n  topics: {\n    list: makeRequest(topics.list),\n    get: makeRequest(topics.get),\n    getPhotos: makeRequest(topics.getPhotos),\n  },\n}));\n\nexport { Language, ColorId, ContentFilter, SearchOrderBy } from './methods/search/types/request';\nexport { OrderBy, Orientation, Plus } from './types/request';\nexport { _internals };\n"],"names":["checkIsString","getRefinement","value","isDefined","x","undefined","getB","a","checkIsNonEmptyArray","length","compactDefined","obj","Object","keys","reduce","acc","key","flow","fns","len","y","apply","i","call","checkIsObject","response","Array","isArray","checkIsErrors","errors","every","checkIsApiError","getErrorForBadStatusCode","jsonResponse","source","DecodingError","message","CONTENT_TYPE_RESPONSE_HEADER","CONTENT_TYPE_JSON","checkIsJsonResponse","contentTypeHeader","headers","get","ContentTypeHelpers","type","getJsonResponse","json","_err","handleFetchResponse","handleResponse","ok","then","handledResponse","status","originalResponse","error","castResponse","addQueryToUrl","query","url","forEach","queryKey","searchParams","set","toString","addPathnameToUrl","pathname","buildUrl","apiUrl","URL","getQueryFromSearchParams","parseQueryAndPathname","createRequestHandler","fn","additionalFetchOptions","baseReqParams","makeEndpoint","endpoint","initMakeRequest","accessKey","apiVersion","generalHeaders","providedFetch","fetch","generalFetchOptions","handleRequest","method","endpointHeaders","body","signal","fetchOptions","Authorization","fetchToUse","TOTAL_RESPONSE_HEADER","getTotalFromApiFeedResponse","totalsStr","total","parseInt","Number","isInteger","handleFeedResponse","results","getCollections","collectionIds","collections","join","getTopics","topicIds","topics","getFeedParams","page","perPage","orderBy","per_page","order_by","COLLECTIONS_PATH_PREFIX","getPhotos","getPathname","collectionId","orientation","paginationParams","Query","list","getRelated","PHOTOS_PATH_PREFIX","_params","feedParams","photoId","getStats","getRandom","contentFilter","queryParams","content_filter","trackDownload","downloadLocation","Error","SEARCH_PATH_PREFIX","lang","filters","getUsers","USERS_PATH_PREFIX","username","stats","getLikes","BASE_TOPIC_PATH","getTopicPath","topicIdOrSlug","topicIdsOrSlugs","ids","topicPath","trackNonHotLinkedPhotoView","appId","Language","OrderBy","createApi","makeRequest","photos","users","search"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"unsplash-js.esm.js","sources":["../src/helpers/typescript.ts","../src/helpers/fp.ts","../src/helpers/errors.ts","../src/helpers/json.ts","../src/helpers/response.ts","../src/helpers/url.ts","../src/helpers/request.ts","../src/helpers/feed.ts","../src/helpers/query.ts","../src/methods/collections/index.ts","../src/methods/photos/index.ts","../src/methods/search/index.ts","../src/methods/users/index.ts","../src/methods/topics/index.ts","../src/beacon.ts","../src/methods/search/types/request.ts","../src/types/request.ts","../src/index.ts"],"sourcesContent":["// Copied from https://github.com/Microsoft/TypeScript/issues/1897#issuecomment-338650717\nexport type AnyJson = boolean | number | string | null | JsonArray | JsonMap;\nexport type JsonMap = { [key: string]: AnyJson };\nexport type JsonArray = Array<AnyJson>;\n\nexport const checkIsString = getRefinement(\n  (value: unknown): Nullable<string> => (typeof value === 'string' ? value : null),\n);\n\n/**\n * https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-377567046\n */\nexport type OmitStrict<T, K extends keyof T> = Omit<T, K>;\n\n/**\n * Unlike TypeScript's `NonNullable`, this does _not_ include `undefined`\n */\nexport type Nullable<T> = T | null;\n\nexport const isDefined = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\ntype Refinement<A, B extends A> = (a: A) => a is B;\nexport function getRefinement<A, B extends A>(getB: (a: A) => Nullable<B>): Refinement<A, B> {\n  return (a: A): a is B => isDefined(getB(a));\n}\n\nexport const checkIsNonEmptyArray = <T>(a: T[]): a is NonEmptyArray<T> => a.length > 0;\n","import { isDefined } from './typescript';\n\n/** Takes a dictionary containing nullish values and returns a dictionary of all the defined\n * (non-nullish) values.\n */\nexport const compactDefined = <A>(obj: Record<string, A | null | undefined>) =>\n  Object.keys(obj).reduce<Record<string, A>>((acc, key) => {\n    const value = obj[key];\n    return {\n      ...acc,\n      ...(isDefined(value) ? { [key]: value } : {}),\n    };\n  }, {});\n\n/**\n * copied from `fp-ts`\n * https://github.com/gcanti/fp-ts/blob/70190b5a03ddc2d31b4708c75c6dfad81d0bfa21/perf/function/flow.tÂ¡s\n */\nexport function flow<A extends Array<unknown>, B>(ab: (...a: A) => B): (...a: A) => B;\nexport function flow<A extends Array<unknown>, B, C>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n): (...a: A) => C;\nexport function flow<A extends Array<unknown>, B, C, D>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (b: C) => D,\n): (...a: A) => D;\nexport function flow(...fns: Array<Function>): Function {\n  const len = fns.length - 1;\n  return function(this: any, ...x: Array<any>) {\n    let y = fns[0].apply(this, x);\n    for (let i = 1; i <= len; i++) {\n      y = fns[i].call(this, y);\n    }\n    return y;\n  };\n}\n","import {\n  AnyJson,\n  checkIsString,\n  getRefinement,\n  isDefined,\n  checkIsNonEmptyArray,\n  JsonMap,\n  NonEmptyArray,\n  Nullable,\n} from './typescript';\n\nexport type Errors = NonEmptyArray<string>;\nexport type ErrorSource = 'api' | 'decoding';\n\nconst checkIsObject = getRefinement(\n  (response: AnyJson): Nullable<JsonMap> =>\n    isDefined(response) && typeof response === 'object' && !Array.isArray(response)\n      ? response\n      : null,\n);\n\nconst checkIsErrors = getRefinement(\n  (errors: AnyJson): Nullable<Errors> =>\n    Array.isArray(errors) && errors.every(checkIsString) && checkIsNonEmptyArray(errors)\n      ? errors\n      : null,\n);\n\nconst checkIsApiError = getRefinement(\n  (response: AnyJson): Nullable<{ errors: Errors }> =>\n    checkIsObject(response) && 'errors' in response && checkIsErrors(response.errors)\n      ? { errors: response.errors }\n      : null,\n);\n\nexport const getErrorForBadStatusCode = (\n  jsonResponse: AnyJson,\n): { errors: Errors; source: ErrorSource } => {\n  if (checkIsApiError(jsonResponse)) {\n    return { errors: jsonResponse.errors, source: 'api' };\n  } else {\n    return {\n      errors: [\n        'Responded with a status code outside the 2xx range, and the response body is not recognisable.',\n      ],\n      source: 'decoding',\n    };\n  }\n};\n\nexport class DecodingError {\n  constructor(readonly message: string) {}\n}\n","import * as ContentTypeHelpers from 'content-type';\nimport { DecodingError } from './errors';\nimport { AnyJson, isDefined } from './typescript';\n\nconst CONTENT_TYPE_RESPONSE_HEADER = 'content-type';\nconst CONTENT_TYPE_JSON = 'application/json';\nconst checkIsJsonResponse = (response: Response) => {\n  const contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);\n\n  return (\n    isDefined(contentTypeHeader) &&\n    ContentTypeHelpers.parse(contentTypeHeader).type === CONTENT_TYPE_JSON\n  );\n};\n\n/**\n * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.\n */\nexport const getJsonResponse = (response: Response): Promise<AnyJson> => {\n  if (checkIsJsonResponse(response)) {\n    return response.json().catch(_err => {\n      throw new DecodingError('unable to parse JSON response.');\n    });\n  } else {\n    throw new DecodingError('expected JSON response from server.');\n  }\n};\n","import { Errors, ErrorSource, getErrorForBadStatusCode, DecodingError } from './errors';\nimport { getJsonResponse } from './json';\n\nexport type ApiResponse<T> =\n  | {\n      type: 'success';\n      response: T;\n      originalResponse: Response;\n      errors?: never;\n      status: number;\n    }\n  | {\n      type: 'error';\n      source: ErrorSource;\n      response?: never;\n      originalResponse: Response;\n      errors: Errors;\n      status: number;\n    };\n\nexport type HandleResponse<T> = (args: { response: Response }) => Promise<T>;\n\nexport const handleFetchResponse = <ResponseType>(handleResponse: HandleResponse<ResponseType>) => (\n  response: Response,\n): Promise<ApiResponse<ResponseType>> =>\n  (response.ok\n    ? handleResponse({ response }).then(\n        (handledResponse): ApiResponse<ResponseType> => ({\n          type: 'success',\n          status: response.status,\n          response: handledResponse,\n          originalResponse: response,\n        }),\n      )\n    : getJsonResponse(response).then(\n        (jsonResponse): ApiResponse<ResponseType> => ({\n          type: 'error',\n          status: response.status,\n          ...getErrorForBadStatusCode(jsonResponse),\n          originalResponse: response,\n        }),\n      )\n  ).catch(error => {\n    /**\n     * We want to separate expected decoding errors from unknown ones. We do so by throwing a custom\n     * `DecodingError` whenever we encounter one within `handleFetchResponse` and catch them all\n     * here. This allows us to easily handle all of these errors at once. Unexpected errors are not\n     * caught, so that they bubble up and fail loudly.\n     *\n     * Note: Ideally we'd use an Either type, but this does the job without introducing dependencies\n     * like `fp-ts`.\n     */\n    if (error instanceof DecodingError) {\n      return {\n        type: 'error',\n        source: 'decoding',\n        status: response.status,\n        originalResponse: response,\n        errors: [error.message],\n      };\n    } else {\n      throw error;\n    }\n  });\n\nexport const castResponse = <T>(): HandleResponse<T> => ({ response }) =>\n  (getJsonResponse(response) as unknown) as Promise<T>;\n","type Query = {\n  [index: string]: string | number | boolean;\n};\n\nexport type BuildUrlParams = {\n  pathname: string;\n  query: Query;\n};\n\nconst addQueryToUrl = (query: Query) => (url: URL) => {\n  Object.keys(query).forEach(queryKey =>\n    url.searchParams.set(queryKey, query[queryKey].toString()),\n  );\n};\n\nconst addPathnameToUrl = (pathname: string) => (url: URL) => {\n  // When there is no existing pathname, the value is `/`. Appending would give us a URL with two\n  // forward slashes. This is why we replace the value in that scenario.\n  if (url.pathname === '/') {\n    url.pathname = pathname;\n  } else {\n    url.pathname += pathname;\n  }\n};\n\nexport const buildUrl = ({ pathname, query }: BuildUrlParams) => (apiUrl: string) => {\n  const url = new URL(apiUrl);\n  addPathnameToUrl(pathname)(url);\n  addQueryToUrl(query)(url);\n  return url.toString();\n};\n\nconst getQueryFromSearchParams = (searchParams: URLSearchParams) => {\n  const query: Query = {};\n\n  searchParams.forEach((value, key) => {\n    query[key] = value;\n  });\n  return query;\n};\n\nexport const parseQueryAndPathname = (url: string) => {\n  const { pathname, searchParams } = new URL(url);\n\n  const query: Query = getQueryFromSearchParams(searchParams);\n\n  return { query, pathname: pathname === '/' ? undefined : pathname };\n};\n","import { flow } from './fp';\nimport { ApiResponse, handleFetchResponse, HandleResponse } from './response';\nimport { isDefined, OmitStrict } from './typescript';\nimport { buildUrl, BuildUrlParams } from './url';\n\ntype FetchParams = Pick<RequestInit, 'method'>;\n/**\n * The params generated by the library\n */\ntype BaseRequestParams = BuildUrlParams &\n  FetchParams &\n  // `headers` is not part of FetchParams because we want to allow headers in the additional params as well\n  Pick<RequestInit, 'headers'>;\n\n/**\n * Additional fetch options provided by the user on a per-call basis\n */\nexport interface AdditionalFetchOptions extends OmitStrict<RequestInit, keyof FetchParams> {}\nexport type CompleteRequestParams = BaseRequestParams & AdditionalFetchOptions;\ntype HandleRequest<Args> = (\n  a: Args,\n  additionalFetchOptions?: AdditionalFetchOptions,\n) => CompleteRequestParams;\n\n/**\n * helper used to type-check the arguments, and add default params for all requests\n */\nexport const createRequestHandler = <Args>(\n  fn: (a: Args) => BaseRequestParams,\n): HandleRequest<Args> => (a, additionalFetchOptions = {}) => {\n  const { headers, query, ...baseReqParams } = fn(a);\n\n  return {\n    ...baseReqParams,\n    ...additionalFetchOptions,\n    query,\n    headers: {\n      ...headers,\n      ...additionalFetchOptions.headers,\n    },\n  };\n};\n\n/**\n * Initial parameters that apply to all calls\n */\nexport type InitParams = {\n  apiVersion?: string;\n  fetch?: typeof fetch;\n} & OmitStrict<RequestInit, 'method' | 'body'> &\n  ({ accessKey: string; apiUrl?: never } | { apiUrl: string; accessKey?: never });\n\ntype RequestGenerator<Args, ResponseType> = {\n  handleRequest: HandleRequest<Args>;\n  handleResponse: HandleResponse<ResponseType>;\n};\n\ntype Endpoint<PathnameParams, RequestArgs, ResponseType> = {\n  getPathname: (params: PathnameParams) => string;\n} & RequestGenerator<RequestArgs, ResponseType>;\nexport const makeEndpoint = <PathnameParams, RequestArgs, ResponseType>(\n  endpoint: Endpoint<PathnameParams, RequestArgs, ResponseType>,\n) => endpoint;\n\ntype GeneratedRequestFunction<Args, ResponseType> = (\n  ...a: Parameters<HandleRequest<Args>>\n) => Promise<ApiResponse<ResponseType>>;\n\ntype InitMakeRequest = (\n  args: InitParams,\n) => <Args, ResponseType>(\n  handlers: RequestGenerator<Args, ResponseType>,\n) => GeneratedRequestFunction<Args, ResponseType>;\n\nexport const initMakeRequest: InitMakeRequest = ({\n  accessKey,\n  apiVersion = 'v1',\n  apiUrl = 'https://api.unsplash.com',\n  headers: generalHeaders,\n  fetch: providedFetch,\n  ...generalFetchOptions\n}) => ({ handleResponse, handleRequest }) =>\n  flow(\n    handleRequest,\n    ({ pathname, query, method = 'GET', headers: endpointHeaders, body, signal }) => {\n      const url = buildUrl({ pathname, query })(apiUrl);\n\n      const fetchOptions: RequestInit = {\n        method,\n        headers: {\n          ...generalHeaders,\n          ...endpointHeaders,\n          'Accept-Version': apiVersion,\n          ...(isDefined(accessKey) ? { Authorization: `Client-ID ${accessKey}` } : {}),\n        },\n        body,\n        signal,\n        ...generalFetchOptions,\n      };\n\n      const fetchToUse = providedFetch ?? fetch;\n\n      return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));\n    },\n  );\n","import { DecodingError } from './errors';\nimport { HandleResponse, castResponse } from './response';\nimport { isDefined } from './typescript';\n\nconst TOTAL_RESPONSE_HEADER = 'x-total';\nconst getTotalFromApiFeedResponse = (response: Response) => {\n  const totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);\n  if (isDefined(totalsStr)) {\n    const total = parseInt(totalsStr);\n    if (Number.isInteger(total)) {\n      return total;\n    } else {\n      throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to be valid integer.`);\n    }\n  } else {\n    throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to exist.`);\n  }\n};\n\ntype FeedResponse<T> = {\n  results: T[];\n  total: number;\n};\n\nexport const handleFeedResponse = <T>(): HandleResponse<FeedResponse<T>> => ({ response }) =>\n  castResponse<T[]>()({ response }).then(results => ({\n    results,\n    total: getTotalFromApiFeedResponse(response),\n  }));\n","import { PaginationParams } from '../types/request';\nimport { compactDefined } from './fp';\nimport { isDefined } from './typescript';\n\nexport const getCollections = (collectionIds?: string[]) =>\n  isDefined(collectionIds) ? { collections: collectionIds.join() } : {};\n\nexport const getTopics = (topicIds?: string[]) =>\n  isDefined(topicIds) ? { topics: topicIds.join() } : {};\n\nexport const getFeedParams = ({ page, perPage, orderBy }: PaginationParams) =>\n  compactDefined({\n    per_page: perPage,\n    order_by: orderBy,\n    page,\n  });\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\n\ntype CollectionId = {\n  collectionId: string;\n};\n\nconst COLLECTIONS_PATH_PREFIX = '/collections';\n\nexport const getPhotos = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        collectionId,\n        orientation,\n        ...paginationParams\n      }: CollectionId & PaginationParams & OrientationParam) => ({\n        pathname: getPathname({ collectionId }),\n        query: compactDefined({ ...Query.getFeedParams(paginationParams), orientation }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n\nexport const list = (() => {\n  const getPathname = () => COLLECTIONS_PATH_PREFIX;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      (paginationParams: Pick<PaginationParams, 'page' | 'perPage'> = {}) => ({\n        pathname: getPathname(),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const getRelated = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/related`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { isDefined } from '../../helpers/typescript';\nimport { parseQueryAndPathname } from '../../helpers/url';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from './types';\n\ntype PhotoId = {\n  photoId: string;\n};\n\nconst PHOTOS_PATH_PREFIX = '/photos';\n\nexport const list = (() => {\n  const getPathname = () => PHOTOS_PATH_PREFIX;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler((feedParams: PaginationParams = {}) => ({\n      pathname: PHOTOS_PATH_PREFIX,\n      query: compactDefined(Query.getFeedParams(feedParams)),\n    })),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Full>(),\n  });\n})();\n\nexport const getStats = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Stats>(),\n  });\n})();\n\nexport type RandomParams = {\n  collectionIds?: string[];\n  topicIds?: string[];\n  featured?: boolean;\n  username?: string;\n  query?: string;\n  contentFilter?: 'low' | 'high';\n  count?: number;\n} & OrientationParam;\n\nexport const getRandom = (() => {\n  const getPathname = () => `${PHOTOS_PATH_PREFIX}/random`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ collectionIds, contentFilter, topicIds, ...queryParams }: RandomParams = {}) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          ...queryParams,\n          content_filter: contentFilter,\n          ...Query.getCollections(collectionIds),\n          ...Query.getTopics(topicIds),\n        }),\n        headers: {\n          /**\n           * Avoid response caching\n           */\n          'cache-control': 'no-cache',\n        },\n      }),\n    ),\n    handleResponse: castResponse<\n      // An array when the `count` query parameter is used.\n      Photo.Random | Photo.Random[]\n    >(),\n  });\n})();\n\nexport const trackDownload = {\n  handleRequest: createRequestHandler(({ downloadLocation }: { downloadLocation: string }) => {\n    const { pathname, query } = parseQueryAndPathname(downloadLocation);\n\n    if (!isDefined(pathname)) {\n      throw new Error('Could not parse pathname from url.');\n    }\n    return { pathname, query: compactDefined(query) };\n  }),\n  handleResponse: castResponse<{ url: string }>(),\n};\n","import { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams, Plus } from '../../types/request';\nimport { ColorId, ContentFilter, Language, SearchOrderBy } from './types/request';\nimport * as SearchResponse from './types/response';\n\nexport type SearchParams = {\n  query: string;\n} & Pick<PaginationParams, 'page' | 'perPage'>;\n\nconst SEARCH_PATH_PREFIX = `/search`;\n\ntype SearchPhotosParams = SearchParams &\n  OrientationParam & {\n    /**\n     * API defaults to `\"relevant\"` if no value is provided\n     */\n    orderBy?: SearchOrderBy;\n    color?: ColorId;\n    plus?: Plus;\n    /**\n     * API defaults to `en` (English) if no value is provided\n     */\n    lang?: Language;\n    /**\n     * API defaults to `\"low\"` if no value is provided\n     */\n    contentFilter?: ContentFilter;\n    collectionIds?: string[];\n  };\n\nexport const getPhotos = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/photos`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(\n      ({\n        query,\n        page,\n        perPage,\n        orderBy,\n        collectionIds,\n        lang,\n        contentFilter,\n        ...filters\n      }: SearchPhotosParams) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          query,\n          content_filter: contentFilter,\n          lang,\n          order_by: orderBy,\n          ...Query.getFeedParams({ page, perPage }),\n          ...Query.getCollections(collectionIds),\n          ...filters,\n        }),\n      }),\n    ),\n    handleResponse: castResponse<SearchResponse.Photos>(),\n  });\n})();\n\nexport const getCollections = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/collections`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Collections>(),\n  });\n})();\n\nexport const getUsers = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/users`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Users>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as User from './types';\nimport * as Photo from '../photos/types';\nimport * as Collection from '../collections/types';\n\ntype Username = {\n  username: string;\n};\n\nconst USERS_PATH_PREFIX = '/users';\n\nexport const get = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ username }: Username) => ({\n      pathname: getPathname({ username }),\n      query: {},\n    })),\n    handleResponse: castResponse<User.Full>(),\n  });\n})();\n\nexport const getPhotos = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        stats,\n        orientation,\n        ...paginationParams\n      }: {\n        stats?: boolean;\n      } & OrientationParam &\n        Username &\n        PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n          stats,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const getLikes = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/likes`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        orientation,\n        ...paginationParams\n      }: OrientationParam & Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\nexport const getCollections = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/collections`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ username, ...paginationParams }: Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Collection.Basic>(),\n  });\n})();\n\nexport const getStatistics = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        quantity = 30,\n        resolution = 'days',\n      }: Username & {\n        quantity?: number;\n        resolution?: string;\n      }) => ({\n        pathname: getPathname({ username }),\n        query: {\n          quantity,\n          resolution,\n        },\n      }),\n    ),\n    handleResponse: castResponse<User.Statistics>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined, flow } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OmitStrict } from '../../helpers/typescript';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from '../photos/types';\nimport * as Topic from './types';\n\nexport type TopicIdOrSlug = {\n  topicIdOrSlug: string;\n};\n\nconst BASE_TOPIC_PATH = '/topics';\nconst getTopicPath = ({ topicIdOrSlug }: TopicIdOrSlug) => `${BASE_TOPIC_PATH}/${topicIdOrSlug}`;\n\nexport type TopicOrderBy = 'latest' | 'oldest' | 'position' | 'featured';\n\nexport const list = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({\n    page,\n    perPage,\n    orderBy,\n    topicIdsOrSlugs,\n  }: OmitStrict<PaginationParams, 'orderBy'> & {\n    /**\n     * default: `position`\n     */\n    orderBy?: TopicOrderBy;\n    topicIdsOrSlugs?: string[];\n  }) => ({\n    pathname: BASE_TOPIC_PATH,\n    query: compactDefined({\n      ...Query.getFeedParams({ page, perPage }),\n      ids: topicIdsOrSlugs?.join(','),\n      order_by: orderBy,\n    }),\n  }),\n  handleResponse: handleFeedResponse<Topic.Basic>(),\n});\n\nexport const get = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({ topicIdOrSlug }: TopicIdOrSlug) => ({\n    pathname: getTopicPath({ topicIdOrSlug }),\n    query: {},\n  }),\n  handleResponse: castResponse<Topic.Full>(),\n});\n\nexport const getPhotos = (() => {\n  const getPathname = flow(getTopicPath, topicPath => `${topicPath}/photos`);\n  return makeEndpoint({\n    getPathname,\n    handleRequest: ({\n      topicIdOrSlug,\n      orientation,\n      ...feedParams\n    }: TopicIdOrSlug & PaginationParams & OrientationParam) => ({\n      pathname: getPathname({ topicIdOrSlug }),\n      query: compactDefined({\n        ...Query.getFeedParams(feedParams),\n        orientation,\n      }),\n    }),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n","export const trackNonHotLinkedPhotoView = ({ appId }: { appId: string }) => ({\n  photoId,\n}: {\n  photoId: string | string[];\n}) => {\n  const ids = !Array.isArray(photoId) ? [photoId] : photoId;\n\n  if (ids.length > 20) {\n    throw new Error(\n      'You cannot track more than 20 photos at once. Please try again with fewer photos.',\n    );\n  }\n\n  return fetch(`views.unsplash.com/v?photo_id=${ids.join()}&app_id=${appId}`);\n};\n","export type SearchOrderBy = 'relevant' | 'latest' | 'editorial';\n\nexport type ColorId =\n  | 'white'\n  | 'black'\n  | 'yellow'\n  | 'orange'\n  | 'red'\n  | 'purple'\n  | 'magenta'\n  | 'green'\n  | 'teal'\n  | 'blue'\n  | 'black_and_white';\n\nexport type ContentFilter = 'high' | 'low';\n\nexport enum Language {\n  Afrikaans = 'af',\n  Amharic = 'am',\n  Arabic = 'ar',\n  Azerbaijani = 'az',\n  Belarusian = 'be',\n  Bulgarian = 'bg',\n  Bengali = 'bn',\n  Bosnian = 'bs',\n  Catalan = 'ca',\n  Cebuano = 'ceb',\n  Corsican = 'co',\n  Czech = 'cs',\n  Welsh = 'cy',\n  Danish = 'da',\n  German = 'de',\n  Greek = 'el',\n  English = 'en',\n  Esperanto = 'eo',\n  Spanish = 'es',\n  Estonian = 'et',\n  Basque = 'eu',\n  Persian = 'fa',\n  Finnish = 'fi',\n  French = 'fr',\n  Frisian = 'fy',\n  Irish = 'ga',\n  ScotsGaelic = 'gd',\n  Galician = 'gl',\n  Gujarati = 'gu',\n  Hausa = 'ha',\n  Hawaiian = 'haw',\n  Hindi = 'hi',\n  Hmong = 'hmn',\n  Croatian = 'hr',\n  HaitianCreole = 'ht',\n  Hungarian = 'hu',\n  Armenian = 'hy',\n  Indonesian = 'id',\n  Igbo = 'ig',\n  Icelandic = 'is',\n  Italian = 'it',\n  Hebrew = 'iw',\n  Japanese = 'ja',\n  Javanese = 'jw',\n  Georgian = 'ka',\n  Kazakh = 'kk',\n  Khmer = 'km',\n  Kannada = 'kn',\n  Korean = 'ko',\n  Kurdish = 'ku',\n  Kyrgyz = 'ky',\n  Latin = 'la',\n  Luxembourgish = 'lb',\n  Lao = 'lo',\n  Lithuanian = 'lt',\n  Latvian = 'lv',\n  Malagasy = 'mg',\n  Maori = 'mi',\n  Macedonian = 'mk',\n  Malayalam = 'ml',\n  Mongolian = 'mn',\n  Marathi = 'mr',\n  Malay = 'ms',\n  Maltese = 'mt',\n  Myanmar = 'my',\n  Nepali = 'ne',\n  Dutch = 'nl',\n  Norwegian = 'no',\n  Nyanja = 'ny',\n  Oriya = 'or',\n  Punjabi = 'pa',\n  Polish = 'pl',\n  Pashto = 'ps',\n  Portuguese = 'pt',\n  Romanian = 'ro',\n  Russian = 'ru',\n  Kinyarwanda = 'rw',\n  Sindhi = 'sd',\n  Sinhala = 'si',\n  Slovak = 'sk',\n  Slovenian = 'sl',\n  Samoan = 'sm',\n  Shona = 'sn',\n  Somali = 'so',\n  Albanian = 'sq',\n  Serbian = 'sr',\n  Sesotho = 'st',\n  Sundanese = 'su',\n  Swedish = 'sv',\n  Swahili = 'sw',\n  Tamil = 'ta',\n  Telugu = 'te',\n  Tajik = 'tg',\n  Thai = 'th',\n  Turkmen = 'tk',\n  Filipino = 'tl',\n  Turkish = 'tr',\n  Tatar = 'tt',\n  Uighur = 'ug',\n  Ukrainian = 'uk',\n  Urdu = 'ur',\n  Uzbek = 'uz',\n  Vietnamese = 'vi',\n  Xhosa = 'xh',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  ChineseSimplified = 'zh',\n  ChineseTraditional = 'zh-TW',\n  Zulu = 'zu',\n}\n","export enum OrderBy {\n  LATEST = 'latest',\n  POPULAR = 'popular',\n  VIEWS = 'views',\n  DOWNLOADS = 'downloads',\n  OLDEST = 'oldest',\n}\nexport type Orientation = 'landscape' | 'portrait' | 'squarish';\nexport type OrientationParam = {\n  orientation?: Orientation;\n};\nexport type Plus = 'mixed' | 'only' | 'none';\n\nexport type PaginationParams = {\n  /**\n   * API defaults to `10` if no value is provided\n   */\n  perPage?: number;\n  /**\n   * API defaults to `1` if no value is provided\n   */\n  page?: number;\n  /**\n   * API defaults to `\"latest\"` if no value is provided\n   */\n  orderBy?: OrderBy;\n};\n","import { flow } from './helpers/fp';\nimport { initMakeRequest } from './helpers/request';\nimport * as collections from './methods/collections';\nimport * as photos from './methods/photos';\nimport * as search from './methods/search';\nimport * as users from './methods/users';\nimport * as topics from './methods/topics';\n\nimport * as _internals from './internals';\n\nexport const createApi = flow(initMakeRequest, (makeRequest) => ({\n  photos: {\n    get: makeRequest(photos.get),\n    list: makeRequest(photos.list),\n    getStats: makeRequest(photos.getStats),\n    getRandom: makeRequest(photos.getRandom),\n    trackDownload: makeRequest(photos.trackDownload),\n  },\n  users: {\n    getPhotos: makeRequest(users.getPhotos),\n    getCollections: makeRequest(users.getCollections),\n    getLikes: makeRequest(users.getLikes),\n    getStatistics: makeRequest(users.getStatistics),\n    get: makeRequest(users.get),\n  },\n  search: {\n    getCollections: makeRequest(search.getCollections),\n    getPhotos: makeRequest(search.getPhotos),\n    getUsers: makeRequest(search.getUsers),\n  },\n  collections: {\n    getPhotos: makeRequest(collections.getPhotos),\n    get: makeRequest(collections.get),\n    list: makeRequest(collections.list),\n    getRelated: makeRequest(collections.getRelated),\n  },\n  topics: {\n    list: makeRequest(topics.list),\n    get: makeRequest(topics.get),\n    getPhotos: makeRequest(topics.getPhotos),\n  },\n}));\n\nexport { Language, ColorId, ContentFilter, SearchOrderBy } from './methods/search/types/request';\nexport { OrderBy, Orientation, Plus } from './types/request';\nexport { _internals };\n"],"names":["checkIsString","getRefinement","value","isDefined","x","undefined","getB","a","checkIsNonEmptyArray","length","compactDefined","obj","Object","keys","reduce","acc","key","_extends","_ref","flow","fns","Array","_len","_key","arguments","len","_len2","_key2","y","apply","i","call","checkIsObject","response","isArray","checkIsErrors","errors","every","checkIsApiError","getErrorForBadStatusCode","jsonResponse","source","DecodingError","message","CONTENT_TYPE_RESPONSE_HEADER","CONTENT_TYPE_JSON","checkIsJsonResponse","contentTypeHeader","headers","get","ContentTypeHelpers","type","getJsonResponse","json","_err","handleFetchResponse","handleResponse","ok","then","handledResponse","status","originalResponse","error","castResponse","addQueryToUrl","query","url","forEach","queryKey","searchParams","set","toString","addPathnameToUrl","pathname","buildUrl","apiUrl","URL","getQueryFromSearchParams","parseQueryAndPathname","_URL","createRequestHandler","fn","additionalFetchOptions","_fn","baseReqParams","_objectWithoutPropertiesLoose","_excluded","makeEndpoint","endpoint","initMakeRequest","accessKey","_ref$apiVersion","apiVersion","_ref$apiUrl","generalHeaders","providedFetch","fetch","generalFetchOptions","_excluded2","_ref2","handleRequest","_ref3","_ref3$method","method","endpointHeaders","body","signal","fetchOptions","Authorization","fetchToUse","TOTAL_RESPONSE_HEADER","getTotalFromApiFeedResponse","totalsStr","total","parseInt","Number","isInteger","handleFeedResponse","results","getCollections","collectionIds","collections","join","getTopics","topicIds","topics","getFeedParams","page","perPage","orderBy","per_page","order_by","COLLECTIONS_PATH_PREFIX","getPhotos","getPathname","collectionId","orientation","paginationParams","Query","_ref4","list","getRelated","_ref5","_ref6","PHOTOS_PATH_PREFIX","_params","feedParams","photoId","getStats","getRandom","_temp","contentFilter","queryParams","content_filter","trackDownload","downloadLocation","_parseQueryAndPathnam","Error","SEARCH_PATH_PREFIX","lang","filters","getUsers","_excluded3","USERS_PATH_PREFIX","username","stats","getLikes","_ref7","_ref8","getStatistics","_ref9","_ref10","_ref10$quantity","quantity","_ref10$resolution","resolution","BASE_TOPIC_PATH","getTopicPath","topicIdOrSlug","topicIdsOrSlugs","ids","topicPath","trackNonHotLinkedPhotoView","appId","Language","OrderBy","createApi","makeRequest","photos","users","search"],"mappings":"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"}
\ No newline at end of file
diff --git a/src/index.ts b/src/index.ts
index 85aba9fd88b979307d30e5dfd8ce890da63e1558..a8ff7691f414ca89f9485b663954104a4919e2b1 100644
--- a/src/index.ts
+++ b/src/index.ts
@@ -8,7 +8,7 @@ import * as topics from './methods/topics';
 
 import * as _internals from './internals';
 
-export const createApi = flow(initMakeRequest, makeRequest => ({
+export const createApi = flow(initMakeRequest, (makeRequest) => ({
   photos: {
     get: makeRequest(photos.get),
     list: makeRequest(photos.list),
@@ -20,6 +20,7 @@ export const createApi = flow(initMakeRequest, makeRequest => ({
     getPhotos: makeRequest(users.getPhotos),
     getCollections: makeRequest(users.getCollections),
     getLikes: makeRequest(users.getLikes),
+    getStatistics: makeRequest(users.getStatistics),
     get: makeRequest(users.get),
   },
   search: {
diff --git a/src/methods/users/index.ts b/src/methods/users/index.ts
index c663d73823e62fa35c2b501fa0c6d1b529181010..f2aaad40923a40a438abc65b27423acecd02edd1 100644
--- a/src/methods/users/index.ts
+++ b/src/methods/users/index.ts
@@ -86,3 +86,27 @@ export const getCollections = (() => {
     handleResponse: handleFeedResponse<Collection.Basic>(),
   });
 })();
+
+export const getStatistics = (() => {
+  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/statistics`;
+  return makeEndpoint({
+    getPathname,
+    handleRequest: createRequestHandler(
+      ({
+        username,
+        quantity = 30,
+        resolution = 'days',
+      }: Username & {
+        quantity?: number;
+        resolution?: string;
+      }) => ({
+        pathname: getPathname({ username }),
+        query: {
+          quantity,
+          resolution,
+        },
+      }),
+    ),
+    handleResponse: castResponse<User.Statistics>(),
+  });
+})();
diff --git a/src/methods/users/types.ts b/src/methods/users/types.ts
index d248fa8a40fd935eb812476dce81460b1ed057ea..ecc292fe2c6780215b0a3eba008b0684a79d4f8a 100644
--- a/src/methods/users/types.ts
+++ b/src/methods/users/types.ts
@@ -41,3 +41,33 @@ export interface Full extends Medium {
   followers_count: number;
   following_count: number;
 }
+
+export interface Statistics {
+  username: string;
+  downloads: {
+    total: number;
+    historical: {
+      change: number;
+      quantity: number;
+      average: number;
+      resolution: string;
+      values: {
+        date: string;
+        quantity: number;
+      }[];
+    };
+  };
+  views: {
+    total: number;
+    historical: {
+      change: number;
+      quantity: number;
+      average: number;
+      resolution: string;
+      values: {
+        date: string;
+        quantity: number;
+      }[];
+    };
+  };
+}